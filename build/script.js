(() => {
    var __webpack_modules__ = {
            136: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                "use strict";
                function _typeof(t) {
                    return (_typeof =
                        "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                            ? function (t) {
                                  return typeof t;
                              }
                            : function (t) {
                                  return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                              })(t);
                }
                var REACT_ELEMENT_TYPE;
                function _jsx(t, e, r, i) {
                    REACT_ELEMENT_TYPE || (REACT_ELEMENT_TYPE = ("function" == typeof Symbol && Symbol.for && Symbol.for("react.element")) || 60103);
                    var n = t && t.defaultProps,
                        s = arguments.length - 3;
                    if ((e || 0 === s || (e = { children: void 0 }), 1 === s)) e.children = i;
                    else if (s > 1) {
                        for (var a = new Array(s), o = 0; o < s; o++) a[o] = arguments[o + 3];
                        e.children = a;
                    }
                    if (e && n) for (var l in n) void 0 === e[l] && (e[l] = n[l]);
                    else e || (e = n || {});
                    return { $$typeof: REACT_ELEMENT_TYPE, type: t, key: void 0 === r ? null : "" + r, ref: null, props: e, _owner: null };
                }
                function _asyncIterator(t) {
                    var e;
                    if ("undefined" != typeof Symbol) {
                        if (Symbol.asyncIterator && null != (e = t[Symbol.asyncIterator])) return e.call(t);
                        if (Symbol.iterator && null != (e = t[Symbol.iterator])) return e.call(t);
                    }
                    throw new TypeError("Object is not async iterable");
                }
                function _AwaitValue(t) {
                    this.wrapped = t;
                }
                function _AsyncGenerator(t) {
                    var e, r;
                    function i(e, r) {
                        try {
                            var s = t[e](r),
                                a = s.value,
                                o = a instanceof _AwaitValue;
                            Promise.resolve(o ? a.wrapped : a).then(
                                function (t) {
                                    o ? i("return" === e ? "return" : "next", t) : n(s.done ? "return" : "normal", t);
                                },
                                function (t) {
                                    i("throw", t);
                                }
                            );
                        } catch (t) {
                            n("throw", t);
                        }
                    }
                    function n(t, n) {
                        switch (t) {
                            case "return":
                                e.resolve({ value: n, done: !0 });
                                break;
                            case "throw":
                                e.reject(n);
                                break;
                            default:
                                e.resolve({ value: n, done: !1 });
                        }
                        (e = e.next) ? i(e.key, e.arg) : (r = null);
                    }
                    (this._invoke = function (t, n) {
                        return new Promise(function (s, a) {
                            var o = { key: t, arg: n, resolve: s, reject: a, next: null };
                            r ? (r = r.next = o) : ((e = r = o), i(t, n));
                        });
                    }),
                        "function" != typeof t.return && (this.return = void 0);
                }
                function _wrapAsyncGenerator(t) {
                    return function () {
                        return new _AsyncGenerator(t.apply(this, arguments));
                    };
                }
                function _awaitAsyncGenerator(t) {
                    return new _AwaitValue(t);
                }
                function _asyncGeneratorDelegate(t, e) {
                    var r = {},
                        i = !1;
                    function n(r, n) {
                        return (
                            (i = !0),
                            (n = new Promise(function (e) {
                                e(t[r](n));
                            })),
                            { done: !1, value: e(n) }
                        );
                    }
                    return (
                        "function" == typeof Symbol &&
                            Symbol.iterator &&
                            (r[Symbol.iterator] = function () {
                                return this;
                            }),
                        (r.next = function (t) {
                            return i ? ((i = !1), t) : n("next", t);
                        }),
                        "function" == typeof t.throw &&
                            (r.throw = function (t) {
                                if (i) throw ((i = !1), t);
                                return n("throw", t);
                            }),
                        "function" == typeof t.return &&
                            (r.return = function (t) {
                                return i ? ((i = !1), t) : n("return", t);
                            }),
                        r
                    );
                }
                function asyncGeneratorStep(t, e, r, i, n, s, a) {
                    try {
                        var o = t[s](a),
                            l = o.value;
                    } catch (t) {
                        return void r(t);
                    }
                    o.done ? e(l) : Promise.resolve(l).then(i, n);
                }
                function _asyncToGenerator(t) {
                    return function () {
                        var e = this,
                            r = arguments;
                        return new Promise(function (i, n) {
                            var s = t.apply(e, r);
                            function a(t) {
                                asyncGeneratorStep(s, i, n, a, o, "next", t);
                            }
                            function o(t) {
                                asyncGeneratorStep(s, i, n, a, o, "throw", t);
                            }
                            a(void 0);
                        });
                    };
                }
                function _classCallCheck(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                }
                function _defineProperties(t, e) {
                    for (var r = 0; r < e.length; r++) {
                        var i = e[r];
                        (i.enumerable = i.enumerable || !1), (i.configurable = !0), "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i);
                    }
                }
                function _createClass(t, e, r) {
                    return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), t;
                }
                function _defineEnumerableProperties(t, e) {
                    for (var r in e) ((s = e[r]).configurable = s.enumerable = !0), "value" in s && (s.writable = !0), Object.defineProperty(t, r, s);
                    if (Object.getOwnPropertySymbols)
                        for (var i = Object.getOwnPropertySymbols(e), n = 0; n < i.length; n++) {
                            var s,
                                a = i[n];
                            ((s = e[a]).configurable = s.enumerable = !0), "value" in s && (s.writable = !0), Object.defineProperty(t, a, s);
                        }
                    return t;
                }
                function _defaults(t, e) {
                    for (var r = Object.getOwnPropertyNames(e), i = 0; i < r.length; i++) {
                        var n = r[i],
                            s = Object.getOwnPropertyDescriptor(e, n);
                        s && s.configurable && void 0 === t[n] && Object.defineProperty(t, n, s);
                    }
                    return t;
                }
                function _defineProperty(t, e, r) {
                    return e in t ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : (t[e] = r), t;
                }
                function _extends() {
                    return (_extends =
                        Object.assign ||
                        function (t) {
                            for (var e = 1; e < arguments.length; e++) {
                                var r = arguments[e];
                                for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
                            }
                            return t;
                        }).apply(this, arguments);
                }
                function _objectSpread(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? Object(arguments[e]) : {},
                            i = Object.keys(r);
                        "function" == typeof Object.getOwnPropertySymbols &&
                            (i = i.concat(
                                Object.getOwnPropertySymbols(r).filter(function (t) {
                                    return Object.getOwnPropertyDescriptor(r, t).enumerable;
                                })
                            )),
                            i.forEach(function (e) {
                                _defineProperty(t, e, r[e]);
                            });
                    }
                    return t;
                }
                function ownKeys(t, e) {
                    var r = Object.keys(t);
                    if (Object.getOwnPropertySymbols) {
                        var i = Object.getOwnPropertySymbols(t);
                        e &&
                            (i = i.filter(function (e) {
                                return Object.getOwnPropertyDescriptor(t, e).enumerable;
                            })),
                            r.push.apply(r, i);
                    }
                    return r;
                }
                function _objectSpread2(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = null != arguments[e] ? arguments[e] : {};
                        e % 2
                            ? ownKeys(Object(r), !0).forEach(function (e) {
                                  _defineProperty(t, e, r[e]);
                              })
                            : Object.getOwnPropertyDescriptors
                            ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r))
                            : ownKeys(Object(r)).forEach(function (e) {
                                  Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
                              });
                    }
                    return t;
                }
                function _inherits(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    (t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } })), e && _setPrototypeOf(t, e);
                }
                function _inheritsLoose(t, e) {
                    (t.prototype = Object.create(e.prototype)), (t.prototype.constructor = t), _setPrototypeOf(t, e);
                }
                function _getPrototypeOf(t) {
                    return (_getPrototypeOf = Object.setPrototypeOf
                        ? Object.getPrototypeOf
                        : function (t) {
                              return t.__proto__ || Object.getPrototypeOf(t);
                          })(t);
                }
                function _setPrototypeOf(t, e) {
                    return (_setPrototypeOf =
                        Object.setPrototypeOf ||
                        function (t, e) {
                            return (t.__proto__ = e), t;
                        })(t, e);
                }
                function _isNativeReflectConstruct() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
                    } catch (t) {
                        return !1;
                    }
                }
                function _construct(t, e, r) {
                    return (_construct = _isNativeReflectConstruct()
                        ? Reflect.construct
                        : function (t, e, r) {
                              var i = [null];
                              i.push.apply(i, e);
                              var n = new (Function.bind.apply(t, i))();
                              return r && _setPrototypeOf(n, r.prototype), n;
                          }).apply(null, arguments);
                }
                function _isNativeFunction(t) {
                    return -1 !== Function.toString.call(t).indexOf("[native code]");
                }
                function _wrapNativeSuper(t) {
                    var e = "function" == typeof Map ? new Map() : void 0;
                    return (_wrapNativeSuper = function (t) {
                        if (null === t || !_isNativeFunction(t)) return t;
                        if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
                        if (void 0 !== e) {
                            if (e.has(t)) return e.get(t);
                            e.set(t, r);
                        }
                        function r() {
                            return _construct(t, arguments, _getPrototypeOf(this).constructor);
                        }
                        return (r.prototype = Object.create(t.prototype, { constructor: { value: r, enumerable: !1, writable: !0, configurable: !0 } })), _setPrototypeOf(r, t);
                    })(t);
                }
                function _instanceof(t, e) {
                    return null != e && "undefined" != typeof Symbol && e[Symbol.hasInstance] ? !!e[Symbol.hasInstance](t) : t instanceof e;
                }
                function _interopRequireDefault(t) {
                    return t && t.__esModule ? t : { default: t };
                }
                function _getRequireWildcardCache() {
                    if ("function" != typeof WeakMap) return null;
                    var t = new WeakMap();
                    return (
                        (_getRequireWildcardCache = function () {
                            return t;
                        }),
                        t
                    );
                }
                function _interopRequireWildcard(t) {
                    if (t && t.__esModule) return t;
                    if (null === t || ("object" != typeof t && "function" != typeof t)) return { default: t };
                    var e = _getRequireWildcardCache();
                    if (e && e.has(t)) return e.get(t);
                    var r = {},
                        i = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var n in t)
                        if (Object.prototype.hasOwnProperty.call(t, n)) {
                            var s = i ? Object.getOwnPropertyDescriptor(t, n) : null;
                            s && (s.get || s.set) ? Object.defineProperty(r, n, s) : (r[n] = t[n]);
                        }
                    return (r.default = t), e && e.set(t, r), r;
                }
                function _newArrowCheck(t, e) {
                    if (t !== e) throw new TypeError("Cannot instantiate an arrow function");
                }
                function _objectDestructuringEmpty(t) {
                    if (null == t) throw new TypeError("Cannot destructure undefined");
                }
                function _objectWithoutPropertiesLoose(t, e) {
                    if (null == t) return {};
                    var r,
                        i,
                        n = {},
                        s = Object.keys(t);
                    for (i = 0; i < s.length; i++) (r = s[i]), e.indexOf(r) >= 0 || (n[r] = t[r]);
                    return n;
                }
                function _objectWithoutProperties(t, e) {
                    if (null == t) return {};
                    var r,
                        i,
                        n = _objectWithoutPropertiesLoose(t, e);
                    if (Object.getOwnPropertySymbols) {
                        var s = Object.getOwnPropertySymbols(t);
                        for (i = 0; i < s.length; i++) (r = s[i]), e.indexOf(r) >= 0 || (Object.prototype.propertyIsEnumerable.call(t, r) && (n[r] = t[r]));
                    }
                    return n;
                }
                function _assertThisInitialized(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t;
                }
                function _possibleConstructorReturn(t, e) {
                    return !e || ("object" != typeof e && "function" != typeof e) ? _assertThisInitialized(t) : e;
                }
                function _createSuper(t) {
                    var e = _isNativeReflectConstruct();
                    return function () {
                        var r,
                            i = _getPrototypeOf(t);
                        if (e) {
                            var n = _getPrototypeOf(this).constructor;
                            r = Reflect.construct(i, arguments, n);
                        } else r = i.apply(this, arguments);
                        return _possibleConstructorReturn(this, r);
                    };
                }
                function _superPropBase(t, e) {
                    for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = _getPrototypeOf(t)); );
                    return t;
                }
                function _get(t, e, r) {
                    return (_get =
                        "undefined" != typeof Reflect && Reflect.get
                            ? Reflect.get
                            : function (t, e, r) {
                                  var i = _superPropBase(t, e);
                                  if (i) {
                                      var n = Object.getOwnPropertyDescriptor(i, e);
                                      return n.get ? n.get.call(r) : n.value;
                                  }
                              })(t, e, r || t);
                }
                function set(t, e, r, i) {
                    return (set =
                        "undefined" != typeof Reflect && Reflect.set
                            ? Reflect.set
                            : function (t, e, r, i) {
                                  var n,
                                      s = _superPropBase(t, e);
                                  if (s) {
                                      if ((n = Object.getOwnPropertyDescriptor(s, e)).set) return n.set.call(i, r), !0;
                                      if (!n.writable) return !1;
                                  }
                                  if ((n = Object.getOwnPropertyDescriptor(i, e))) {
                                      if (!n.writable) return !1;
                                      (n.value = r), Object.defineProperty(i, e, n);
                                  } else _defineProperty(i, e, r);
                                  return !0;
                              })(t, e, r, i);
                }
                function _set(t, e, r, i, n) {
                    if (!set(t, e, r, i || t) && n) throw new Error("failed to set property");
                    return r;
                }
                function _taggedTemplateLiteral(t, e) {
                    return e || (e = t.slice(0)), Object.freeze(Object.defineProperties(t, { raw: { value: Object.freeze(e) } }));
                }
                function _taggedTemplateLiteralLoose(t, e) {
                    return e || (e = t.slice(0)), (t.raw = e), t;
                }
                function _readOnlyError(t) {
                    throw new TypeError('"' + t + '" is read-only');
                }
                function _writeOnlyError(t) {
                    throw new TypeError('"' + t + '" is write-only');
                }
                function _classNameTDZError(t) {
                    throw new Error('Class "' + t + '" cannot be referenced in computed property keys.');
                }
                function _temporalUndefined() {}
                function _tdz(t) {
                    throw new ReferenceError(t + " is not defined - temporal dead zone");
                }
                function _temporalRef(t, e) {
                    return t === _temporalUndefined ? _tdz(e) : t;
                }
                function _slicedToArray(t, e) {
                    return _arrayWithHoles(t) || _iterableToArrayLimit(t, e) || _unsupportedIterableToArray(t, e) || _nonIterableRest();
                }
                function _slicedToArrayLoose(t, e) {
                    return _arrayWithHoles(t) || _iterableToArrayLimitLoose(t, e) || _unsupportedIterableToArray(t, e) || _nonIterableRest();
                }
                function _toArray(t) {
                    return _arrayWithHoles(t) || _iterableToArray(t) || _unsupportedIterableToArray(t) || _nonIterableRest();
                }
                function _toConsumableArray(t) {
                    return _arrayWithoutHoles(t) || _iterableToArray(t) || _unsupportedIterableToArray(t) || _nonIterableSpread();
                }
                function _arrayWithoutHoles(t) {
                    if (Array.isArray(t)) return _arrayLikeToArray(t);
                }
                function _arrayWithHoles(t) {
                    if (Array.isArray(t)) return t;
                }
                function _maybeArrayLike(t, e, r) {
                    if (e && !Array.isArray(e) && "number" == typeof e.length) {
                        var i = e.length;
                        return _arrayLikeToArray(e, void 0 !== r && r < i ? r : i);
                    }
                    return t(e, r);
                }
                function _iterableToArray(t) {
                    if ("undefined" != typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t);
                }
                function _iterableToArrayLimit(t, e) {
                    if ("undefined" != typeof Symbol && Symbol.iterator in Object(t)) {
                        var r = [],
                            i = !0,
                            n = !1,
                            s = void 0;
                        try {
                            for (var a, o = t[Symbol.iterator](); !(i = (a = o.next()).done) && (r.push(a.value), !e || r.length !== e); i = !0);
                        } catch (t) {
                            (n = !0), (s = t);
                        } finally {
                            try {
                                i || null == o.return || o.return();
                            } finally {
                                if (n) throw s;
                            }
                        }
                        return r;
                    }
                }
                function _iterableToArrayLimitLoose(t, e) {
                    if ("undefined" != typeof Symbol && Symbol.iterator in Object(t)) {
                        for (var r, i = [], n = t[Symbol.iterator](); !(r = n.next()).done && (i.push(r.value), !e || i.length !== e); );
                        return i;
                    }
                }
                function _unsupportedIterableToArray(t, e) {
                    if (t) {
                        if ("string" == typeof t) return _arrayLikeToArray(t, e);
                        var r = Object.prototype.toString.call(t).slice(8, -1);
                        return (
                            "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _arrayLikeToArray(t, e) : void 0
                        );
                    }
                }
                function _arrayLikeToArray(t, e) {
                    (null == e || e > t.length) && (e = t.length);
                    for (var r = 0, i = new Array(e); r < e; r++) i[r] = t[r];
                    return i;
                }
                function _nonIterableSpread() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                function _nonIterableRest() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                function _createForOfIteratorHelper(t, e) {
                    var r;
                    if ("undefined" == typeof Symbol || null == t[Symbol.iterator]) {
                        if (Array.isArray(t) || (r = _unsupportedIterableToArray(t)) || (e && t && "number" == typeof t.length)) {
                            r && (t = r);
                            var i = 0,
                                n = function () {};
                            return {
                                s: n,
                                n: function () {
                                    return i >= t.length ? { done: !0 } : { done: !1, value: t[i++] };
                                },
                                e: function (t) {
                                    throw t;
                                },
                                f: n,
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    var s,
                        a = !0,
                        o = !1;
                    return {
                        s: function () {
                            r = t[Symbol.iterator]();
                        },
                        n: function () {
                            var t = r.next();
                            return (a = t.done), t;
                        },
                        e: function (t) {
                            (o = !0), (s = t);
                        },
                        f: function () {
                            try {
                                a || null == r.return || r.return();
                            } finally {
                                if (o) throw s;
                            }
                        },
                    };
                }
                function _createForOfIteratorHelperLoose(t, e) {
                    var r;
                    if ("undefined" == typeof Symbol || null == t[Symbol.iterator]) {
                        if (Array.isArray(t) || (r = _unsupportedIterableToArray(t)) || (e && t && "number" == typeof t.length)) {
                            r && (t = r);
                            var i = 0;
                            return function () {
                                return i >= t.length ? { done: !0 } : { done: !1, value: t[i++] };
                            };
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                    }
                    return (r = t[Symbol.iterator]()).next.bind(r);
                }
                function _skipFirstGeneratorNext(t) {
                    return function () {
                        var e = t.apply(this, arguments);
                        return e.next(), e;
                    };
                }
                function _toPrimitive(t, e) {
                    if ("object" != typeof t || null === t) return t;
                    var r = t[Symbol.toPrimitive];
                    if (void 0 !== r) {
                        var i = r.call(t, e || "default");
                        if ("object" != typeof i) return i;
                        throw new TypeError("@@toPrimitive must return a primitive value.");
                    }
                    return ("string" === e ? String : Number)(t);
                }
                function _toPropertyKey(t) {
                    var e = _toPrimitive(t, "string");
                    return "symbol" == typeof e ? e : String(e);
                }
                function _initializerWarningHelper(t, e) {
                    throw new Error("Decorating class property failed. Please ensure that proposal-class-properties is enabled and runs after the decorators transform.");
                }
                function _initializerDefineProperty(t, e, r, i) {
                    r && Object.defineProperty(t, e, { enumerable: r.enumerable, configurable: r.configurable, writable: r.writable, value: r.initializer ? r.initializer.call(i) : void 0 });
                }
                function _applyDecoratedDescriptor(t, e, r, i, n) {
                    var s = {};
                    return (
                        Object.keys(i).forEach(function (t) {
                            s[t] = i[t];
                        }),
                        (s.enumerable = !!s.enumerable),
                        (s.configurable = !!s.configurable),
                        ("value" in s || s.initializer) && (s.writable = !0),
                        (s = r
                            .slice()
                            .reverse()
                            .reduce(function (r, i) {
                                return i(t, e, r) || r;
                            }, s)),
                        n && void 0 !== s.initializer && ((s.value = s.initializer ? s.initializer.call(n) : void 0), (s.initializer = void 0)),
                        void 0 === s.initializer && (Object.defineProperty(t, e, s), (s = null)),
                        s
                    );
                }
                "function" == typeof Symbol &&
                    Symbol.asyncIterator &&
                    (_AsyncGenerator.prototype[Symbol.asyncIterator] = function () {
                        return this;
                    }),
                    (_AsyncGenerator.prototype.next = function (t) {
                        return this._invoke("next", t);
                    }),
                    (_AsyncGenerator.prototype.throw = function (t) {
                        return this._invoke("throw", t);
                    }),
                    (_AsyncGenerator.prototype.return = function (t) {
                        return this._invoke("return", t);
                    });
                var id = 0;
                function _classPrivateFieldLooseKey(t) {
                    return "__private_" + id++ + "_" + t;
                }
                function _classPrivateFieldLooseBase(t, e) {
                    if (!Object.prototype.hasOwnProperty.call(t, e)) throw new TypeError("attempted to use private field on non-instance");
                    return t;
                }
                function _classPrivateFieldGet(t, e) {
                    return _classApplyDescriptorGet(t, _classExtractFieldDescriptor(t, e, "get"));
                }
                function _classPrivateFieldSet(t, e, r) {
                    return _classApplyDescriptorSet(t, _classExtractFieldDescriptor(t, e, "set"), r), r;
                }
                function _classPrivateFieldDestructureSet(t, e) {
                    return _classApplyDescriptorDestructureSet(t, _classExtractFieldDescriptor(t, e, "set"));
                }
                function _classExtractFieldDescriptor(t, e, r) {
                    if (!e.has(t)) throw new TypeError("attempted to " + r + " private field on non-instance");
                    return e.get(t);
                }
                function _classStaticPrivateFieldSpecGet(t, e, r) {
                    return _classCheckPrivateStaticAccess(t, e), _classCheckPrivateStaticFieldDescriptor(r, "get"), _classApplyDescriptorGet(t, r);
                }
                function _classStaticPrivateFieldSpecSet(t, e, r, i) {
                    return _classCheckPrivateStaticAccess(t, e), _classCheckPrivateStaticFieldDescriptor(r, "set"), _classApplyDescriptorSet(t, r, i), i;
                }
                function _classStaticPrivateMethodGet(t, e, r) {
                    return _classCheckPrivateStaticAccess(t, e), r;
                }
                function _classStaticPrivateMethodSet() {
                    throw new TypeError("attempted to set read only static private field");
                }
                function _classApplyDescriptorGet(t, e) {
                    return e.get ? e.get.call(t) : e.value;
                }
                function _classApplyDescriptorSet(t, e, r) {
                    if (e.set) e.set.call(t, r);
                    else {
                        if (!e.writable) throw new TypeError("attempted to set read only private field");
                        e.value = r;
                    }
                }
                function _classApplyDescriptorDestructureSet(t, e) {
                    if (e.set)
                        return (
                            "__destrObj" in e ||
                                (e.__destrObj = {
                                    set value(r) {
                                        e.set.call(t, r);
                                    },
                                }),
                            e.__destrObj
                        );
                    if (!e.writable) throw new TypeError("attempted to set read only private field");
                    return e;
                }
                function _classStaticPrivateFieldDestructureSet(t, e, r) {
                    return _classCheckPrivateStaticAccess(t, e), _classCheckPrivateStaticFieldDescriptor(r, "set"), _classApplyDescriptorDestructureSet(t, r);
                }
                function _classCheckPrivateStaticAccess(t, e) {
                    if (t !== e) throw new TypeError("Private static access of wrong provenance");
                }
                function _classCheckPrivateStaticFieldDescriptor(t, e) {
                    if (void 0 === t) throw new TypeError("attempted to " + e + " private static field before its declaration");
                }
                function _decorate(t, e, r, i) {
                    var n = _getDecoratorsApi();
                    if (i) for (var s = 0; s < i.length; s++) n = i[s](n);
                    var a = e(function (t) {
                            n.initializeInstanceElements(t, o.elements);
                        }, r),
                        o = n.decorateClass(_coalesceClassElements(a.d.map(_createElementDescriptor)), t);
                    return n.initializeClassElements(a.F, o.elements), n.runClassFinishers(a.F, o.finishers);
                }
                function _getDecoratorsApi() {
                    _getDecoratorsApi = function () {
                        return t;
                    };
                    var t = {
                        elementsDefinitionOrder: [["method"], ["field"]],
                        initializeInstanceElements: function (t, e) {
                            ["method", "field"].forEach(function (r) {
                                e.forEach(function (e) {
                                    e.kind === r && "own" === e.placement && this.defineClassElement(t, e);
                                }, this);
                            }, this);
                        },
                        initializeClassElements: function (t, e) {
                            var r = t.prototype;
                            ["method", "field"].forEach(function (i) {
                                e.forEach(function (e) {
                                    var n = e.placement;
                                    if (e.kind === i && ("static" === n || "prototype" === n)) {
                                        var s = "static" === n ? t : r;
                                        this.defineClassElement(s, e);
                                    }
                                }, this);
                            }, this);
                        },
                        defineClassElement: function (t, e) {
                            var r = e.descriptor;
                            if ("field" === e.kind) {
                                var i = e.initializer;
                                r = { enumerable: r.enumerable, writable: r.writable, configurable: r.configurable, value: void 0 === i ? void 0 : i.call(t) };
                            }
                            Object.defineProperty(t, e.key, r);
                        },
                        decorateClass: function (t, e) {
                            var r = [],
                                i = [],
                                n = { static: [], prototype: [], own: [] };
                            if (
                                (t.forEach(function (t) {
                                    this.addElementPlacement(t, n);
                                }, this),
                                t.forEach(function (t) {
                                    if (!_hasDecorators(t)) return r.push(t);
                                    var e = this.decorateElement(t, n);
                                    r.push(e.element), r.push.apply(r, e.extras), i.push.apply(i, e.finishers);
                                }, this),
                                !e)
                            )
                                return { elements: r, finishers: i };
                            var s = this.decorateConstructor(r, e);
                            return i.push.apply(i, s.finishers), (s.finishers = i), s;
                        },
                        addElementPlacement: function (t, e, r) {
                            var i = e[t.placement];
                            if (!r && -1 !== i.indexOf(t.key)) throw new TypeError("Duplicated element (" + t.key + ")");
                            i.push(t.key);
                        },
                        decorateElement: function (t, e) {
                            for (var r = [], i = [], n = t.decorators, s = n.length - 1; s >= 0; s--) {
                                var a = e[t.placement];
                                a.splice(a.indexOf(t.key), 1);
                                var o = this.fromElementDescriptor(t),
                                    l = this.toElementFinisherExtras((0, n[s])(o) || o);
                                (t = l.element), this.addElementPlacement(t, e), l.finisher && i.push(l.finisher);
                                var h = l.extras;
                                if (h) {
                                    for (var c = 0; c < h.length; c++) this.addElementPlacement(h[c], e);
                                    r.push.apply(r, h);
                                }
                            }
                            return { element: t, finishers: i, extras: r };
                        },
                        decorateConstructor: function (t, e) {
                            for (var r = [], i = e.length - 1; i >= 0; i--) {
                                var n = this.fromClassDescriptor(t),
                                    s = this.toClassDescriptor((0, e[i])(n) || n);
                                if ((void 0 !== s.finisher && r.push(s.finisher), void 0 !== s.elements)) {
                                    t = s.elements;
                                    for (var a = 0; a < t.length - 1; a++) for (var o = a + 1; o < t.length; o++) if (t[a].key === t[o].key && t[a].placement === t[o].placement) throw new TypeError("Duplicated element (" + t[a].key + ")");
                                }
                            }
                            return { elements: t, finishers: r };
                        },
                        fromElementDescriptor: function (t) {
                            var e = { kind: t.kind, key: t.key, placement: t.placement, descriptor: t.descriptor };
                            return Object.defineProperty(e, Symbol.toStringTag, { value: "Descriptor", configurable: !0 }), "field" === t.kind && (e.initializer = t.initializer), e;
                        },
                        toElementDescriptors: function (t) {
                            if (void 0 !== t)
                                return _toArray(t).map(function (t) {
                                    var e = this.toElementDescriptor(t);
                                    return this.disallowProperty(t, "finisher", "An element descriptor"), this.disallowProperty(t, "extras", "An element descriptor"), e;
                                }, this);
                        },
                        toElementDescriptor: function (t) {
                            var e = String(t.kind);
                            if ("method" !== e && "field" !== e) throw new TypeError('An element descriptor\'s .kind property must be either "method" or "field", but a decorator created an element descriptor with .kind "' + e + '"');
                            var r = _toPropertyKey(t.key),
                                i = String(t.placement);
                            if ("static" !== i && "prototype" !== i && "own" !== i)
                                throw new TypeError('An element descriptor\'s .placement property must be one of "static", "prototype" or "own", but a decorator created an element descriptor with .placement "' + i + '"');
                            var n = t.descriptor;
                            this.disallowProperty(t, "elements", "An element descriptor");
                            var s = { kind: e, key: r, placement: i, descriptor: Object.assign({}, n) };
                            return (
                                "field" !== e
                                    ? this.disallowProperty(t, "initializer", "A method descriptor")
                                    : (this.disallowProperty(n, "get", "The property descriptor of a field descriptor"),
                                      this.disallowProperty(n, "set", "The property descriptor of a field descriptor"),
                                      this.disallowProperty(n, "value", "The property descriptor of a field descriptor"),
                                      (s.initializer = t.initializer)),
                                s
                            );
                        },
                        toElementFinisherExtras: function (t) {
                            return { element: this.toElementDescriptor(t), finisher: _optionalCallableProperty(t, "finisher"), extras: this.toElementDescriptors(t.extras) };
                        },
                        fromClassDescriptor: function (t) {
                            var e = { kind: "class", elements: t.map(this.fromElementDescriptor, this) };
                            return Object.defineProperty(e, Symbol.toStringTag, { value: "Descriptor", configurable: !0 }), e;
                        },
                        toClassDescriptor: function (t) {
                            var e = String(t.kind);
                            if ("class" !== e) throw new TypeError('A class descriptor\'s .kind property must be "class", but a decorator created a class descriptor with .kind "' + e + '"');
                            this.disallowProperty(t, "key", "A class descriptor"),
                                this.disallowProperty(t, "placement", "A class descriptor"),
                                this.disallowProperty(t, "descriptor", "A class descriptor"),
                                this.disallowProperty(t, "initializer", "A class descriptor"),
                                this.disallowProperty(t, "extras", "A class descriptor");
                            var r = _optionalCallableProperty(t, "finisher");
                            return { elements: this.toElementDescriptors(t.elements), finisher: r };
                        },
                        runClassFinishers: function (t, e) {
                            for (var r = 0; r < e.length; r++) {
                                var i = (0, e[r])(t);
                                if (void 0 !== i) {
                                    if ("function" != typeof i) throw new TypeError("Finishers must return a constructor.");
                                    t = i;
                                }
                            }
                            return t;
                        },
                        disallowProperty: function (t, e, r) {
                            if (void 0 !== t[e]) throw new TypeError(r + " can't have a ." + e + " property.");
                        },
                    };
                    return t;
                }
                function _createElementDescriptor(t) {
                    var e,
                        r = _toPropertyKey(t.key);
                    "method" === t.kind
                        ? (e = { value: t.value, writable: !0, configurable: !0, enumerable: !1 })
                        : "get" === t.kind
                        ? (e = { get: t.value, configurable: !0, enumerable: !1 })
                        : "set" === t.kind
                        ? (e = { set: t.value, configurable: !0, enumerable: !1 })
                        : "field" === t.kind && (e = { configurable: !0, writable: !0, enumerable: !0 });
                    var i = { kind: "field" === t.kind ? "field" : "method", key: r, placement: t.static ? "static" : "field" === t.kind ? "own" : "prototype", descriptor: e };
                    return t.decorators && (i.decorators = t.decorators), "field" === t.kind && (i.initializer = t.value), i;
                }
                function _coalesceGetterSetter(t, e) {
                    void 0 !== t.descriptor.get ? (e.descriptor.get = t.descriptor.get) : (e.descriptor.set = t.descriptor.set);
                }
                function _coalesceClassElements(t) {
                    for (
                        var e = [],
                            r = function (t) {
                                return "method" === t.kind && t.key === s.key && t.placement === s.placement;
                            },
                            i = 0;
                        i < t.length;
                        i++
                    ) {
                        var n,
                            s = t[i];
                        if ("method" === s.kind && (n = e.find(r)))
                            if (_isDataDescriptor(s.descriptor) || _isDataDescriptor(n.descriptor)) {
                                if (_hasDecorators(s) || _hasDecorators(n)) throw new ReferenceError("Duplicated methods (" + s.key + ") can't be decorated.");
                                n.descriptor = s.descriptor;
                            } else {
                                if (_hasDecorators(s)) {
                                    if (_hasDecorators(n)) throw new ReferenceError("Decorators can't be placed on different accessors with for the same property (" + s.key + ").");
                                    n.decorators = s.decorators;
                                }
                                _coalesceGetterSetter(s, n);
                            }
                        else e.push(s);
                    }
                    return e;
                }
                function _hasDecorators(t) {
                    return t.decorators && t.decorators.length;
                }
                function _isDataDescriptor(t) {
                    return void 0 !== t && !(void 0 === t.value && void 0 === t.writable);
                }
                function _optionalCallableProperty(t, e) {
                    var r = t[e];
                    if (void 0 !== r && "function" != typeof r) throw new TypeError("Expected '" + e + "' to be a function");
                    return r;
                }
                function _classPrivateMethodGet(t, e, r) {
                    if (!e.has(t)) throw new TypeError("attempted to get private field on non-instance");
                    return r;
                }
                function _classPrivateMethodSet() {
                    throw new TypeError("attempted to reassign private method");
                }
                function _wrapRegExp(t, e) {
                    _wrapRegExp = function (t, e) {
                        return new s(t, void 0, e);
                    };
                    var r = _wrapNativeSuper(RegExp),
                        i = RegExp.prototype,
                        n = new WeakMap();
                    function s(t, e, i) {
                        var s = r.call(this, t, e);
                        return n.set(s, i || n.get(t)), s;
                    }
                    function a(t, e) {
                        var r = n.get(e);
                        return Object.keys(r).reduce(function (e, i) {
                            return (e[i] = t[r[i]]), e;
                        }, Object.create(null));
                    }
                    return (
                        _inherits(s, r),
                        (s.prototype.exec = function (t) {
                            var e = i.exec.call(this, t);
                            return e && (e.groups = a(e, this)), e;
                        }),
                        (s.prototype[Symbol.replace] = function (t, e) {
                            if ("string" == typeof e) {
                                var r = n.get(this);
                                return i[Symbol.replace].call(
                                    this,
                                    t,
                                    e.replace(/\$<([^>]+)>/g, function (t, e) {
                                        return "$" + r[e];
                                    })
                                );
                            }
                            if ("function" == typeof e) {
                                var s = this;
                                return i[Symbol.replace].call(this, t, function () {
                                    var t = [];
                                    return t.push.apply(t, arguments), "object" != typeof t[t.length - 1] && t.push(a(t, s)), e.apply(this, t);
                                });
                            }
                            return i[Symbol.replace].call(this, t, e);
                        }),
                        _wrapRegExp.apply(this, arguments)
                    );
                }
                var extendStatics = function (t, e) {
                    return (extendStatics =
                        Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array &&
                            function (t, e) {
                                t.__proto__ = e;
                            }) ||
                        function (t, e) {
                            for (var r in e) e.hasOwnProperty(r) && (t[r] = e[r]);
                        })(t, e);
                };
                function __extends(t, e) {
                    function r() {
                        this.constructor = t;
                    }
                    extendStatics(t, e), (t.prototype = null === e ? Object.create(e) : ((r.prototype = e.prototype), new r()));
                }
                var __assign = function () {
                    return (__assign =
                        Object.assign ||
                        function (t) {
                            for (var e, r = 1, i = arguments.length; r < i; r++) for (var n in (e = arguments[r])) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                            return t;
                        }).apply(this, arguments);
                };
                function __rest(t, e) {
                    var r = {};
                    for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && e.indexOf(i) < 0 && (r[i] = t[i]);
                    if (null != t && "function" == typeof Object.getOwnPropertySymbols) {
                        var n = 0;
                        for (i = Object.getOwnPropertySymbols(t); n < i.length; n++) e.indexOf(i[n]) < 0 && Object.prototype.propertyIsEnumerable.call(t, i[n]) && (r[i[n]] = t[i[n]]);
                    }
                    return r;
                }
                function __decorate(t, e, r, i) {
                    var n,
                        s = arguments.length,
                        a = s < 3 ? e : null === i ? (i = Object.getOwnPropertyDescriptor(e, r)) : i;
                    if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(t, e, r, i);
                    else for (var o = t.length - 1; o >= 0; o--) (n = t[o]) && (a = (s < 3 ? n(a) : s > 3 ? n(e, r, a) : n(e, r)) || a);
                    return s > 3 && a && Object.defineProperty(e, r, a), a;
                }
                function __param(t, e) {
                    return function (r, i) {
                        e(r, i, t);
                    };
                }
                function __metadata(t, e) {
                    if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(t, e);
                }
                function __awaiter(t, e, r, i) {
                    return new (r || (r = Promise))(function (n, s) {
                        function a(t) {
                            try {
                                l(i.next(t));
                            } catch (t) {
                                s(t);
                            }
                        }
                        function o(t) {
                            try {
                                l(i.throw(t));
                            } catch (t) {
                                s(t);
                            }
                        }
                        function l(t) {
                            var e;
                            t.done
                                ? n(t.value)
                                : ((e = t.value),
                                  e instanceof r
                                      ? e
                                      : new r(function (t) {
                                            t(e);
                                        })).then(a, o);
                        }
                        l((i = i.apply(t, e || [])).next());
                    });
                }
                function __generator(t, e) {
                    var r,
                        i,
                        n,
                        s,
                        a = {
                            label: 0,
                            sent: function () {
                                if (1 & n[0]) throw n[1];
                                return n[1];
                            },
                            trys: [],
                            ops: [],
                        };
                    return (
                        (s = { next: o(0), throw: o(1), return: o(2) }),
                        "function" == typeof Symbol &&
                            (s[Symbol.iterator] = function () {
                                return this;
                            }),
                        s
                    );
                    function o(s) {
                        return function (o) {
                            return (function (s) {
                                if (r) throw new TypeError("Generator is already executing.");
                                for (; a; )
                                    try {
                                        if (((r = 1), i && (n = 2 & s[0] ? i.return : s[0] ? i.throw || ((n = i.return) && n.call(i), 0) : i.next) && !(n = n.call(i, s[1])).done)) return n;
                                        switch (((i = 0), n && (s = [2 & s[0], n.value]), s[0])) {
                                            case 0:
                                            case 1:
                                                n = s;
                                                break;
                                            case 4:
                                                return a.label++, { value: s[1], done: !1 };
                                            case 5:
                                                a.label++, (i = s[1]), (s = [0]);
                                                continue;
                                            case 7:
                                                (s = a.ops.pop()), a.trys.pop();
                                                continue;
                                            default:
                                                if (!((n = (n = a.trys).length > 0 && n[n.length - 1]) || (6 !== s[0] && 2 !== s[0]))) {
                                                    a = 0;
                                                    continue;
                                                }
                                                if (3 === s[0] && (!n || (s[1] > n[0] && s[1] < n[3]))) {
                                                    a.label = s[1];
                                                    break;
                                                }
                                                if (6 === s[0] && a.label < n[1]) {
                                                    (a.label = n[1]), (n = s);
                                                    break;
                                                }
                                                if (n && a.label < n[2]) {
                                                    (a.label = n[2]), a.ops.push(s);
                                                    break;
                                                }
                                                n[2] && a.ops.pop(), a.trys.pop();
                                                continue;
                                        }
                                        s = e.call(t, a);
                                    } catch (t) {
                                        (s = [6, t]), (i = 0);
                                    } finally {
                                        r = n = 0;
                                    }
                                if (5 & s[0]) throw s[1];
                                return { value: s[0] ? s[1] : void 0, done: !0 };
                            })([s, o]);
                        };
                    }
                }
                function __createBinding(t, e, r, i) {
                    void 0 === i && (i = r), (t[i] = e[r]);
                }
                function __exportStar(t, e) {
                    for (var r in t) "default" === r || e.hasOwnProperty(r) || (e[r] = t[r]);
                }
                function __values(t) {
                    var e = "function" == typeof Symbol && Symbol.iterator,
                        r = e && t[e],
                        i = 0;
                    if (r) return r.call(t);
                    if (t && "number" == typeof t.length)
                        return {
                            next: function () {
                                return t && i >= t.length && (t = void 0), { value: t && t[i++], done: !t };
                            },
                        };
                    throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.");
                }
                function __read(t, e) {
                    var r = "function" == typeof Symbol && t[Symbol.iterator];
                    if (!r) return t;
                    var i,
                        n,
                        s = r.call(t),
                        a = [];
                    try {
                        for (; (void 0 === e || e-- > 0) && !(i = s.next()).done; ) a.push(i.value);
                    } catch (t) {
                        n = { error: t };
                    } finally {
                        try {
                            i && !i.done && (r = s.return) && r.call(s);
                        } finally {
                            if (n) throw n.error;
                        }
                    }
                    return a;
                }
                function __spread() {
                    for (var t = [], e = 0; e < arguments.length; e++) t = t.concat(__read(arguments[e]));
                    return t;
                }
                function __spreadArrays() {
                    for (var t = 0, e = 0, r = arguments.length; e < r; e++) t += arguments[e].length;
                    var i = Array(t),
                        n = 0;
                    for (e = 0; e < r; e++) for (var s = arguments[e], a = 0, o = s.length; a < o; a++, n++) i[n] = s[a];
                    return i;
                }
                function __await(t) {
                    return this instanceof __await ? ((this.v = t), this) : new __await(t);
                }
                function __asyncGenerator(t, e, r) {
                    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                    var i,
                        n = r.apply(t, e || []),
                        s = [];
                    return (
                        (i = {}),
                        a("next"),
                        a("throw"),
                        a("return"),
                        (i[Symbol.asyncIterator] = function () {
                            return this;
                        }),
                        i
                    );
                    function a(t) {
                        n[t] &&
                            (i[t] = function (e) {
                                return new Promise(function (r, i) {
                                    s.push([t, e, r, i]) > 1 || o(t, e);
                                });
                            });
                    }
                    function o(t, e) {
                        try {
                            !(function (t) {
                                t.value instanceof __await ? Promise.resolve(t.value.v).then(l, h) : c(s[0][2], t);
                            })(n[t](e));
                        } catch (t) {
                            c(s[0][3], t);
                        }
                    }
                    function l(t) {
                        o("next", t);
                    }
                    function h(t) {
                        o("throw", t);
                    }
                    function c(t, e) {
                        t(e), s.shift(), s.length && o(s[0][0], s[0][1]);
                    }
                }
                function __asyncDelegator(t) {
                    var e, r;
                    return (
                        (e = {}),
                        i("next"),
                        i("throw", function (t) {
                            throw t;
                        }),
                        i("return"),
                        (e[Symbol.iterator] = function () {
                            return this;
                        }),
                        e
                    );
                    function i(i, n) {
                        e[i] = t[i]
                            ? function (e) {
                                  return (r = !r) ? { value: __await(t[i](e)), done: "return" === i } : n ? n(e) : e;
                              }
                            : n;
                    }
                }
                function __asyncValues(t) {
                    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                    var e,
                        r = t[Symbol.asyncIterator];
                    return r
                        ? r.call(t)
                        : ((t = "function" == typeof __values ? __values(t) : t[Symbol.iterator]()),
                          (e = {}),
                          i("next"),
                          i("throw"),
                          i("return"),
                          (e[Symbol.asyncIterator] = function () {
                              return this;
                          }),
                          e);
                    function i(r) {
                        e[r] =
                            t[r] &&
                            function (e) {
                                return new Promise(function (i, n) {
                                    !(function (t, e, r, i) {
                                        Promise.resolve(i).then(function (e) {
                                            t({ value: e, done: r });
                                        }, e);
                                    })(i, n, (e = t[r](e)).done, e.value);
                                });
                            };
                    }
                }
                function __makeTemplateObject(t, e) {
                    return Object.defineProperty ? Object.defineProperty(t, "raw", { value: e }) : (t.raw = e), t;
                }
                function __importStar(t) {
                    if (t && t.__esModule) return t;
                    var e = {};
                    if (null != t) for (var r in t) Object.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                    return (e.default = t), e;
                }
                function __importDefault(t) {
                    return t && t.__esModule ? t : { default: t };
                }
                function __classPrivateFieldGet(t, e) {
                    if (!e.has(t)) throw new TypeError("attempted to get private field on non-instance");
                    return e.get(t);
                }
                function __classPrivateFieldSet(t, e, r) {
                    if (!e.has(t)) throw new TypeError("attempted to set private field on non-instance");
                    return e.set(t, r), r;
                }
                const t$3 = window,
                    e$9 = t$3.ShadowRoot && (void 0 === t$3.ShadyCSS || t$3.ShadyCSS.nativeShadow) && "adoptedStyleSheets" in Document.prototype && "replace" in CSSStyleSheet.prototype,
                    s$3 = Symbol(),
                    n$4 = new WeakMap();
                class o$6 {
                    constructor(t, e, r) {
                        if (((this._$cssResult$ = !0), r !== s$3)) throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");
                        (this.cssText = t), (this.t = e);
                    }
                    get styleSheet() {
                        let t = this.o;
                        const e = this.t;
                        if (e$9 && void 0 === t) {
                            const r = void 0 !== e && 1 === e.length;
                            r && (t = n$4.get(e)), void 0 === t && ((this.o = t = new CSSStyleSheet()).replaceSync(this.cssText), r && n$4.set(e, t));
                        }
                        return t;
                    }
                    toString() {
                        return this.cssText;
                    }
                }
                const r$3 = (t) => new o$6("string" == typeof t ? t : t + "", void 0, s$3),
                    i$3 = (t, ...e) => {
                        const r =
                            1 === t.length
                                ? t[0]
                                : e.reduce(
                                      (e, r, i) =>
                                          e +
                                          ((t) => {
                                              if (!0 === t._$cssResult$) return t.cssText;
                                              if ("number" == typeof t) return t;
                                              throw Error("Value passed to 'css' function must be a 'css' function result: " + t + ". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.");
                                          })(r) +
                                          t[i + 1],
                                      t[0]
                                  );
                        return new o$6(r, t, s$3);
                    },
                    S$1 = (t, e) => {
                        e$9
                            ? (t.adoptedStyleSheets = e.map((t) => (t instanceof CSSStyleSheet ? t : t.styleSheet)))
                            : e.forEach((e) => {
                                  const r = document.createElement("style"),
                                      i = t$3.litNonce;
                                  void 0 !== i && r.setAttribute("nonce", i), (r.textContent = e.cssText), t.appendChild(r);
                              });
                    },
                    c$1 = e$9
                        ? (t) => t
                        : (t) =>
                              t instanceof CSSStyleSheet
                                  ? ((t) => {
                                        let e = "";
                                        for (const r of t.cssRules) e += r.cssText;
                                        return r$3(e);
                                    })(t)
                                  : t;
                var s$2;
                const e$8 = window,
                    r$2 = e$8.trustedTypes,
                    h$2 = r$2 ? r$2.emptyScript : "",
                    o$5 = e$8.reactiveElementPolyfillSupport,
                    n$3 = {
                        toAttribute(t, e) {
                            switch (e) {
                                case Boolean:
                                    t = t ? h$2 : null;
                                    break;
                                case Object:
                                case Array:
                                    t = null == t ? t : JSON.stringify(t);
                            }
                            return t;
                        },
                        fromAttribute(t, e) {
                            let r = t;
                            switch (e) {
                                case Boolean:
                                    r = null !== t;
                                    break;
                                case Number:
                                    r = null === t ? null : Number(t);
                                    break;
                                case Object:
                                case Array:
                                    try {
                                        r = JSON.parse(t);
                                    } catch (t) {
                                        r = null;
                                    }
                            }
                            return r;
                        },
                    },
                    a$1 = (t, e) => e !== t && (e == e || t == t),
                    l$3 = { attribute: !0, type: String, converter: n$3, reflect: !1, hasChanged: a$1 };
                class d$1 extends HTMLElement {
                    constructor() {
                        super(), (this._$Ei = new Map()), (this.isUpdatePending = !1), (this.hasUpdated = !1), (this._$El = null), this.u();
                    }
                    static addInitializer(t) {
                        var e;
                        this.finalize(), (null !== (e = this.h) && void 0 !== e ? e : (this.h = [])).push(t);
                    }
                    static get observedAttributes() {
                        this.finalize();
                        const t = [];
                        return (
                            this.elementProperties.forEach((e, r) => {
                                const i = this._$Ep(r, e);
                                void 0 !== i && (this._$Ev.set(i, r), t.push(i));
                            }),
                            t
                        );
                    }
                    static createProperty(t, e = l$3) {
                        if ((e.state && (e.attribute = !1), this.finalize(), this.elementProperties.set(t, e), !e.noAccessor && !this.prototype.hasOwnProperty(t))) {
                            const r = "symbol" == typeof t ? Symbol() : "__" + t,
                                i = this.getPropertyDescriptor(t, r, e);
                            void 0 !== i && Object.defineProperty(this.prototype, t, i);
                        }
                    }
                    static getPropertyDescriptor(t, e, r) {
                        return {
                            get() {
                                return this[e];
                            },
                            set(i) {
                                const n = this[t];
                                (this[e] = i), this.requestUpdate(t, n, r);
                            },
                            configurable: !0,
                            enumerable: !0,
                        };
                    }
                    static getPropertyOptions(t) {
                        return this.elementProperties.get(t) || l$3;
                    }
                    static finalize() {
                        if (this.hasOwnProperty("finalized")) return !1;
                        this.finalized = !0;
                        const t = Object.getPrototypeOf(this);
                        if ((t.finalize(), void 0 !== t.h && (this.h = [...t.h]), (this.elementProperties = new Map(t.elementProperties)), (this._$Ev = new Map()), this.hasOwnProperty("properties"))) {
                            const t = this.properties,
                                e = [...Object.getOwnPropertyNames(t), ...Object.getOwnPropertySymbols(t)];
                            for (const r of e) this.createProperty(r, t[r]);
                        }
                        return (this.elementStyles = this.finalizeStyles(this.styles)), !0;
                    }
                    static finalizeStyles(t) {
                        const e = [];
                        if (Array.isArray(t)) {
                            const r = new Set(t.flat(1 / 0).reverse());
                            for (const t of r) e.unshift(c$1(t));
                        } else void 0 !== t && e.push(c$1(t));
                        return e;
                    }
                    static _$Ep(t, e) {
                        const r = e.attribute;
                        return !1 === r ? void 0 : "string" == typeof r ? r : "string" == typeof t ? t.toLowerCase() : void 0;
                    }
                    u() {
                        var t;
                        (this._$E_ = new Promise((t) => (this.enableUpdating = t))), (this._$AL = new Map()), this._$Eg(), this.requestUpdate(), null === (t = this.constructor.h) || void 0 === t || t.forEach((t) => t(this));
                    }
                    addController(t) {
                        var e, r;
                        (null !== (e = this._$ES) && void 0 !== e ? e : (this._$ES = [])).push(t), void 0 !== this.renderRoot && this.isConnected && (null === (r = t.hostConnected) || void 0 === r || r.call(t));
                    }
                    removeController(t) {
                        var e;
                        null === (e = this._$ES) || void 0 === e || e.splice(this._$ES.indexOf(t) >>> 0, 1);
                    }
                    _$Eg() {
                        this.constructor.elementProperties.forEach((t, e) => {
                            this.hasOwnProperty(e) && (this._$Ei.set(e, this[e]), delete this[e]);
                        });
                    }
                    createRenderRoot() {
                        var t;
                        const e = null !== (t = this.shadowRoot) && void 0 !== t ? t : this.attachShadow(this.constructor.shadowRootOptions);
                        return S$1(e, this.constructor.elementStyles), e;
                    }
                    connectedCallback() {
                        var t;
                        void 0 === this.renderRoot && (this.renderRoot = this.createRenderRoot()),
                            this.enableUpdating(!0),
                            null === (t = this._$ES) ||
                                void 0 === t ||
                                t.forEach((t) => {
                                    var e;
                                    return null === (e = t.hostConnected) || void 0 === e ? void 0 : e.call(t);
                                });
                    }
                    enableUpdating(t) {}
                    disconnectedCallback() {
                        var t;
                        null === (t = this._$ES) ||
                            void 0 === t ||
                            t.forEach((t) => {
                                var e;
                                return null === (e = t.hostDisconnected) || void 0 === e ? void 0 : e.call(t);
                            });
                    }
                    attributeChangedCallback(t, e, r) {
                        this._$AK(t, r);
                    }
                    _$EO(t, e, r = l$3) {
                        var i;
                        const n = this.constructor._$Ep(t, r);
                        if (void 0 !== n && !0 === r.reflect) {
                            const s = (void 0 !== (null === (i = r.converter) || void 0 === i ? void 0 : i.toAttribute) ? r.converter : n$3).toAttribute(e, r.type);
                            (this._$El = t), null == s ? this.removeAttribute(n) : this.setAttribute(n, s), (this._$El = null);
                        }
                    }
                    _$AK(t, e) {
                        var r;
                        const i = this.constructor,
                            n = i._$Ev.get(t);
                        if (void 0 !== n && this._$El !== n) {
                            const t = i.getPropertyOptions(n),
                                s = "function" == typeof t.converter ? { fromAttribute: t.converter } : void 0 !== (null === (r = t.converter) || void 0 === r ? void 0 : r.fromAttribute) ? t.converter : n$3;
                            (this._$El = n), (this[n] = s.fromAttribute(e, t.type)), (this._$El = null);
                        }
                    }
                    requestUpdate(t, e, r) {
                        let i = !0;
                        void 0 !== t &&
                            (((r = r || this.constructor.getPropertyOptions(t)).hasChanged || a$1)(this[t], e)
                                ? (this._$AL.has(t) || this._$AL.set(t, e), !0 === r.reflect && this._$El !== t && (void 0 === this._$EC && (this._$EC = new Map()), this._$EC.set(t, r)))
                                : (i = !1)),
                            !this.isUpdatePending && i && (this._$E_ = this._$Ej());
                    }
                    async _$Ej() {
                        this.isUpdatePending = !0;
                        try {
                            await this._$E_;
                        } catch (t) {
                            Promise.reject(t);
                        }
                        const t = this.scheduleUpdate();
                        return null != t && (await t), !this.isUpdatePending;
                    }
                    scheduleUpdate() {
                        return this.performUpdate();
                    }
                    performUpdate() {
                        var t;
                        if (!this.isUpdatePending) return;
                        this.hasUpdated, this._$Ei && (this._$Ei.forEach((t, e) => (this[e] = t)), (this._$Ei = void 0));
                        let e = !1;
                        const r = this._$AL;
                        try {
                            (e = this.shouldUpdate(r)),
                                e
                                    ? (this.willUpdate(r),
                                      null === (t = this._$ES) ||
                                          void 0 === t ||
                                          t.forEach((t) => {
                                              var e;
                                              return null === (e = t.hostUpdate) || void 0 === e ? void 0 : e.call(t);
                                          }),
                                      this.update(r))
                                    : this._$Ek();
                        } catch (t) {
                            throw ((e = !1), this._$Ek(), t);
                        }
                        e && this._$AE(r);
                    }
                    willUpdate(t) {}
                    _$AE(t) {
                        var e;
                        null === (e = this._$ES) ||
                            void 0 === e ||
                            e.forEach((t) => {
                                var e;
                                return null === (e = t.hostUpdated) || void 0 === e ? void 0 : e.call(t);
                            }),
                            this.hasUpdated || ((this.hasUpdated = !0), this.firstUpdated(t)),
                            this.updated(t);
                    }
                    _$Ek() {
                        (this._$AL = new Map()), (this.isUpdatePending = !1);
                    }
                    get updateComplete() {
                        return this.getUpdateComplete();
                    }
                    getUpdateComplete() {
                        return this._$E_;
                    }
                    shouldUpdate(t) {
                        return !0;
                    }
                    update(t) {
                        void 0 !== this._$EC && (this._$EC.forEach((t, e) => this._$EO(e, this[e], t)), (this._$EC = void 0)), this._$Ek();
                    }
                    updated(t) {}
                    firstUpdated(t) {}
                }
                var t$2;
                (d$1.finalized = !0),
                    (d$1.elementProperties = new Map()),
                    (d$1.elementStyles = []),
                    (d$1.shadowRootOptions = { mode: "open" }),
                    null == o$5 || o$5({ ReactiveElement: d$1 }),
                    (null !== (s$2 = e$8.reactiveElementVersions) && void 0 !== s$2 ? s$2 : (e$8.reactiveElementVersions = [])).push("1.4.2");
                const i$2 = window,
                    s$1 = i$2.trustedTypes,
                    e$7 = s$1 ? s$1.createPolicy("lit-html", { createHTML: (t) => t }) : void 0,
                    o$4 = `lit$${(Math.random() + "").slice(9)}$`,
                    n$2 = "?" + o$4,
                    l$2 = `<${n$2}>`,
                    h$1 = document,
                    r$1 = (t = "") => h$1.createComment(t),
                    d = (t) => null === t || ("object" != typeof t && "function" != typeof t),
                    u = Array.isArray,
                    c = (t) => u(t) || "function" == typeof (null == t ? void 0 : t[Symbol.iterator]),
                    v = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,
                    a = /-->/g,
                    f = />/g,
                    _ = RegExp(">|[ \t\n\f\r](?:([^\\s\"'>=/]+)([ \t\n\f\r]*=[ \t\n\f\r]*(?:[^ \t\n\f\r\"'`<>=]|(\"|')|))|$)", "g"),
                    m = /'/g,
                    p = /"/g,
                    $ = /^(?:script|style|textarea|title)$/i,
                    g = (t) => (e, ...r) => ({ _$litType$: t, strings: e, values: r }),
                    y = g(1),
                    w = g(2),
                    x = Symbol.for("lit-noChange"),
                    b = Symbol.for("lit-nothing"),
                    T = new WeakMap(),
                    A = h$1.createTreeWalker(h$1, 129, null, !1),
                    E = (t, e) => {
                        const r = t.length - 1,
                            i = [];
                        let n,
                            s = 2 === e ? "<svg>" : "",
                            o = v;
                        for (let e = 0; e < r; e++) {
                            const r = t[e];
                            let l,
                                h,
                                c = -1,
                                d = 0;
                            for (; d < r.length && ((o.lastIndex = d), (h = o.exec(r)), null !== h); )
                                (d = o.lastIndex),
                                    o === v
                                        ? "!--" === h[1]
                                            ? (o = a)
                                            : void 0 !== h[1]
                                            ? (o = f)
                                            : void 0 !== h[2]
                                            ? ($.test(h[2]) && (n = RegExp("</" + h[2], "g")), (o = _))
                                            : void 0 !== h[3] && (o = _)
                                        : o === _
                                        ? ">" === h[0]
                                            ? ((o = null != n ? n : v), (c = -1))
                                            : void 0 === h[1]
                                            ? (c = -2)
                                            : ((c = o.lastIndex - h[2].length), (l = h[1]), (o = void 0 === h[3] ? _ : '"' === h[3] ? p : m))
                                        : o === p || o === m
                                        ? (o = _)
                                        : o === a || o === f
                                        ? (o = v)
                                        : ((o = _), (n = void 0));
                            const u = o === _ && t[e + 1].startsWith("/>") ? " " : "";
                            s += o === v ? r + l$2 : c >= 0 ? (i.push(l), r.slice(0, c) + "$lit$" + r.slice(c) + o$4 + u) : r + o$4 + (-2 === c ? (i.push(void 0), e) : u);
                        }
                        const l = s + (t[r] || "<?>") + (2 === e ? "</svg>" : "");
                        if (!Array.isArray(t) || !t.hasOwnProperty("raw")) throw Error("invalid template strings array");
                        return [void 0 !== e$7 ? e$7.createHTML(l) : l, i];
                    };
                class C {
                    constructor({ strings: t, _$litType$: e }, r) {
                        let i;
                        this.parts = [];
                        let n = 0,
                            s = 0;
                        const a = t.length - 1,
                            o = this.parts,
                            [l, h] = E(t, e);
                        if (((this.el = C.createElement(l, r)), (A.currentNode = this.el.content), 2 === e)) {
                            const t = this.el.content,
                                e = t.firstChild;
                            e.remove(), t.append(...e.childNodes);
                        }
                        for (; null !== (i = A.nextNode()) && o.length < a; ) {
                            if (1 === i.nodeType) {
                                if (i.hasAttributes()) {
                                    const t = [];
                                    for (const e of i.getAttributeNames())
                                        if (e.endsWith("$lit$") || e.startsWith(o$4)) {
                                            const r = h[s++];
                                            if ((t.push(e), void 0 !== r)) {
                                                const t = i.getAttribute(r.toLowerCase() + "$lit$").split(o$4),
                                                    e = /([.?@])?(.*)/.exec(r);
                                                o.push({ type: 1, index: n, name: e[2], strings: t, ctor: "." === e[1] ? M : "?" === e[1] ? k : "@" === e[1] ? H : S });
                                            } else o.push({ type: 6, index: n });
                                        }
                                    for (const e of t) i.removeAttribute(e);
                                }
                                if ($.test(i.tagName)) {
                                    const t = i.textContent.split(o$4),
                                        e = t.length - 1;
                                    if (e > 0) {
                                        i.textContent = s$1 ? s$1.emptyScript : "";
                                        for (let r = 0; r < e; r++) i.append(t[r], r$1()), A.nextNode(), o.push({ type: 2, index: ++n });
                                        i.append(t[e], r$1());
                                    }
                                }
                            } else if (8 === i.nodeType)
                                if (i.data === n$2) o.push({ type: 2, index: n });
                                else {
                                    let t = -1;
                                    for (; -1 !== (t = i.data.indexOf(o$4, t + 1)); ) o.push({ type: 7, index: n }), (t += o$4.length - 1);
                                }
                            n++;
                        }
                    }
                    static createElement(t, e) {
                        const r = h$1.createElement("template");
                        return (r.innerHTML = t), r;
                    }
                }
                function P(t, e, r = t, i) {
                    var n, s, a, o;
                    if (e === x) return e;
                    let l = void 0 !== i ? (null === (n = r._$Co) || void 0 === n ? void 0 : n[i]) : r._$Cl;
                    const h = d(e) ? void 0 : e._$litDirective$;
                    return (
                        (null == l ? void 0 : l.constructor) !== h &&
                            (null === (s = null == l ? void 0 : l._$AO) || void 0 === s || s.call(l, !1),
                            void 0 === h ? (l = void 0) : ((l = new h(t)), l._$AT(t, r, i)),
                            void 0 !== i ? ((null !== (a = (o = r)._$Co) && void 0 !== a ? a : (o._$Co = []))[i] = l) : (r._$Cl = l)),
                        void 0 !== l && (e = P(t, l._$AS(t, e.values), l, i)),
                        e
                    );
                }
                class V {
                    constructor(t, e) {
                        (this.u = []), (this._$AN = void 0), (this._$AD = t), (this._$AM = e);
                    }
                    get parentNode() {
                        return this._$AM.parentNode;
                    }
                    get _$AU() {
                        return this._$AM._$AU;
                    }
                    v(t) {
                        var e;
                        const {
                                el: { content: r },
                                parts: i,
                            } = this._$AD,
                            n = (null !== (e = null == t ? void 0 : t.creationScope) && void 0 !== e ? e : h$1).importNode(r, !0);
                        A.currentNode = n;
                        let s = A.nextNode(),
                            a = 0,
                            o = 0,
                            l = i[0];
                        for (; void 0 !== l; ) {
                            if (a === l.index) {
                                let e;
                                2 === l.type ? (e = new N(s, s.nextSibling, this, t)) : 1 === l.type ? (e = new l.ctor(s, l.name, l.strings, this, t)) : 6 === l.type && (e = new I(s, this, t)), this.u.push(e), (l = i[++o]);
                            }
                            a !== (null == l ? void 0 : l.index) && ((s = A.nextNode()), a++);
                        }
                        return n;
                    }
                    p(t) {
                        let e = 0;
                        for (const r of this.u) void 0 !== r && (void 0 !== r.strings ? (r._$AI(t, r, e), (e += r.strings.length - 2)) : r._$AI(t[e])), e++;
                    }
                }
                class N {
                    constructor(t, e, r, i) {
                        var n;
                        (this.type = 2), (this._$AH = b), (this._$AN = void 0), (this._$AA = t), (this._$AB = e), (this._$AM = r), (this.options = i), (this._$Cm = null === (n = null == i ? void 0 : i.isConnected) || void 0 === n || n);
                    }
                    get _$AU() {
                        var t, e;
                        return null !== (e = null === (t = this._$AM) || void 0 === t ? void 0 : t._$AU) && void 0 !== e ? e : this._$Cm;
                    }
                    get parentNode() {
                        let t = this._$AA.parentNode;
                        const e = this._$AM;
                        return void 0 !== e && 11 === t.nodeType && (t = e.parentNode), t;
                    }
                    get startNode() {
                        return this._$AA;
                    }
                    get endNode() {
                        return this._$AB;
                    }
                    _$AI(t, e = this) {
                        (t = P(this, t, e)),
                            d(t)
                                ? t === b || null == t || "" === t
                                    ? (this._$AH !== b && this._$AR(), (this._$AH = b))
                                    : t !== this._$AH && t !== x && this.g(t)
                                : void 0 !== t._$litType$
                                ? this.$(t)
                                : void 0 !== t.nodeType
                                ? this.T(t)
                                : c(t)
                                ? this.k(t)
                                : this.g(t);
                    }
                    O(t, e = this._$AB) {
                        return this._$AA.parentNode.insertBefore(t, e);
                    }
                    T(t) {
                        this._$AH !== t && (this._$AR(), (this._$AH = this.O(t)));
                    }
                    g(t) {
                        this._$AH !== b && d(this._$AH) ? (this._$AA.nextSibling.data = t) : this.T(h$1.createTextNode(t)), (this._$AH = t);
                    }
                    $(t) {
                        var e;
                        const { values: r, _$litType$: i } = t,
                            n = "number" == typeof i ? this._$AC(t) : (void 0 === i.el && (i.el = C.createElement(i.h, this.options)), i);
                        if ((null === (e = this._$AH) || void 0 === e ? void 0 : e._$AD) === n) this._$AH.p(r);
                        else {
                            const t = new V(n, this),
                                e = t.v(this.options);
                            t.p(r), this.T(e), (this._$AH = t);
                        }
                    }
                    _$AC(t) {
                        let e = T.get(t.strings);
                        return void 0 === e && T.set(t.strings, (e = new C(t))), e;
                    }
                    k(t) {
                        u(this._$AH) || ((this._$AH = []), this._$AR());
                        const e = this._$AH;
                        let r,
                            i = 0;
                        for (const n of t) i === e.length ? e.push((r = new N(this.O(r$1()), this.O(r$1()), this, this.options))) : (r = e[i]), r._$AI(n), i++;
                        i < e.length && (this._$AR(r && r._$AB.nextSibling, i), (e.length = i));
                    }
                    _$AR(t = this._$AA.nextSibling, e) {
                        var r;
                        for (null === (r = this._$AP) || void 0 === r || r.call(this, !1, !0, e); t && t !== this._$AB; ) {
                            const e = t.nextSibling;
                            t.remove(), (t = e);
                        }
                    }
                    setConnected(t) {
                        var e;
                        void 0 === this._$AM && ((this._$Cm = t), null === (e = this._$AP) || void 0 === e || e.call(this, t));
                    }
                }
                class S {
                    constructor(t, e, r, i, n) {
                        (this.type = 1),
                            (this._$AH = b),
                            (this._$AN = void 0),
                            (this.element = t),
                            (this.name = e),
                            (this._$AM = i),
                            (this.options = n),
                            r.length > 2 || "" !== r[0] || "" !== r[1] ? ((this._$AH = Array(r.length - 1).fill(new String())), (this.strings = r)) : (this._$AH = b);
                    }
                    get tagName() {
                        return this.element.tagName;
                    }
                    get _$AU() {
                        return this._$AM._$AU;
                    }
                    _$AI(t, e = this, r, i) {
                        const n = this.strings;
                        let s = !1;
                        if (void 0 === n) (t = P(this, t, e, 0)), (s = !d(t) || (t !== this._$AH && t !== x)), s && (this._$AH = t);
                        else {
                            const i = t;
                            let a, o;
                            for (t = n[0], a = 0; a < n.length - 1; a++)
                                (o = P(this, i[r + a], e, a)), o === x && (o = this._$AH[a]), s || (s = !d(o) || o !== this._$AH[a]), o === b ? (t = b) : t !== b && (t += (null != o ? o : "") + n[a + 1]), (this._$AH[a] = o);
                        }
                        s && !i && this.j(t);
                    }
                    j(t) {
                        t === b ? this.element.removeAttribute(this.name) : this.element.setAttribute(this.name, null != t ? t : "");
                    }
                }
                class M extends S {
                    constructor() {
                        super(...arguments), (this.type = 3);
                    }
                    j(t) {
                        this.element[this.name] = t === b ? void 0 : t;
                    }
                }
                const R = s$1 ? s$1.emptyScript : "";
                class k extends S {
                    constructor() {
                        super(...arguments), (this.type = 4);
                    }
                    j(t) {
                        t && t !== b ? this.element.setAttribute(this.name, R) : this.element.removeAttribute(this.name);
                    }
                }
                class H extends S {
                    constructor(t, e, r, i, n) {
                        super(t, e, r, i, n), (this.type = 5);
                    }
                    _$AI(t, e = this) {
                        var r;
                        if ((t = null !== (r = P(this, t, e, 0)) && void 0 !== r ? r : b) === x) return;
                        const i = this._$AH,
                            n = (t === b && i !== b) || t.capture !== i.capture || t.once !== i.once || t.passive !== i.passive,
                            s = t !== b && (i === b || n);
                        n && this.element.removeEventListener(this.name, this, i), s && this.element.addEventListener(this.name, this, t), (this._$AH = t);
                    }
                    handleEvent(t) {
                        var e, r;
                        "function" == typeof this._$AH ? this._$AH.call(null !== (r = null === (e = this.options) || void 0 === e ? void 0 : e.host) && void 0 !== r ? r : this.element, t) : this._$AH.handleEvent(t);
                    }
                }
                class I {
                    constructor(t, e, r) {
                        (this.element = t), (this.type = 6), (this._$AN = void 0), (this._$AM = e), (this.options = r);
                    }
                    get _$AU() {
                        return this._$AM._$AU;
                    }
                    _$AI(t) {
                        P(this, t);
                    }
                }
                const L = { P: "$lit$", A: o$4, M: n$2, C: 1, L: E, R: V, D: c, V: P, I: N, H: S, N: k, U: H, B: M, F: I },
                    z = i$2.litHtmlPolyfillSupport;
                null == z || z(C, N), (null !== (t$2 = i$2.litHtmlVersions) && void 0 !== t$2 ? t$2 : (i$2.litHtmlVersions = [])).push("2.4.0");
                const Z = (t, e, r) => {
                    var i, n;
                    const s = null !== (i = null == r ? void 0 : r.renderBefore) && void 0 !== i ? i : e;
                    let a = s._$litPart$;
                    if (void 0 === a) {
                        const t = null !== (n = null == r ? void 0 : r.renderBefore) && void 0 !== n ? n : null;
                        s._$litPart$ = a = new N(e.insertBefore(r$1(), t), t, void 0, null != r ? r : {});
                    }
                    return a._$AI(t), a;
                };
                var l$1, o$3;
                const r = d$1;
                class s extends d$1 {
                    constructor() {
                        super(...arguments), (this.renderOptions = { host: this }), (this._$Dt = void 0);
                    }
                    createRenderRoot() {
                        var t, e;
                        const r = super.createRenderRoot();
                        return (null !== (t = (e = this.renderOptions).renderBefore) && void 0 !== t) || (e.renderBefore = r.firstChild), r;
                    }
                    update(t) {
                        const e = this.render();
                        this.hasUpdated || (this.renderOptions.isConnected = this.isConnected), super.update(t), (this._$Dt = Z(e, this.renderRoot, this.renderOptions));
                    }
                    connectedCallback() {
                        var t;
                        super.connectedCallback(), null === (t = this._$Dt) || void 0 === t || t.setConnected(!0);
                    }
                    disconnectedCallback() {
                        var t;
                        super.disconnectedCallback(), null === (t = this._$Dt) || void 0 === t || t.setConnected(!1);
                    }
                    render() {
                        return x;
                    }
                }
                (s.finalized = !0), (s._$litElement$ = !0), null === (l$1 = globalThis.litElementHydrateSupport) || void 0 === l$1 || l$1.call(globalThis, { LitElement: s });
                const n$1 = globalThis.litElementPolyfillSupport;
                null == n$1 || n$1({ LitElement: s });
                const h = {
                    _$AK: (t, e, r) => {
                        t._$AK(e, r);
                    },
                    _$AL: (t) => t._$AL,
                };
                (null !== (o$3 = globalThis.litElementVersions) && void 0 !== o$3 ? o$3 : (globalThis.litElementVersions = [])).push("3.2.0");
                const o$2 = !1,
                    e$6 = (t) => (e) =>
                        "function" == typeof e
                            ? ((t, e) => (customElements.define(t, e), e))(t, e)
                            : ((t, e) => {
                                  const { kind: r, elements: i } = e;
                                  return {
                                      kind: r,
                                      elements: i,
                                      finisher(e) {
                                          customElements.define(t, e);
                                      },
                                  };
                              })(t, e),
                    i$1 = (t, e) =>
                        "method" === e.kind && e.descriptor && !("value" in e.descriptor)
                            ? {
                                  ...e,
                                  finisher(r) {
                                      r.createProperty(e.key, t);
                                  },
                              }
                            : {
                                  kind: "field",
                                  key: Symbol(),
                                  placement: "own",
                                  descriptor: {},
                                  originalKey: e.key,
                                  initializer() {
                                      "function" == typeof e.initializer && (this[e.key] = e.initializer.call(this));
                                  },
                                  finisher(r) {
                                      r.createProperty(e.key, t);
                                  },
                              };
                function e$5(t) {
                    return (e, r) =>
                        void 0 !== r
                            ? ((t, e, r) => {
                                  e.constructor.createProperty(r, t);
                              })(t, e, r)
                            : i$1(t, e);
                }
                function t$1(t) {
                    return e$5({ ...t, state: !0 });
                }
                const e$4 = (t, e, r) => {
                        Object.defineProperty(e, r, t);
                    },
                    t = (t, e) => ({ kind: "method", placement: "prototype", key: e.key, descriptor: t }),
                    o$1 = ({ finisher: t, descriptor: e }) => (r, i) => {
                        var n;
                        if (void 0 === i) {
                            const i = null !== (n = r.originalKey) && void 0 !== n ? n : r.key,
                                s = null != e ? { kind: "method", placement: "prototype", key: i, descriptor: e(r.key) } : { ...r, key: i };
                            return (
                                null != t &&
                                    (s.finisher = function (e) {
                                        t(e, i);
                                    }),
                                s
                            );
                        }
                        {
                            const n = r.constructor;
                            void 0 !== e && Object.defineProperty(r, i, e(i)), null == t || t(n, i);
                        }
                    };
                function e$3(t) {
                    return o$1({
                        finisher: (e, r) => {
                            Object.assign(e.prototype[r], t);
                        },
                    });
                }
                function i(t, e) {
                    return o$1({
                        descriptor: (r) => {
                            const i = {
                                get() {
                                    var e, r;
                                    return null !== (r = null === (e = this.renderRoot) || void 0 === e ? void 0 : e.querySelector(t)) && void 0 !== r ? r : null;
                                },
                                enumerable: !0,
                                configurable: !0,
                            };
                            if (e) {
                                const e = "symbol" == typeof r ? Symbol() : "__" + r;
                                i.get = function () {
                                    var r, i;
                                    return void 0 === this[e] && (this[e] = null !== (i = null === (r = this.renderRoot) || void 0 === r ? void 0 : r.querySelector(t)) && void 0 !== i ? i : null), this[e];
                                };
                            }
                            return i;
                        },
                    });
                }
                function e$2(t) {
                    return o$1({
                        descriptor: (e) => ({
                            get() {
                                var e, r;
                                return null !== (r = null === (e = this.renderRoot) || void 0 === e ? void 0 : e.querySelectorAll(t)) && void 0 !== r ? r : [];
                            },
                            enumerable: !0,
                            configurable: !0,
                        }),
                    });
                }
                function e$1(t) {
                    return o$1({
                        descriptor: (e) => ({
                            async get() {
                                var e;
                                return await this.updateComplete, null === (e = this.renderRoot) || void 0 === e ? void 0 : e.querySelector(t);
                            },
                            enumerable: !0,
                            configurable: !0,
                        }),
                    });
                }
                var n;
                const e =
                    null != (null === (n = window.HTMLSlotElement) || void 0 === n ? void 0 : n.prototype.assignedElements) ? (t, e) => t.assignedElements(e) : (t, e) => t.assignedNodes(e).filter((t) => t.nodeType === Node.ELEMENT_NODE);
                function l(t) {
                    const { slot: r, selector: i } = null != t ? t : {};
                    return o$1({
                        descriptor: (n) => ({
                            get() {
                                var n;
                                const s = "slot" + (r ? `[name=${r}]` : ":not([name])"),
                                    a = null === (n = this.renderRoot) || void 0 === n ? void 0 : n.querySelector(s),
                                    o = null != a ? e(a, t) : [];
                                return i ? o.filter((t) => t.matches(i)) : o;
                            },
                            enumerable: !0,
                            configurable: !0,
                        }),
                    });
                }
                function o(t, e, r) {
                    let i,
                        n = t;
                    return (
                        "object" == typeof t ? ((n = t.slot), (i = t)) : (i = { flatten: e }),
                        r
                            ? l({ slot: n, flatten: e, selector: r })
                            : o$1({
                                  descriptor: (t) => ({
                                      get() {
                                          var t, e;
                                          const r = "slot" + (n ? `[name=${n}]` : ":not([name])"),
                                              s = null === (t = this.renderRoot) || void 0 === t ? void 0 : t.querySelector(r);
                                          return null !== (e = null == s ? void 0 : s.assignedNodes(i)) && void 0 !== e ? e : [];
                                      },
                                      enumerable: !0,
                                      configurable: !0,
                                  }),
                              })
                    );
                }
                var commonjsGlobal = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : void 0 !== __webpack_require__.g ? __webpack_require__.g : "undefined" != typeof self ? self : {};
                function createCommonjsModule(t, e, r) {
                    return (
                        t(
                            (r = {
                                path: e,
                                exports: {},
                                require: function (t, e) {
                                    return commonjsRequire(t, null == e ? r.path : e);
                                },
                            }),
                            r.exports
                        ),
                        r.exports
                    );
                }
                function getCjsExportFromNamespace(t) {
                    return (t && t.default) || t;
                }
                function commonjsRequire() {
                    throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
                }
                var lottie_svg = createCommonjsModule(function (module, exports) {
                        "undefined" != typeof navigator &&
                            (function (t, e) {
                                module.exports = e();
                            })(0, function () {
                                var svgNS = "http://www.w3.org/2000/svg",
                                    locationHref = "",
                                    _useWebWorker = !1,
                                    initialDefaultFrame = -999999,
                                    setWebWorker = function (t) {
                                        _useWebWorker = !!t;
                                    },
                                    getWebWorker = function () {
                                        return _useWebWorker;
                                    },
                                    setLocationHref = function (t) {
                                        locationHref = t;
                                    },
                                    getLocationHref = function () {
                                        return locationHref;
                                    };
                                function createTag(t) {
                                    return document.createElement(t);
                                }
                                function extendPrototype(t, e) {
                                    var r,
                                        i,
                                        n = t.length;
                                    for (r = 0; r < n; r += 1) for (var s in (i = t[r].prototype)) Object.prototype.hasOwnProperty.call(i, s) && (e.prototype[s] = i[s]);
                                }
                                function getDescriptor(t, e) {
                                    return Object.getOwnPropertyDescriptor(t, e);
                                }
                                function createProxyFunction(t) {
                                    function e() {}
                                    return (e.prototype = t), e;
                                }
                                var audioControllerFactory = (function () {
                                        function t(t) {
                                            (this.audios = []), (this.audioFactory = t), (this._volume = 1), (this._isMuted = !1);
                                        }
                                        return (
                                            (t.prototype = {
                                                addAudio: function (t) {
                                                    this.audios.push(t);
                                                },
                                                pause: function () {
                                                    var t,
                                                        e = this.audios.length;
                                                    for (t = 0; t < e; t += 1) this.audios[t].pause();
                                                },
                                                resume: function () {
                                                    var t,
                                                        e = this.audios.length;
                                                    for (t = 0; t < e; t += 1) this.audios[t].resume();
                                                },
                                                setRate: function (t) {
                                                    var e,
                                                        r = this.audios.length;
                                                    for (e = 0; e < r; e += 1) this.audios[e].setRate(t);
                                                },
                                                createAudio: function (t) {
                                                    return this.audioFactory
                                                        ? this.audioFactory(t)
                                                        : window.Howl
                                                        ? new window.Howl({ src: [t] })
                                                        : {
                                                              isPlaying: !1,
                                                              play: function () {
                                                                  this.isPlaying = !0;
                                                              },
                                                              seek: function () {
                                                                  this.isPlaying = !1;
                                                              },
                                                              playing: function () {},
                                                              rate: function () {},
                                                              setVolume: function () {},
                                                          };
                                                },
                                                setAudioFactory: function (t) {
                                                    this.audioFactory = t;
                                                },
                                                setVolume: function (t) {
                                                    (this._volume = t), this._updateVolume();
                                                },
                                                mute: function () {
                                                    (this._isMuted = !0), this._updateVolume();
                                                },
                                                unmute: function () {
                                                    (this._isMuted = !1), this._updateVolume();
                                                },
                                                getVolume: function () {
                                                    return this._volume;
                                                },
                                                _updateVolume: function () {
                                                    var t,
                                                        e = this.audios.length;
                                                    for (t = 0; t < e; t += 1) this.audios[t].volume(this._volume * (this._isMuted ? 0 : 1));
                                                },
                                            }),
                                            function () {
                                                return new t();
                                            }
                                        );
                                    })(),
                                    createTypedArray = (function () {
                                        function t(t, e) {
                                            var r,
                                                i = 0,
                                                n = [];
                                            switch (t) {
                                                case "int16":
                                                case "uint8c":
                                                    r = 1;
                                                    break;
                                                default:
                                                    r = 1.1;
                                            }
                                            for (i = 0; i < e; i += 1) n.push(r);
                                            return n;
                                        }
                                        return "function" == typeof Uint8ClampedArray && "function" == typeof Float32Array
                                            ? function (e, r) {
                                                  return "float32" === e ? new Float32Array(r) : "int16" === e ? new Int16Array(r) : "uint8c" === e ? new Uint8ClampedArray(r) : t(e, r);
                                              }
                                            : t;
                                    })();
                                function createSizedArray(t) {
                                    return Array.apply(null, { length: t });
                                }
                                function _typeof$6(t) {
                                    return (_typeof$6 =
                                        "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                                            ? function (t) {
                                                  return typeof t;
                                              }
                                            : function (t) {
                                                  return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                                              })(t);
                                }
                                var subframeEnabled = !0,
                                    expressionsPlugin = null,
                                    expressionsInterfaces = null,
                                    idPrefix$1 = "",
                                    isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent),
                                    _shouldRoundValues = !1,
                                    bmPow = Math.pow,
                                    bmSqrt = Math.sqrt,
                                    bmFloor = Math.floor,
                                    bmMax = Math.max,
                                    bmMin = Math.min,
                                    BMMath = {};
                                function ProjectInterface$1() {
                                    return {};
                                }
                                !(function () {
                                    var t,
                                        e = [
                                            "abs",
                                            "acos",
                                            "acosh",
                                            "asin",
                                            "asinh",
                                            "atan",
                                            "atanh",
                                            "atan2",
                                            "ceil",
                                            "cbrt",
                                            "expm1",
                                            "clz32",
                                            "cos",
                                            "cosh",
                                            "exp",
                                            "floor",
                                            "fround",
                                            "hypot",
                                            "imul",
                                            "log",
                                            "log1p",
                                            "log2",
                                            "log10",
                                            "max",
                                            "min",
                                            "pow",
                                            "random",
                                            "round",
                                            "sign",
                                            "sin",
                                            "sinh",
                                            "sqrt",
                                            "tan",
                                            "tanh",
                                            "trunc",
                                            "E",
                                            "LN10",
                                            "LN2",
                                            "LOG10E",
                                            "LOG2E",
                                            "PI",
                                            "SQRT1_2",
                                            "SQRT2",
                                        ],
                                        r = e.length;
                                    for (t = 0; t < r; t += 1) BMMath[e[t]] = Math[e[t]];
                                })(),
                                    (BMMath.random = Math.random),
                                    (BMMath.abs = function (t) {
                                        if ("object" === _typeof$6(t) && t.length) {
                                            var e,
                                                r = createSizedArray(t.length),
                                                i = t.length;
                                            for (e = 0; e < i; e += 1) r[e] = Math.abs(t[e]);
                                            return r;
                                        }
                                        return Math.abs(t);
                                    });
                                var defaultCurveSegments = 150,
                                    degToRads = Math.PI / 180,
                                    roundCorner = 0.5519;
                                function roundValues(t) {
                                    _shouldRoundValues = !!t;
                                }
                                function bmRnd(t) {
                                    return _shouldRoundValues ? Math.round(t) : t;
                                }
                                function styleDiv(t) {
                                    (t.style.position = "absolute"),
                                        (t.style.top = 0),
                                        (t.style.left = 0),
                                        (t.style.display = "block"),
                                        (t.style.transformOrigin = "0 0"),
                                        (t.style.webkitTransformOrigin = "0 0"),
                                        (t.style.backfaceVisibility = "visible"),
                                        (t.style.webkitBackfaceVisibility = "visible"),
                                        (t.style.transformStyle = "preserve-3d"),
                                        (t.style.webkitTransformStyle = "preserve-3d"),
                                        (t.style.mozTransformStyle = "preserve-3d");
                                }
                                function BMEnterFrameEvent(t, e, r, i) {
                                    (this.type = t), (this.currentTime = e), (this.totalTime = r), (this.direction = i < 0 ? -1 : 1);
                                }
                                function BMCompleteEvent(t, e) {
                                    (this.type = t), (this.direction = e < 0 ? -1 : 1);
                                }
                                function BMCompleteLoopEvent(t, e, r, i) {
                                    (this.type = t), (this.currentLoop = r), (this.totalLoops = e), (this.direction = i < 0 ? -1 : 1);
                                }
                                function BMSegmentStartEvent(t, e, r) {
                                    (this.type = t), (this.firstFrame = e), (this.totalFrames = r);
                                }
                                function BMDestroyEvent(t, e) {
                                    (this.type = t), (this.target = e);
                                }
                                function BMRenderFrameErrorEvent(t, e) {
                                    (this.type = "renderFrameError"), (this.nativeError = t), (this.currentTime = e);
                                }
                                function BMConfigErrorEvent(t) {
                                    (this.type = "configError"), (this.nativeError = t);
                                }
                                function BMAnimationConfigErrorEvent(t, e) {
                                    (this.type = t), (this.nativeError = e);
                                }
                                var createElementID =
                                        ((_count = 0),
                                        function () {
                                            return idPrefix$1 + "__lottie_element_" + (_count += 1);
                                        }),
                                    _count;
                                function HSVtoRGB(t, e, r) {
                                    var i, n, s, a, o, l, h, c;
                                    switch (((l = r * (1 - e)), (h = r * (1 - (o = 6 * t - (a = Math.floor(6 * t))) * e)), (c = r * (1 - (1 - o) * e)), a % 6)) {
                                        case 0:
                                            (i = r), (n = c), (s = l);
                                            break;
                                        case 1:
                                            (i = h), (n = r), (s = l);
                                            break;
                                        case 2:
                                            (i = l), (n = r), (s = c);
                                            break;
                                        case 3:
                                            (i = l), (n = h), (s = r);
                                            break;
                                        case 4:
                                            (i = c), (n = l), (s = r);
                                            break;
                                        case 5:
                                            (i = r), (n = l), (s = h);
                                    }
                                    return [i, n, s];
                                }
                                function RGBtoHSV(t, e, r) {
                                    var i,
                                        n = Math.max(t, e, r),
                                        s = Math.min(t, e, r),
                                        a = n - s,
                                        o = 0 === n ? 0 : a / n,
                                        l = n / 255;
                                    switch (n) {
                                        case s:
                                            i = 0;
                                            break;
                                        case t:
                                            (i = e - r + a * (e < r ? 6 : 0)), (i /= 6 * a);
                                            break;
                                        case e:
                                            (i = r - t + 2 * a), (i /= 6 * a);
                                            break;
                                        case r:
                                            (i = t - e + 4 * a), (i /= 6 * a);
                                    }
                                    return [i, o, l];
                                }
                                function addSaturationToRGB(t, e) {
                                    var r = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
                                    return (r[1] += e), r[1] > 1 ? (r[1] = 1) : r[1] <= 0 && (r[1] = 0), HSVtoRGB(r[0], r[1], r[2]);
                                }
                                function addBrightnessToRGB(t, e) {
                                    var r = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
                                    return (r[2] += e), r[2] > 1 ? (r[2] = 1) : r[2] < 0 && (r[2] = 0), HSVtoRGB(r[0], r[1], r[2]);
                                }
                                function addHueToRGB(t, e) {
                                    var r = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
                                    return (r[0] += e / 360), r[0] > 1 ? (r[0] -= 1) : r[0] < 0 && (r[0] += 1), HSVtoRGB(r[0], r[1], r[2]);
                                }
                                var rgbToHex = (function () {
                                        var t,
                                            e,
                                            r = [];
                                        for (t = 0; t < 256; t += 1) (e = t.toString(16)), (r[t] = 1 === e.length ? "0" + e : e);
                                        return function (t, e, i) {
                                            return t < 0 && (t = 0), e < 0 && (e = 0), i < 0 && (i = 0), "#" + r[t] + r[e] + r[i];
                                        };
                                    })(),
                                    setSubframeEnabled = function (t) {
                                        subframeEnabled = !!t;
                                    },
                                    getSubframeEnabled = function () {
                                        return subframeEnabled;
                                    },
                                    setExpressionsPlugin = function (t) {
                                        expressionsPlugin = t;
                                    },
                                    getExpressionsPlugin = function () {
                                        return expressionsPlugin;
                                    },
                                    setExpressionInterfaces = function (t) {
                                        expressionsInterfaces = t;
                                    },
                                    getExpressionInterfaces = function () {
                                        return expressionsInterfaces;
                                    },
                                    setDefaultCurveSegments = function (t) {
                                        defaultCurveSegments = t;
                                    },
                                    getDefaultCurveSegments = function () {
                                        return defaultCurveSegments;
                                    },
                                    setIdPrefix = function (t) {
                                        idPrefix$1 = t;
                                    },
                                    getIdPrefix = function () {
                                        return idPrefix$1;
                                    };
                                function createNS(t) {
                                    return document.createElementNS(svgNS, t);
                                }
                                function _typeof$5(t) {
                                    return (_typeof$5 =
                                        "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                                            ? function (t) {
                                                  return typeof t;
                                              }
                                            : function (t) {
                                                  return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                                              })(t);
                                }
                                var dataManager = (function () {
                                        var t,
                                            e,
                                            r = 1,
                                            i = [],
                                            n = {
                                                onmessage: function () {},
                                                postMessage: function (e) {
                                                    t({ data: e });
                                                },
                                            },
                                            s = {
                                                postMessage: function (t) {
                                                    n.onmessage({ data: t });
                                                },
                                            };
                                        function a() {
                                            e ||
                                                ((e = (function (e) {
                                                    if (window.Worker && window.Blob && getWebWorker()) {
                                                        var r = new Blob(["var _workerSelf = self; self.onmessage = ", e.toString()], { type: "text/javascript" }),
                                                            i = URL.createObjectURL(r);
                                                        return new Worker(i);
                                                    }
                                                    return (t = e), n;
                                                })(function (t) {
                                                    if (
                                                        (s.dataManager ||
                                                            (s.dataManager = (function () {
                                                                function t(n, s) {
                                                                    var a,
                                                                        o,
                                                                        l,
                                                                        h,
                                                                        c,
                                                                        d,
                                                                        u = n.length;
                                                                    for (o = 0; o < u; o += 1)
                                                                        if ("ks" in (a = n[o]) && !a.completed) {
                                                                            if (((a.completed = !0), a.hasMask)) {
                                                                                var f = a.masksProperties;
                                                                                for (h = f.length, l = 0; l < h; l += 1)
                                                                                    if (f[l].pt.k.i) i(f[l].pt.k);
                                                                                    else for (d = f[l].pt.k.length, c = 0; c < d; c += 1) f[l].pt.k[c].s && i(f[l].pt.k[c].s[0]), f[l].pt.k[c].e && i(f[l].pt.k[c].e[0]);
                                                                            }
                                                                            0 === a.ty ? ((a.layers = e(a.refId, s)), t(a.layers, s)) : 4 === a.ty ? r(a.shapes) : 5 === a.ty && p(a);
                                                                        }
                                                                }
                                                                function e(t, e) {
                                                                    var r = (function (t, e) {
                                                                        for (var r = 0, i = e.length; r < i; ) {
                                                                            if (e[r].id === t) return e[r];
                                                                            r += 1;
                                                                        }
                                                                        return null;
                                                                    })(t, e);
                                                                    return r ? (r.layers.__used ? JSON.parse(JSON.stringify(r.layers)) : ((r.layers.__used = !0), r.layers)) : null;
                                                                }
                                                                function r(t) {
                                                                    var e, n, s;
                                                                    for (e = t.length - 1; e >= 0; e -= 1)
                                                                        if ("sh" === t[e].ty)
                                                                            if (t[e].ks.k.i) i(t[e].ks.k);
                                                                            else for (s = t[e].ks.k.length, n = 0; n < s; n += 1) t[e].ks.k[n].s && i(t[e].ks.k[n].s[0]), t[e].ks.k[n].e && i(t[e].ks.k[n].e[0]);
                                                                        else "gr" === t[e].ty && r(t[e].it);
                                                                }
                                                                function i(t) {
                                                                    var e,
                                                                        r = t.i.length;
                                                                    for (e = 0; e < r; e += 1) (t.i[e][0] += t.v[e][0]), (t.i[e][1] += t.v[e][1]), (t.o[e][0] += t.v[e][0]), (t.o[e][1] += t.v[e][1]);
                                                                }
                                                                function n(t, e) {
                                                                    var r = e ? e.split(".") : [100, 100, 100];
                                                                    return t[0] > r[0] || (!(r[0] > t[0]) && (t[1] > r[1] || (!(r[1] > t[1]) && (t[2] > r[2] || (!(r[2] > t[2]) && null)))));
                                                                }
                                                                var s,
                                                                    a = (function () {
                                                                        var t = [4, 4, 14];
                                                                        function e(t) {
                                                                            var e,
                                                                                r,
                                                                                i,
                                                                                n = t.length;
                                                                            for (e = 0; e < n; e += 1) 5 === t[e].ty && ((i = (r = t[e]).t.d), (r.t.d = { k: [{ s: i, t: 0 }] }));
                                                                        }
                                                                        return function (r) {
                                                                            if (n(t, r.v) && (e(r.layers), r.assets)) {
                                                                                var i,
                                                                                    s = r.assets.length;
                                                                                for (i = 0; i < s; i += 1) r.assets[i].layers && e(r.assets[i].layers);
                                                                            }
                                                                        };
                                                                    })(),
                                                                    o =
                                                                        ((s = [4, 7, 99]),
                                                                        function (t) {
                                                                            if (t.chars && !n(s, t.v)) {
                                                                                var e,
                                                                                    i = t.chars.length;
                                                                                for (e = 0; e < i; e += 1) {
                                                                                    var a = t.chars[e];
                                                                                    a.data &&
                                                                                        a.data.shapes &&
                                                                                        (r(a.data.shapes),
                                                                                        (a.data.ip = 0),
                                                                                        (a.data.op = 99999),
                                                                                        (a.data.st = 0),
                                                                                        (a.data.sr = 1),
                                                                                        (a.data.ks = { p: { k: [0, 0], a: 0 }, s: { k: [100, 100], a: 0 }, a: { k: [0, 0], a: 0 }, r: { k: 0, a: 0 }, o: { k: 100, a: 0 } }),
                                                                                        t.chars[e].t ||
                                                                                            (a.data.shapes.push({ ty: "no" }),
                                                                                            a.data.shapes[0].it.push({
                                                                                                p: { k: [0, 0], a: 0 },
                                                                                                s: { k: [100, 100], a: 0 },
                                                                                                a: { k: [0, 0], a: 0 },
                                                                                                r: { k: 0, a: 0 },
                                                                                                o: { k: 100, a: 0 },
                                                                                                sk: { k: 0, a: 0 },
                                                                                                sa: { k: 0, a: 0 },
                                                                                                ty: "tr",
                                                                                            })));
                                                                                }
                                                                            }
                                                                        }),
                                                                    l = (function () {
                                                                        var t = [5, 7, 15];
                                                                        function e(t) {
                                                                            var e,
                                                                                r,
                                                                                i = t.length;
                                                                            for (e = 0; e < i; e += 1)
                                                                                5 === t[e].ty &&
                                                                                    ((r = void 0),
                                                                                    "number" == typeof (r = t[e].t.p).a && (r.a = { a: 0, k: r.a }),
                                                                                    "number" == typeof r.p && (r.p = { a: 0, k: r.p }),
                                                                                    "number" == typeof r.r && (r.r = { a: 0, k: r.r }));
                                                                        }
                                                                        return function (r) {
                                                                            if (n(t, r.v) && (e(r.layers), r.assets)) {
                                                                                var i,
                                                                                    s = r.assets.length;
                                                                                for (i = 0; i < s; i += 1) r.assets[i].layers && e(r.assets[i].layers);
                                                                            }
                                                                        };
                                                                    })(),
                                                                    h = (function () {
                                                                        var t = [4, 1, 9];
                                                                        function e(t) {
                                                                            var r,
                                                                                i,
                                                                                n,
                                                                                s = t.length;
                                                                            for (r = 0; r < s; r += 1)
                                                                                if ("gr" === t[r].ty) e(t[r].it);
                                                                                else if ("fl" === t[r].ty || "st" === t[r].ty)
                                                                                    if (t[r].c.k && t[r].c.k[0].i)
                                                                                        for (n = t[r].c.k.length, i = 0; i < n; i += 1)
                                                                                            t[r].c.k[i].s && ((t[r].c.k[i].s[0] /= 255), (t[r].c.k[i].s[1] /= 255), (t[r].c.k[i].s[2] /= 255), (t[r].c.k[i].s[3] /= 255)),
                                                                                                t[r].c.k[i].e && ((t[r].c.k[i].e[0] /= 255), (t[r].c.k[i].e[1] /= 255), (t[r].c.k[i].e[2] /= 255), (t[r].c.k[i].e[3] /= 255));
                                                                                    else (t[r].c.k[0] /= 255), (t[r].c.k[1] /= 255), (t[r].c.k[2] /= 255), (t[r].c.k[3] /= 255);
                                                                        }
                                                                        function r(t) {
                                                                            var r,
                                                                                i = t.length;
                                                                            for (r = 0; r < i; r += 1) 4 === t[r].ty && e(t[r].shapes);
                                                                        }
                                                                        return function (e) {
                                                                            if (n(t, e.v) && (r(e.layers), e.assets)) {
                                                                                var i,
                                                                                    s = e.assets.length;
                                                                                for (i = 0; i < s; i += 1) e.assets[i].layers && r(e.assets[i].layers);
                                                                            }
                                                                        };
                                                                    })(),
                                                                    c = (function () {
                                                                        var t = [4, 4, 18];
                                                                        function e(t) {
                                                                            var r, i, n;
                                                                            for (r = t.length - 1; r >= 0; r -= 1)
                                                                                if ("sh" === t[r].ty)
                                                                                    if (t[r].ks.k.i) t[r].ks.k.c = t[r].closed;
                                                                                    else
                                                                                        for (n = t[r].ks.k.length, i = 0; i < n; i += 1)
                                                                                            t[r].ks.k[i].s && (t[r].ks.k[i].s[0].c = t[r].closed), t[r].ks.k[i].e && (t[r].ks.k[i].e[0].c = t[r].closed);
                                                                                else "gr" === t[r].ty && e(t[r].it);
                                                                        }
                                                                        function r(t) {
                                                                            var r,
                                                                                i,
                                                                                n,
                                                                                s,
                                                                                a,
                                                                                o,
                                                                                l = t.length;
                                                                            for (i = 0; i < l; i += 1) {
                                                                                if ((r = t[i]).hasMask) {
                                                                                    var h = r.masksProperties;
                                                                                    for (s = h.length, n = 0; n < s; n += 1)
                                                                                        if (h[n].pt.k.i) h[n].pt.k.c = h[n].cl;
                                                                                        else
                                                                                            for (o = h[n].pt.k.length, a = 0; a < o; a += 1)
                                                                                                h[n].pt.k[a].s && (h[n].pt.k[a].s[0].c = h[n].cl), h[n].pt.k[a].e && (h[n].pt.k[a].e[0].c = h[n].cl);
                                                                                }
                                                                                4 === r.ty && e(r.shapes);
                                                                            }
                                                                        }
                                                                        return function (e) {
                                                                            if (n(t, e.v) && (r(e.layers), e.assets)) {
                                                                                var i,
                                                                                    s = e.assets.length;
                                                                                for (i = 0; i < s; i += 1) e.assets[i].layers && r(e.assets[i].layers);
                                                                            }
                                                                        };
                                                                    })();
                                                                function p(t) {
                                                                    0 === t.t.a.length && t.t.p;
                                                                }
                                                                var d = {
                                                                    completeData: function (r) {
                                                                        r.__complete ||
                                                                            (h(r),
                                                                            a(r),
                                                                            o(r),
                                                                            l(r),
                                                                            c(r),
                                                                            t(r.layers, r.assets),
                                                                            (function (r, i) {
                                                                                if (r) {
                                                                                    var n = 0,
                                                                                        s = r.length;
                                                                                    for (n = 0; n < s; n += 1) 1 === r[n].t && ((r[n].data.layers = e(r[n].data.refId, i)), t(r[n].data.layers, i));
                                                                                }
                                                                            })(r.chars, r.assets),
                                                                            (r.__complete = !0));
                                                                    },
                                                                };
                                                                return (d.checkColors = h), (d.checkChars = o), (d.checkPathProperties = l), (d.checkShapes = c), (d.completeLayers = t), d;
                                                            })()),
                                                        s.assetLoader ||
                                                            (s.assetLoader = (function () {
                                                                function t(t) {
                                                                    var e = t.getResponseHeader("content-type");
                                                                    return (e && "json" === t.responseType && -1 !== e.indexOf("json")) || (t.response && "object" === _typeof$5(t.response))
                                                                        ? t.response
                                                                        : t.response && "string" == typeof t.response
                                                                        ? JSON.parse(t.response)
                                                                        : t.responseText
                                                                        ? JSON.parse(t.responseText)
                                                                        : null;
                                                                }
                                                                return {
                                                                    load: function (e, r, i, n) {
                                                                        var s,
                                                                            a = new XMLHttpRequest();
                                                                        try {
                                                                            a.responseType = "json";
                                                                        } catch (t) {}
                                                                        a.onreadystatechange = function () {
                                                                            if (4 === a.readyState)
                                                                                if (200 === a.status) (s = t(a)), i(s);
                                                                                else
                                                                                    try {
                                                                                        (s = t(a)), i(s);
                                                                                    } catch (t) {
                                                                                        n && n(t);
                                                                                    }
                                                                        };
                                                                        try {
                                                                            a.open(["G", "E", "T"].join(""), e, !0);
                                                                        } catch (t) {
                                                                            a.open(["G", "E", "T"].join(""), r + "/" + e, !0);
                                                                        }
                                                                        a.send();
                                                                    },
                                                                };
                                                            })()),
                                                        "loadAnimation" === t.data.type)
                                                    )
                                                        s.assetLoader.load(
                                                            t.data.path,
                                                            t.data.fullPath,
                                                            function (e) {
                                                                s.dataManager.completeData(e), s.postMessage({ id: t.data.id, payload: e, status: "success" });
                                                            },
                                                            function () {
                                                                s.postMessage({ id: t.data.id, status: "error" });
                                                            }
                                                        );
                                                    else if ("complete" === t.data.type) {
                                                        var e = t.data.animation;
                                                        s.dataManager.completeData(e), s.postMessage({ id: t.data.id, payload: e, status: "success" });
                                                    } else
                                                        "loadData" === t.data.type &&
                                                            s.assetLoader.load(
                                                                t.data.path,
                                                                t.data.fullPath,
                                                                function (e) {
                                                                    s.postMessage({ id: t.data.id, payload: e, status: "success" });
                                                                },
                                                                function () {
                                                                    s.postMessage({ id: t.data.id, status: "error" });
                                                                }
                                                            );
                                                })).onmessage = function (t) {
                                                    var e = t.data,
                                                        r = e.id,
                                                        n = i[r];
                                                    (i[r] = null), "success" === e.status ? n.onComplete(e.payload) : n.onError && n.onError();
                                                });
                                        }
                                        function o(t, e) {
                                            var n = "processId_" + (r += 1);
                                            return (i[n] = { onComplete: t, onError: e }), n;
                                        }
                                        return {
                                            loadAnimation: function (t, r, i) {
                                                a();
                                                var n = o(r, i);
                                                e.postMessage({ type: "loadAnimation", path: t, fullPath: window.location.origin + window.location.pathname, id: n });
                                            },
                                            loadData: function (t, r, i) {
                                                a();
                                                var n = o(r, i);
                                                e.postMessage({ type: "loadData", path: t, fullPath: window.location.origin + window.location.pathname, id: n });
                                            },
                                            completeAnimation: function (t, r, i) {
                                                a();
                                                var n = o(r, i);
                                                e.postMessage({ type: "complete", animation: t, id: n });
                                            },
                                        };
                                    })(),
                                    ImagePreloader = (function () {
                                        var t = (function () {
                                            var t = createTag("canvas");
                                            (t.width = 1), (t.height = 1);
                                            var e = t.getContext("2d");
                                            return (e.fillStyle = "rgba(0,0,0,0)"), e.fillRect(0, 0, 1, 1), t;
                                        })();
                                        function e() {
                                            (this.loadedAssets += 1), this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null);
                                        }
                                        function r() {
                                            (this.loadedFootagesCount += 1), this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null);
                                        }
                                        function i(t, e, r) {
                                            var i = "";
                                            if (t.e) i = t.p;
                                            else if (e) {
                                                var n = t.p;
                                                -1 !== n.indexOf("images/") && (n = n.split("/")[1]), (i = e + n);
                                            } else (i = r), (i += t.u ? t.u : ""), (i += t.p);
                                            return i;
                                        }
                                        function n(t) {
                                            var e = 0,
                                                r = setInterval(
                                                    function () {
                                                        (t.getBBox().width || e > 500) && (this._imageLoaded(), clearInterval(r)), (e += 1);
                                                    }.bind(this),
                                                    50
                                                );
                                        }
                                        function s(t) {
                                            var e = { assetData: t },
                                                r = i(t, this.assetsPath, this.path);
                                            return (
                                                dataManager.loadData(
                                                    r,
                                                    function (t) {
                                                        (e.img = t), this._footageLoaded();
                                                    }.bind(this),
                                                    function () {
                                                        (e.img = {}), this._footageLoaded();
                                                    }.bind(this)
                                                ),
                                                e
                                            );
                                        }
                                        function a() {
                                            (this._imageLoaded = e.bind(this)),
                                                (this._footageLoaded = r.bind(this)),
                                                (this.testImageLoaded = n.bind(this)),
                                                (this.createFootageData = s.bind(this)),
                                                (this.assetsPath = ""),
                                                (this.path = ""),
                                                (this.totalImages = 0),
                                                (this.totalFootages = 0),
                                                (this.loadedAssets = 0),
                                                (this.loadedFootagesCount = 0),
                                                (this.imagesLoadedCb = null),
                                                (this.images = []);
                                        }
                                        return (
                                            (a.prototype = {
                                                loadAssets: function (t, e) {
                                                    var r;
                                                    this.imagesLoadedCb = e;
                                                    var i = t.length;
                                                    for (r = 0; r < i; r += 1)
                                                        t[r].layers ||
                                                            (t[r].t && "seq" !== t[r].t
                                                                ? 3 === t[r].t && ((this.totalFootages += 1), this.images.push(this.createFootageData(t[r])))
                                                                : ((this.totalImages += 1), this.images.push(this._createImageData(t[r]))));
                                                },
                                                setAssetsPath: function (t) {
                                                    this.assetsPath = t || "";
                                                },
                                                setPath: function (t) {
                                                    this.path = t || "";
                                                },
                                                loadedImages: function () {
                                                    return this.totalImages === this.loadedAssets;
                                                },
                                                loadedFootages: function () {
                                                    return this.totalFootages === this.loadedFootagesCount;
                                                },
                                                destroy: function () {
                                                    (this.imagesLoadedCb = null), (this.images.length = 0);
                                                },
                                                getAsset: function (t) {
                                                    for (var e = 0, r = this.images.length; e < r; ) {
                                                        if (this.images[e].assetData === t) return this.images[e].img;
                                                        e += 1;
                                                    }
                                                    return null;
                                                },
                                                createImgData: function (e) {
                                                    var r = i(e, this.assetsPath, this.path),
                                                        n = createTag("img");
                                                    (n.crossOrigin = "anonymous"),
                                                        n.addEventListener("load", this._imageLoaded, !1),
                                                        n.addEventListener(
                                                            "error",
                                                            function () {
                                                                (s.img = t), this._imageLoaded();
                                                            }.bind(this),
                                                            !1
                                                        ),
                                                        (n.src = r);
                                                    var s = { img: n, assetData: e };
                                                    return s;
                                                },
                                                createImageData: function (e) {
                                                    var r = i(e, this.assetsPath, this.path),
                                                        n = createNS("image");
                                                    isSafari ? this.testImageLoaded(n) : n.addEventListener("load", this._imageLoaded, !1),
                                                        n.addEventListener(
                                                            "error",
                                                            function () {
                                                                (s.img = t), this._imageLoaded();
                                                            }.bind(this),
                                                            !1
                                                        ),
                                                        n.setAttributeNS("http://www.w3.org/1999/xlink", "href", r),
                                                        this._elementHelper.append ? this._elementHelper.append(n) : this._elementHelper.appendChild(n);
                                                    var s = { img: n, assetData: e };
                                                    return s;
                                                },
                                                imageLoaded: e,
                                                footageLoaded: r,
                                                setCacheType: function (t, e) {
                                                    "svg" === t ? ((this._elementHelper = e), (this._createImageData = this.createImageData.bind(this))) : (this._createImageData = this.createImgData.bind(this));
                                                },
                                            }),
                                            a
                                        );
                                    })();
                                function BaseEvent() {}
                                BaseEvent.prototype = {
                                    triggerEvent: function (t, e) {
                                        if (this._cbs[t]) for (var r = this._cbs[t], i = 0; i < r.length; i += 1) r[i](e);
                                    },
                                    addEventListener: function (t, e) {
                                        return (
                                            this._cbs[t] || (this._cbs[t] = []),
                                            this._cbs[t].push(e),
                                            function () {
                                                this.removeEventListener(t, e);
                                            }.bind(this)
                                        );
                                    },
                                    removeEventListener: function (t, e) {
                                        if (e) {
                                            if (this._cbs[t]) {
                                                for (var r = 0, i = this._cbs[t].length; r < i; ) this._cbs[t][r] === e && (this._cbs[t].splice(r, 1), (r -= 1), (i -= 1)), (r += 1);
                                                this._cbs[t].length || (this._cbs[t] = null);
                                            }
                                        } else this._cbs[t] = null;
                                    },
                                };
                                var markerParser = (function () {
                                        function t(t) {
                                            for (var e, r = t.split("\r\n"), i = {}, n = 0, s = 0; s < r.length; s += 1) 2 === (e = r[s].split(":")).length && ((i[e[0]] = e[1].trim()), (n += 1));
                                            if (0 === n) throw new Error();
                                            return i;
                                        }
                                        return function (e) {
                                            for (var r = [], i = 0; i < e.length; i += 1) {
                                                var n = e[i],
                                                    s = { time: n.tm, duration: n.dr };
                                                try {
                                                    s.payload = JSON.parse(e[i].cm);
                                                } catch (r) {
                                                    try {
                                                        s.payload = t(e[i].cm);
                                                    } catch (t) {
                                                        s.payload = { name: e[i].cm };
                                                    }
                                                }
                                                r.push(s);
                                            }
                                            return r;
                                        };
                                    })(),
                                    ProjectInterface = (function () {
                                        function t(t) {
                                            this.compositions.push(t);
                                        }
                                        return function () {
                                            function e(t) {
                                                for (var e = 0, r = this.compositions.length; e < r; ) {
                                                    if (this.compositions[e].data && this.compositions[e].data.nm === t)
                                                        return this.compositions[e].prepareFrame && this.compositions[e].data.xt && this.compositions[e].prepareFrame(this.currentFrame), this.compositions[e].compInterface;
                                                    e += 1;
                                                }
                                                return null;
                                            }
                                            return (e.compositions = []), (e.currentFrame = 0), (e.registerComposition = t), e;
                                        };
                                    })(),
                                    renderers = {},
                                    registerRenderer = function (t, e) {
                                        renderers[t] = e;
                                    };
                                function getRenderer(t) {
                                    return renderers[t];
                                }
                                function _typeof$4(t) {
                                    return (_typeof$4 =
                                        "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                                            ? function (t) {
                                                  return typeof t;
                                              }
                                            : function (t) {
                                                  return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                                              })(t);
                                }
                                var AnimationItem = function () {
                                    (this._cbs = []),
                                        (this.name = ""),
                                        (this.path = ""),
                                        (this.isLoaded = !1),
                                        (this.currentFrame = 0),
                                        (this.currentRawFrame = 0),
                                        (this.firstFrame = 0),
                                        (this.totalFrames = 0),
                                        (this.frameRate = 0),
                                        (this.frameMult = 0),
                                        (this.playSpeed = 1),
                                        (this.playDirection = 1),
                                        (this.playCount = 0),
                                        (this.animationData = {}),
                                        (this.assets = []),
                                        (this.isPaused = !0),
                                        (this.autoplay = !1),
                                        (this.loop = !0),
                                        (this.renderer = null),
                                        (this.animationID = createElementID()),
                                        (this.assetsPath = ""),
                                        (this.timeCompleted = 0),
                                        (this.segmentPos = 0),
                                        (this.isSubframeEnabled = getSubframeEnabled()),
                                        (this.segments = []),
                                        (this._idle = !0),
                                        (this._completedLoop = !1),
                                        (this.projectInterface = ProjectInterface()),
                                        (this.imagePreloader = new ImagePreloader()),
                                        (this.audioController = audioControllerFactory()),
                                        (this.markers = []),
                                        (this.configAnimation = this.configAnimation.bind(this)),
                                        (this.onSetupError = this.onSetupError.bind(this)),
                                        (this.onSegmentComplete = this.onSegmentComplete.bind(this)),
                                        (this.drawnFrameEvent = new BMEnterFrameEvent("drawnFrame", 0, 0, 0));
                                };
                                extendPrototype([BaseEvent], AnimationItem),
                                    (AnimationItem.prototype.setParams = function (t) {
                                        (t.wrapper || t.container) && (this.wrapper = t.wrapper || t.container);
                                        var e = "svg";
                                        t.animType ? (e = t.animType) : t.renderer && (e = t.renderer);
                                        var r = getRenderer(e);
                                        (this.renderer = new r(this, t.rendererSettings)),
                                            this.imagePreloader.setCacheType(e, this.renderer.globalData.defs),
                                            this.renderer.setProjectInterface(this.projectInterface),
                                            (this.animType = e),
                                            "" === t.loop || null === t.loop || void 0 === t.loop || !0 === t.loop ? (this.loop = !0) : !1 === t.loop ? (this.loop = !1) : (this.loop = parseInt(t.loop, 10)),
                                            (this.autoplay = !("autoplay" in t) || t.autoplay),
                                            (this.name = t.name ? t.name : ""),
                                            (this.autoloadSegments = !Object.prototype.hasOwnProperty.call(t, "autoloadSegments") || t.autoloadSegments),
                                            (this.assetsPath = t.assetsPath),
                                            (this.initialSegment = t.initialSegment),
                                            t.audioFactory && this.audioController.setAudioFactory(t.audioFactory),
                                            t.animationData
                                                ? this.setupAnimation(t.animationData)
                                                : t.path &&
                                                  (-1 !== t.path.lastIndexOf("\\") ? (this.path = t.path.substr(0, t.path.lastIndexOf("\\") + 1)) : (this.path = t.path.substr(0, t.path.lastIndexOf("/") + 1)),
                                                  (this.fileName = t.path.substr(t.path.lastIndexOf("/") + 1)),
                                                  (this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(".json"))),
                                                  dataManager.loadAnimation(t.path, this.configAnimation, this.onSetupError));
                                    }),
                                    (AnimationItem.prototype.onSetupError = function () {
                                        this.trigger("data_failed");
                                    }),
                                    (AnimationItem.prototype.setupAnimation = function (t) {
                                        dataManager.completeAnimation(t, this.configAnimation);
                                    }),
                                    (AnimationItem.prototype.setData = function (t, e) {
                                        e && "object" !== _typeof$4(e) && (e = JSON.parse(e));
                                        var r = { wrapper: t, animationData: e },
                                            i = t.attributes;
                                        (r.path = i.getNamedItem("data-animation-path")
                                            ? i.getNamedItem("data-animation-path").value
                                            : i.getNamedItem("data-bm-path")
                                            ? i.getNamedItem("data-bm-path").value
                                            : i.getNamedItem("bm-path")
                                            ? i.getNamedItem("bm-path").value
                                            : ""),
                                            (r.animType = i.getNamedItem("data-anim-type")
                                                ? i.getNamedItem("data-anim-type").value
                                                : i.getNamedItem("data-bm-type")
                                                ? i.getNamedItem("data-bm-type").value
                                                : i.getNamedItem("bm-type")
                                                ? i.getNamedItem("bm-type").value
                                                : i.getNamedItem("data-bm-renderer")
                                                ? i.getNamedItem("data-bm-renderer").value
                                                : i.getNamedItem("bm-renderer")
                                                ? i.getNamedItem("bm-renderer").value
                                                : "canvas");
                                        var n = i.getNamedItem("data-anim-loop")
                                            ? i.getNamedItem("data-anim-loop").value
                                            : i.getNamedItem("data-bm-loop")
                                            ? i.getNamedItem("data-bm-loop").value
                                            : i.getNamedItem("bm-loop")
                                            ? i.getNamedItem("bm-loop").value
                                            : "";
                                        "false" === n ? (r.loop = !1) : "true" === n ? (r.loop = !0) : "" !== n && (r.loop = parseInt(n, 10));
                                        var s = i.getNamedItem("data-anim-autoplay")
                                            ? i.getNamedItem("data-anim-autoplay").value
                                            : i.getNamedItem("data-bm-autoplay")
                                            ? i.getNamedItem("data-bm-autoplay").value
                                            : !i.getNamedItem("bm-autoplay") || i.getNamedItem("bm-autoplay").value;
                                        (r.autoplay = "false" !== s),
                                            (r.name = i.getNamedItem("data-name")
                                                ? i.getNamedItem("data-name").value
                                                : i.getNamedItem("data-bm-name")
                                                ? i.getNamedItem("data-bm-name").value
                                                : i.getNamedItem("bm-name")
                                                ? i.getNamedItem("bm-name").value
                                                : ""),
                                            "false" ===
                                                (i.getNamedItem("data-anim-prerender")
                                                    ? i.getNamedItem("data-anim-prerender").value
                                                    : i.getNamedItem("data-bm-prerender")
                                                    ? i.getNamedItem("data-bm-prerender").value
                                                    : i.getNamedItem("bm-prerender")
                                                    ? i.getNamedItem("bm-prerender").value
                                                    : "") && (r.prerender = !1),
                                            this.setParams(r);
                                    }),
                                    (AnimationItem.prototype.includeLayers = function (t) {
                                        t.op > this.animationData.op && ((this.animationData.op = t.op), (this.totalFrames = Math.floor(t.op - this.animationData.ip)));
                                        var e,
                                            r,
                                            i = this.animationData.layers,
                                            n = i.length,
                                            s = t.layers,
                                            a = s.length;
                                        for (r = 0; r < a; r += 1)
                                            for (e = 0; e < n; ) {
                                                if (i[e].id === s[r].id) {
                                                    i[e] = s[r];
                                                    break;
                                                }
                                                e += 1;
                                            }
                                        if (((t.chars || t.fonts) && (this.renderer.globalData.fontManager.addChars(t.chars), this.renderer.globalData.fontManager.addFonts(t.fonts, this.renderer.globalData.defs)), t.assets))
                                            for (n = t.assets.length, e = 0; e < n; e += 1) this.animationData.assets.push(t.assets[e]);
                                        (this.animationData.__complete = !1), dataManager.completeAnimation(this.animationData, this.onSegmentComplete);
                                    }),
                                    (AnimationItem.prototype.onSegmentComplete = function (t) {
                                        this.animationData = t;
                                        var e = getExpressionsPlugin();
                                        e && e.initExpressions(this), this.loadNextSegment();
                                    }),
                                    (AnimationItem.prototype.loadNextSegment = function () {
                                        var t = this.animationData.segments;
                                        if (!t || 0 === t.length || !this.autoloadSegments) return this.trigger("data_ready"), void (this.timeCompleted = this.totalFrames);
                                        var e = t.shift();
                                        this.timeCompleted = e.time * this.frameRate;
                                        var r = this.path + this.fileName + "_" + this.segmentPos + ".json";
                                        (this.segmentPos += 1),
                                            dataManager.loadData(
                                                r,
                                                this.includeLayers.bind(this),
                                                function () {
                                                    this.trigger("data_failed");
                                                }.bind(this)
                                            );
                                    }),
                                    (AnimationItem.prototype.loadSegments = function () {
                                        this.animationData.segments || (this.timeCompleted = this.totalFrames), this.loadNextSegment();
                                    }),
                                    (AnimationItem.prototype.imagesLoaded = function () {
                                        this.trigger("loaded_images"), this.checkLoaded();
                                    }),
                                    (AnimationItem.prototype.preloadImages = function () {
                                        this.imagePreloader.setAssetsPath(this.assetsPath), this.imagePreloader.setPath(this.path), this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));
                                    }),
                                    (AnimationItem.prototype.configAnimation = function (t) {
                                        if (this.renderer)
                                            try {
                                                (this.animationData = t),
                                                    this.initialSegment
                                                        ? ((this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0])), (this.firstFrame = Math.round(this.initialSegment[0])))
                                                        : ((this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip)), (this.firstFrame = Math.round(this.animationData.ip))),
                                                    this.renderer.configAnimation(t),
                                                    t.assets || (t.assets = []),
                                                    (this.assets = this.animationData.assets),
                                                    (this.frameRate = this.animationData.fr),
                                                    (this.frameMult = this.animationData.fr / 1e3),
                                                    this.renderer.searchExtraCompositions(t.assets),
                                                    (this.markers = markerParser(t.markers || [])),
                                                    this.trigger("config_ready"),
                                                    this.preloadImages(),
                                                    this.loadSegments(),
                                                    this.updaFrameModifier(),
                                                    this.waitForFontsLoaded(),
                                                    this.isPaused && this.audioController.pause();
                                            } catch (t) {
                                                this.triggerConfigError(t);
                                            }
                                    }),
                                    (AnimationItem.prototype.waitForFontsLoaded = function () {
                                        this.renderer && (this.renderer.globalData.fontManager.isLoaded ? this.checkLoaded() : setTimeout(this.waitForFontsLoaded.bind(this), 20));
                                    }),
                                    (AnimationItem.prototype.checkLoaded = function () {
                                        if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || "canvas" !== this.renderer.rendererType) && this.imagePreloader.loadedFootages()) {
                                            this.isLoaded = !0;
                                            var t = getExpressionsPlugin();
                                            t && t.initExpressions(this),
                                                this.renderer.initItems(),
                                                setTimeout(
                                                    function () {
                                                        this.trigger("DOMLoaded");
                                                    }.bind(this),
                                                    0
                                                ),
                                                this.gotoFrame(),
                                                this.autoplay && this.play();
                                        }
                                    }),
                                    (AnimationItem.prototype.resize = function (t, e) {
                                        var r = "number" == typeof t ? t : void 0,
                                            i = "number" == typeof e ? e : void 0;
                                        this.renderer.updateContainerSize(r, i);
                                    }),
                                    (AnimationItem.prototype.setSubframe = function (t) {
                                        this.isSubframeEnabled = !!t;
                                    }),
                                    (AnimationItem.prototype.gotoFrame = function () {
                                        (this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame),
                                            this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted && (this.currentFrame = this.timeCompleted),
                                            this.trigger("enterFrame"),
                                            this.renderFrame(),
                                            this.trigger("drawnFrame");
                                    }),
                                    (AnimationItem.prototype.renderFrame = function () {
                                        if (!1 !== this.isLoaded && this.renderer)
                                            try {
                                                this.renderer.renderFrame(this.currentFrame + this.firstFrame);
                                            } catch (t) {
                                                this.triggerRenderFrameError(t);
                                            }
                                    }),
                                    (AnimationItem.prototype.play = function (t) {
                                        (t && this.name !== t) || (!0 === this.isPaused && ((this.isPaused = !1), this.trigger("_pause"), this.audioController.resume(), this._idle && ((this._idle = !1), this.trigger("_active"))));
                                    }),
                                    (AnimationItem.prototype.pause = function (t) {
                                        (t && this.name !== t) || (!1 === this.isPaused && ((this.isPaused = !0), this.trigger("_play"), (this._idle = !0), this.trigger("_idle"), this.audioController.pause()));
                                    }),
                                    (AnimationItem.prototype.togglePause = function (t) {
                                        (t && this.name !== t) || (!0 === this.isPaused ? this.play() : this.pause());
                                    }),
                                    (AnimationItem.prototype.stop = function (t) {
                                        (t && this.name !== t) || (this.pause(), (this.playCount = 0), (this._completedLoop = !1), this.setCurrentRawFrameValue(0));
                                    }),
                                    (AnimationItem.prototype.getMarkerData = function (t) {
                                        for (var e, r = 0; r < this.markers.length; r += 1) if ((e = this.markers[r]).payload && e.payload.name === t) return e;
                                        return null;
                                    }),
                                    (AnimationItem.prototype.goToAndStop = function (t, e, r) {
                                        if (!r || this.name === r) {
                                            var i = Number(t);
                                            if (isNaN(i)) {
                                                var n = this.getMarkerData(t);
                                                n && this.goToAndStop(n.time, !0);
                                            } else e ? this.setCurrentRawFrameValue(t) : this.setCurrentRawFrameValue(t * this.frameModifier);
                                            this.pause();
                                        }
                                    }),
                                    (AnimationItem.prototype.goToAndPlay = function (t, e, r) {
                                        if (!r || this.name === r) {
                                            var i = Number(t);
                                            if (isNaN(i)) {
                                                var n = this.getMarkerData(t);
                                                n && (n.duration ? this.playSegments([n.time, n.time + n.duration], !0) : this.goToAndStop(n.time, !0));
                                            } else this.goToAndStop(i, e, r);
                                            this.play();
                                        }
                                    }),
                                    (AnimationItem.prototype.advanceTime = function (t) {
                                        if (!0 !== this.isPaused && !1 !== this.isLoaded) {
                                            var e = this.currentRawFrame + t * this.frameModifier,
                                                r = !1;
                                            e >= this.totalFrames - 1 && this.frameModifier > 0
                                                ? this.loop && this.playCount !== this.loop
                                                    ? e >= this.totalFrames
                                                        ? ((this.playCount += 1), this.checkSegments(e % this.totalFrames) || (this.setCurrentRawFrameValue(e % this.totalFrames), (this._completedLoop = !0), this.trigger("loopComplete")))
                                                        : this.setCurrentRawFrameValue(e)
                                                    : this.checkSegments(e > this.totalFrames ? e % this.totalFrames : 0) || ((r = !0), (e = this.totalFrames - 1))
                                                : e < 0
                                                ? this.checkSegments(e % this.totalFrames) ||
                                                  (!this.loop || (this.playCount-- <= 0 && !0 !== this.loop)
                                                      ? ((r = !0), (e = 0))
                                                      : (this.setCurrentRawFrameValue(this.totalFrames + (e % this.totalFrames)), this._completedLoop ? this.trigger("loopComplete") : (this._completedLoop = !0)))
                                                : this.setCurrentRawFrameValue(e),
                                                r && (this.setCurrentRawFrameValue(e), this.pause(), this.trigger("complete"));
                                        }
                                    }),
                                    (AnimationItem.prototype.adjustSegment = function (t, e) {
                                        (this.playCount = 0),
                                            t[1] < t[0]
                                                ? (this.frameModifier > 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(-1)),
                                                  (this.totalFrames = t[0] - t[1]),
                                                  (this.timeCompleted = this.totalFrames),
                                                  (this.firstFrame = t[1]),
                                                  this.setCurrentRawFrameValue(this.totalFrames - 0.001 - e))
                                                : t[1] > t[0] &&
                                                  (this.frameModifier < 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(1)),
                                                  (this.totalFrames = t[1] - t[0]),
                                                  (this.timeCompleted = this.totalFrames),
                                                  (this.firstFrame = t[0]),
                                                  this.setCurrentRawFrameValue(0.001 + e)),
                                            this.trigger("segmentStart");
                                    }),
                                    (AnimationItem.prototype.setSegment = function (t, e) {
                                        var r = -1;
                                        this.isPaused && (this.currentRawFrame + this.firstFrame < t ? (r = t) : this.currentRawFrame + this.firstFrame > e && (r = e - t)),
                                            (this.firstFrame = t),
                                            (this.totalFrames = e - t),
                                            (this.timeCompleted = this.totalFrames),
                                            -1 !== r && this.goToAndStop(r, !0);
                                    }),
                                    (AnimationItem.prototype.playSegments = function (t, e) {
                                        if ((e && (this.segments.length = 0), "object" === _typeof$4(t[0]))) {
                                            var r,
                                                i = t.length;
                                            for (r = 0; r < i; r += 1) this.segments.push(t[r]);
                                        } else this.segments.push(t);
                                        this.segments.length && e && this.adjustSegment(this.segments.shift(), 0), this.isPaused && this.play();
                                    }),
                                    (AnimationItem.prototype.resetSegments = function (t) {
                                        (this.segments.length = 0), this.segments.push([this.animationData.ip, this.animationData.op]), t && this.checkSegments(0);
                                    }),
                                    (AnimationItem.prototype.checkSegments = function (t) {
                                        return !!this.segments.length && (this.adjustSegment(this.segments.shift(), t), !0);
                                    }),
                                    (AnimationItem.prototype.destroy = function (t) {
                                        (t && this.name !== t) ||
                                            !this.renderer ||
                                            (this.renderer.destroy(),
                                            this.imagePreloader.destroy(),
                                            this.trigger("destroy"),
                                            (this._cbs = null),
                                            (this.onEnterFrame = null),
                                            (this.onLoopComplete = null),
                                            (this.onComplete = null),
                                            (this.onSegmentStart = null),
                                            (this.onDestroy = null),
                                            (this.renderer = null),
                                            (this.renderer = null),
                                            (this.imagePreloader = null),
                                            (this.projectInterface = null));
                                    }),
                                    (AnimationItem.prototype.setCurrentRawFrameValue = function (t) {
                                        (this.currentRawFrame = t), this.gotoFrame();
                                    }),
                                    (AnimationItem.prototype.setSpeed = function (t) {
                                        (this.playSpeed = t), this.updaFrameModifier();
                                    }),
                                    (AnimationItem.prototype.setDirection = function (t) {
                                        (this.playDirection = t < 0 ? -1 : 1), this.updaFrameModifier();
                                    }),
                                    (AnimationItem.prototype.setVolume = function (t, e) {
                                        (e && this.name !== e) || this.audioController.setVolume(t);
                                    }),
                                    (AnimationItem.prototype.getVolume = function () {
                                        return this.audioController.getVolume();
                                    }),
                                    (AnimationItem.prototype.mute = function (t) {
                                        (t && this.name !== t) || this.audioController.mute();
                                    }),
                                    (AnimationItem.prototype.unmute = function (t) {
                                        (t && this.name !== t) || this.audioController.unmute();
                                    }),
                                    (AnimationItem.prototype.updaFrameModifier = function () {
                                        (this.frameModifier = this.frameMult * this.playSpeed * this.playDirection), this.audioController.setRate(this.playSpeed * this.playDirection);
                                    }),
                                    (AnimationItem.prototype.getPath = function () {
                                        return this.path;
                                    }),
                                    (AnimationItem.prototype.getAssetsPath = function (t) {
                                        var e = "";
                                        if (t.e) e = t.p;
                                        else if (this.assetsPath) {
                                            var r = t.p;
                                            -1 !== r.indexOf("images/") && (r = r.split("/")[1]), (e = this.assetsPath + r);
                                        } else (e = this.path), (e += t.u ? t.u : ""), (e += t.p);
                                        return e;
                                    }),
                                    (AnimationItem.prototype.getAssetData = function (t) {
                                        for (var e = 0, r = this.assets.length; e < r; ) {
                                            if (t === this.assets[e].id) return this.assets[e];
                                            e += 1;
                                        }
                                        return null;
                                    }),
                                    (AnimationItem.prototype.hide = function () {
                                        this.renderer.hide();
                                    }),
                                    (AnimationItem.prototype.show = function () {
                                        this.renderer.show();
                                    }),
                                    (AnimationItem.prototype.getDuration = function (t) {
                                        return t ? this.totalFrames : this.totalFrames / this.frameRate;
                                    }),
                                    (AnimationItem.prototype.updateDocumentData = function (t, e, r) {
                                        try {
                                            this.renderer.getElementByPath(t).updateDocumentData(e, r);
                                        } catch (t) {}
                                    }),
                                    (AnimationItem.prototype.trigger = function (t) {
                                        if (this._cbs && this._cbs[t])
                                            switch (t) {
                                                case "enterFrame":
                                                    this.triggerEvent(t, new BMEnterFrameEvent(t, this.currentFrame, this.totalFrames, this.frameModifier));
                                                    break;
                                                case "drawnFrame":
                                                    (this.drawnFrameEvent.currentTime = this.currentFrame),
                                                        (this.drawnFrameEvent.totalTime = this.totalFrames),
                                                        (this.drawnFrameEvent.direction = this.frameModifier),
                                                        this.triggerEvent(t, this.drawnFrameEvent);
                                                    break;
                                                case "loopComplete":
                                                    this.triggerEvent(t, new BMCompleteLoopEvent(t, this.loop, this.playCount, this.frameMult));
                                                    break;
                                                case "complete":
                                                    this.triggerEvent(t, new BMCompleteEvent(t, this.frameMult));
                                                    break;
                                                case "segmentStart":
                                                    this.triggerEvent(t, new BMSegmentStartEvent(t, this.firstFrame, this.totalFrames));
                                                    break;
                                                case "destroy":
                                                    this.triggerEvent(t, new BMDestroyEvent(t, this));
                                                    break;
                                                default:
                                                    this.triggerEvent(t);
                                            }
                                        "enterFrame" === t && this.onEnterFrame && this.onEnterFrame.call(this, new BMEnterFrameEvent(t, this.currentFrame, this.totalFrames, this.frameMult)),
                                            "loopComplete" === t && this.onLoopComplete && this.onLoopComplete.call(this, new BMCompleteLoopEvent(t, this.loop, this.playCount, this.frameMult)),
                                            "complete" === t && this.onComplete && this.onComplete.call(this, new BMCompleteEvent(t, this.frameMult)),
                                            "segmentStart" === t && this.onSegmentStart && this.onSegmentStart.call(this, new BMSegmentStartEvent(t, this.firstFrame, this.totalFrames)),
                                            "destroy" === t && this.onDestroy && this.onDestroy.call(this, new BMDestroyEvent(t, this));
                                    }),
                                    (AnimationItem.prototype.triggerRenderFrameError = function (t) {
                                        var e = new BMRenderFrameErrorEvent(t, this.currentFrame);
                                        this.triggerEvent("error", e), this.onError && this.onError.call(this, e);
                                    }),
                                    (AnimationItem.prototype.triggerConfigError = function (t) {
                                        var e = new BMConfigErrorEvent(t, this.currentFrame);
                                        this.triggerEvent("error", e), this.onError && this.onError.call(this, e);
                                    });
                                var animationManager = (function () {
                                        var t = {},
                                            e = [],
                                            r = 0,
                                            i = 0,
                                            n = 0,
                                            s = !0,
                                            a = !1;
                                        function o(t) {
                                            for (var r = 0, n = t.target; r < i; ) e[r].animation === n && (e.splice(r, 1), (r -= 1), (i -= 1), n.isPaused || c()), (r += 1);
                                        }
                                        function l(t, r) {
                                            if (!t) return null;
                                            for (var n = 0; n < i; ) {
                                                if (e[n].elem === t && null !== e[n].elem) return e[n].animation;
                                                n += 1;
                                            }
                                            var s = new AnimationItem();
                                            return p(s, t), s.setData(t, r), s;
                                        }
                                        function h() {
                                            (n += 1), f();
                                        }
                                        function c() {
                                            n -= 1;
                                        }
                                        function p(t, r) {
                                            t.addEventListener("destroy", o), t.addEventListener("_active", h), t.addEventListener("_idle", c), e.push({ elem: r, animation: t }), (i += 1);
                                        }
                                        function d(t) {
                                            var o,
                                                l = t - r;
                                            for (o = 0; o < i; o += 1) e[o].animation.advanceTime(l);
                                            (r = t), n && !a ? window.requestAnimationFrame(d) : (s = !0);
                                        }
                                        function u(t) {
                                            (r = t), window.requestAnimationFrame(d);
                                        }
                                        function f() {
                                            !a && n && s && (window.requestAnimationFrame(u), (s = !1));
                                        }
                                        return (
                                            (t.registerAnimation = l),
                                            (t.loadAnimation = function (t) {
                                                var e = new AnimationItem();
                                                return p(e, null), e.setParams(t), e;
                                            }),
                                            (t.setSpeed = function (t, r) {
                                                var n;
                                                for (n = 0; n < i; n += 1) e[n].animation.setSpeed(t, r);
                                            }),
                                            (t.setDirection = function (t, r) {
                                                var n;
                                                for (n = 0; n < i; n += 1) e[n].animation.setDirection(t, r);
                                            }),
                                            (t.play = function (t) {
                                                var r;
                                                for (r = 0; r < i; r += 1) e[r].animation.play(t);
                                            }),
                                            (t.pause = function (t) {
                                                var r;
                                                for (r = 0; r < i; r += 1) e[r].animation.pause(t);
                                            }),
                                            (t.stop = function (t) {
                                                var r;
                                                for (r = 0; r < i; r += 1) e[r].animation.stop(t);
                                            }),
                                            (t.togglePause = function (t) {
                                                var r;
                                                for (r = 0; r < i; r += 1) e[r].animation.togglePause(t);
                                            }),
                                            (t.searchAnimations = function (t, e, r) {
                                                var i,
                                                    n = [].concat([].slice.call(document.getElementsByClassName("lottie")), [].slice.call(document.getElementsByClassName("bodymovin"))),
                                                    s = n.length;
                                                for (i = 0; i < s; i += 1) r && n[i].setAttribute("data-bm-type", r), l(n[i], t);
                                                if (e && 0 === s) {
                                                    r || (r = "svg");
                                                    var a = document.getElementsByTagName("body")[0];
                                                    a.innerText = "";
                                                    var o = createTag("div");
                                                    (o.style.width = "100%"), (o.style.height = "100%"), o.setAttribute("data-bm-type", r), a.appendChild(o), l(o, t);
                                                }
                                            }),
                                            (t.resize = function () {
                                                var t;
                                                for (t = 0; t < i; t += 1) e[t].animation.resize();
                                            }),
                                            (t.goToAndStop = function (t, r, n) {
                                                var s;
                                                for (s = 0; s < i; s += 1) e[s].animation.goToAndStop(t, r, n);
                                            }),
                                            (t.destroy = function (t) {
                                                var r;
                                                for (r = i - 1; r >= 0; r -= 1) e[r].animation.destroy(t);
                                            }),
                                            (t.freeze = function () {
                                                a = !0;
                                            }),
                                            (t.unfreeze = function () {
                                                (a = !1), f();
                                            }),
                                            (t.setVolume = function (t, r) {
                                                var n;
                                                for (n = 0; n < i; n += 1) e[n].animation.setVolume(t, r);
                                            }),
                                            (t.mute = function (t) {
                                                var r;
                                                for (r = 0; r < i; r += 1) e[r].animation.mute(t);
                                            }),
                                            (t.unmute = function (t) {
                                                var r;
                                                for (r = 0; r < i; r += 1) e[r].animation.unmute(t);
                                            }),
                                            (t.getRegisteredAnimations = function () {
                                                var t,
                                                    r = e.length,
                                                    i = [];
                                                for (t = 0; t < r; t += 1) i.push(e[t].animation);
                                                return i;
                                            }),
                                            t
                                        );
                                    })(),
                                    BezierFactory = (function () {
                                        var t = {
                                                getBezierEasing: function (t, r, i, n, s) {
                                                    var a = s || ("bez_" + t + "_" + r + "_" + i + "_" + n).replace(/\./g, "p");
                                                    if (e[a]) return e[a];
                                                    var o = new l([t, r, i, n]);
                                                    return (e[a] = o), o;
                                                },
                                            },
                                            e = {},
                                            r = "function" == typeof Float32Array;
                                        function i(t, e) {
                                            return 1 - 3 * e + 3 * t;
                                        }
                                        function n(t, e) {
                                            return 3 * e - 6 * t;
                                        }
                                        function s(t) {
                                            return 3 * t;
                                        }
                                        function a(t, e, r) {
                                            return ((i(e, r) * t + n(e, r)) * t + s(e)) * t;
                                        }
                                        function o(t, e, r) {
                                            return 3 * i(e, r) * t * t + 2 * n(e, r) * t + s(e);
                                        }
                                        function l(t) {
                                            (this._p = t), (this._mSampleValues = r ? new Float32Array(11) : new Array(11)), (this._precomputed = !1), (this.get = this.get.bind(this));
                                        }
                                        return (
                                            (l.prototype = {
                                                get: function (t) {
                                                    var e = this._p[0],
                                                        r = this._p[1],
                                                        i = this._p[2],
                                                        n = this._p[3];
                                                    return this._precomputed || this._precompute(), e === r && i === n ? t : 0 === t ? 0 : 1 === t ? 1 : a(this._getTForX(t), r, n);
                                                },
                                                _precompute: function () {
                                                    var t = this._p[0],
                                                        e = this._p[1],
                                                        r = this._p[2],
                                                        i = this._p[3];
                                                    (this._precomputed = !0), (t === e && r === i) || this._calcSampleValues();
                                                },
                                                _calcSampleValues: function () {
                                                    for (var t = this._p[0], e = this._p[2], r = 0; r < 11; ++r) this._mSampleValues[r] = a(0.1 * r, t, e);
                                                },
                                                _getTForX: function (t) {
                                                    for (var e = this._p[0], r = this._p[2], i = this._mSampleValues, n = 0, s = 1; 10 !== s && i[s] <= t; ++s) n += 0.1;
                                                    var l = n + ((t - i[--s]) / (i[s + 1] - i[s])) * 0.1,
                                                        h = o(l, e, r);
                                                    return h >= 0.001
                                                        ? (function (t, e, r, i) {
                                                              for (var n = 0; n < 4; ++n) {
                                                                  var s = o(e, r, i);
                                                                  if (0 === s) return e;
                                                                  e -= (a(e, r, i) - t) / s;
                                                              }
                                                              return e;
                                                          })(t, l, e, r)
                                                        : 0 === h
                                                        ? l
                                                        : (function (t, e, r, i, n) {
                                                              var s,
                                                                  o,
                                                                  l = 0;
                                                              do {
                                                                  (s = a((o = e + (r - e) / 2), i, n) - t) > 0 ? (r = o) : (e = o);
                                                              } while (Math.abs(s) > 1e-7 && ++l < 10);
                                                              return o;
                                                          })(t, n, n + 0.1, e, r);
                                                },
                                            }),
                                            t
                                        );
                                    })(),
                                    pooling = {
                                        double: function (t) {
                                            return t.concat(createSizedArray(t.length));
                                        },
                                    },
                                    poolFactory = function (t, e, r) {
                                        var i = 0,
                                            n = t,
                                            s = createSizedArray(n);
                                        return {
                                            newElement: function () {
                                                return i ? s[(i -= 1)] : e();
                                            },
                                            release: function (t) {
                                                i === n && ((s = pooling.double(s)), (n *= 2)), r && r(t), (s[i] = t), (i += 1);
                                            },
                                        };
                                    },
                                    bezierLengthPool = poolFactory(8, function () {
                                        return { addedLength: 0, percents: createTypedArray("float32", getDefaultCurveSegments()), lengths: createTypedArray("float32", getDefaultCurveSegments()) };
                                    }),
                                    segmentsLengthPool = poolFactory(
                                        8,
                                        function () {
                                            return { lengths: [], totalLength: 0 };
                                        },
                                        function (t) {
                                            var e,
                                                r = t.lengths.length;
                                            for (e = 0; e < r; e += 1) bezierLengthPool.release(t.lengths[e]);
                                            t.lengths.length = 0;
                                        }
                                    );
                                function bezFunction() {
                                    var t = Math;
                                    function e(t, e, r, i, n, s) {
                                        var a = t * i + e * n + r * s - n * i - s * t - r * e;
                                        return a > -0.001 && a < 0.001;
                                    }
                                    var r = function (t, e, r, i) {
                                        var n,
                                            s,
                                            a,
                                            o,
                                            l,
                                            h,
                                            c = getDefaultCurveSegments(),
                                            p = 0,
                                            d = [],
                                            u = [],
                                            f = bezierLengthPool.newElement();
                                        for (a = r.length, n = 0; n < c; n += 1) {
                                            for (l = n / (c - 1), h = 0, s = 0; s < a; s += 1)
                                                (o = bmPow(1 - l, 3) * t[s] + 3 * bmPow(1 - l, 2) * l * r[s] + 3 * (1 - l) * bmPow(l, 2) * i[s] + bmPow(l, 3) * e[s]), (d[s] = o), null !== u[s] && (h += bmPow(d[s] - u[s], 2)), (u[s] = d[s]);
                                            h && (p += h = bmSqrt(h)), (f.percents[n] = l), (f.lengths[n] = p);
                                        }
                                        return (f.addedLength = p), f;
                                    };
                                    function i(t) {
                                        (this.segmentLength = 0), (this.points = new Array(t));
                                    }
                                    function n(t, e) {
                                        (this.partialLength = t), (this.point = e);
                                    }
                                    var s,
                                        a =
                                            ((s = {}),
                                            function (t, r, a, o) {
                                                var l = (t[0] + "_" + t[1] + "_" + r[0] + "_" + r[1] + "_" + a[0] + "_" + a[1] + "_" + o[0] + "_" + o[1]).replace(/\./g, "p");
                                                if (!s[l]) {
                                                    var h,
                                                        c,
                                                        p,
                                                        d,
                                                        u,
                                                        f,
                                                        m,
                                                        y = getDefaultCurveSegments(),
                                                        g = 0,
                                                        v = null;
                                                    2 === t.length && (t[0] !== r[0] || t[1] !== r[1]) && e(t[0], t[1], r[0], r[1], t[0] + a[0], t[1] + a[1]) && e(t[0], t[1], r[0], r[1], r[0] + o[0], r[1] + o[1]) && (y = 2);
                                                    var b = new i(y);
                                                    for (p = a.length, h = 0; h < y; h += 1) {
                                                        for (m = createSizedArray(p), u = h / (y - 1), f = 0, c = 0; c < p; c += 1)
                                                            (d = bmPow(1 - u, 3) * t[c] + 3 * bmPow(1 - u, 2) * u * (t[c] + a[c]) + 3 * (1 - u) * bmPow(u, 2) * (r[c] + o[c]) + bmPow(u, 3) * r[c]),
                                                                (m[c] = d),
                                                                null !== v && (f += bmPow(m[c] - v[c], 2));
                                                        (g += f = bmSqrt(f)), (b.points[h] = new n(f, m)), (v = m);
                                                    }
                                                    (b.segmentLength = g), (s[l] = b);
                                                }
                                                return s[l];
                                            });
                                    function o(t, e) {
                                        var r = e.percents,
                                            i = e.lengths,
                                            n = r.length,
                                            s = bmFloor((n - 1) * t),
                                            a = t * e.addedLength,
                                            o = 0;
                                        if (s === n - 1 || 0 === s || a === i[s]) return r[s];
                                        for (var l = i[s] > a ? -1 : 1, h = !0; h; )
                                            if ((i[s] <= a && i[s + 1] > a ? ((o = (a - i[s]) / (i[s + 1] - i[s])), (h = !1)) : (s += l), s < 0 || s >= n - 1)) {
                                                if (s === n - 1) return r[s];
                                                h = !1;
                                            }
                                        return r[s] + (r[s + 1] - r[s]) * o;
                                    }
                                    var l = createTypedArray("float32", 8);
                                    return {
                                        getSegmentsLength: function (t) {
                                            var e,
                                                i = segmentsLengthPool.newElement(),
                                                n = t.c,
                                                s = t.v,
                                                a = t.o,
                                                o = t.i,
                                                l = t._length,
                                                h = i.lengths,
                                                c = 0;
                                            for (e = 0; e < l - 1; e += 1) (h[e] = r(s[e], s[e + 1], a[e], o[e + 1])), (c += h[e].addedLength);
                                            return n && l && ((h[e] = r(s[e], s[0], a[e], o[0])), (c += h[e].addedLength)), (i.totalLength = c), i;
                                        },
                                        getNewSegment: function (e, r, i, n, s, a, h) {
                                            s < 0 ? (s = 0) : s > 1 && (s = 1);
                                            var c,
                                                p = o(s, h),
                                                d = o((a = a > 1 ? 1 : a), h),
                                                u = e.length,
                                                f = 1 - p,
                                                m = 1 - d,
                                                y = f * f * f,
                                                g = p * f * f * 3,
                                                v = p * p * f * 3,
                                                b = p * p * p,
                                                _ = f * f * m,
                                                w = p * f * m + f * p * m + f * f * d,
                                                S = p * p * m + f * p * d + p * f * d,
                                                E = p * p * d,
                                                P = f * m * m,
                                                x = p * m * m + f * d * m + f * m * d,
                                                k = p * d * m + f * d * d + p * m * d,
                                                A = p * d * d,
                                                T = m * m * m,
                                                C = d * m * m + m * d * m + m * m * d,
                                                I = d * d * m + m * d * d + d * m * d,
                                                M = d * d * d;
                                            for (c = 0; c < u; c += 1)
                                                (l[4 * c] = t.round(1e3 * (y * e[c] + g * i[c] + v * n[c] + b * r[c])) / 1e3),
                                                    (l[4 * c + 1] = t.round(1e3 * (_ * e[c] + w * i[c] + S * n[c] + E * r[c])) / 1e3),
                                                    (l[4 * c + 2] = t.round(1e3 * (P * e[c] + x * i[c] + k * n[c] + A * r[c])) / 1e3),
                                                    (l[4 * c + 3] = t.round(1e3 * (T * e[c] + C * i[c] + I * n[c] + M * r[c])) / 1e3);
                                            return l;
                                        },
                                        getPointInSegment: function (e, r, i, n, s, a) {
                                            var l = o(s, a),
                                                h = 1 - l;
                                            return [
                                                t.round(1e3 * (h * h * h * e[0] + (l * h * h + h * l * h + h * h * l) * i[0] + (l * l * h + h * l * l + l * h * l) * n[0] + l * l * l * r[0])) / 1e3,
                                                t.round(1e3 * (h * h * h * e[1] + (l * h * h + h * l * h + h * h * l) * i[1] + (l * l * h + h * l * l + l * h * l) * n[1] + l * l * l * r[1])) / 1e3,
                                            ];
                                        },
                                        buildBezierData: a,
                                        pointOnLine2D: e,
                                        pointOnLine3D: function (r, i, n, s, a, o, l, h, c) {
                                            if (0 === n && 0 === o && 0 === c) return e(r, i, s, a, l, h);
                                            var p,
                                                d = t.sqrt(t.pow(s - r, 2) + t.pow(a - i, 2) + t.pow(o - n, 2)),
                                                u = t.sqrt(t.pow(l - r, 2) + t.pow(h - i, 2) + t.pow(c - n, 2)),
                                                f = t.sqrt(t.pow(l - s, 2) + t.pow(h - a, 2) + t.pow(c - o, 2));
                                            return (p = d > u ? (d > f ? d - u - f : f - u - d) : f > u ? f - u - d : u - d - f) > -1e-4 && p < 1e-4;
                                        },
                                    };
                                }
                                var bez = bezFunction(),
                                    PropertyFactory = (function () {
                                        var t = initialDefaultFrame,
                                            e = Math.abs;
                                        function r(t, e) {
                                            var r,
                                                n = this.offsetTime;
                                            "multidimensional" === this.propType && (r = createTypedArray("float32", this.pv.length));
                                            for (var s, a, o, l, h, c, p, d, u, f = e.lastIndex, m = f, y = this.keyframes.length - 1, g = !0; g; ) {
                                                if (((s = this.keyframes[m]), (a = this.keyframes[m + 1]), m === y - 1 && t >= a.t - n)) {
                                                    s.h && (s = a), (f = 0);
                                                    break;
                                                }
                                                if (a.t - n > t) {
                                                    f = m;
                                                    break;
                                                }
                                                m < y - 1 ? (m += 1) : ((f = 0), (g = !1));
                                            }
                                            o = this.keyframesMetadata[m] || {};
                                            var v,
                                                b = a.t - n,
                                                _ = s.t - n;
                                            if (s.to) {
                                                o.bezierData || (o.bezierData = bez.buildBezierData(s.s, a.s || s.e, s.to, s.ti));
                                                var w = o.bezierData;
                                                if (t >= b || t < _) {
                                                    var S = t >= b ? w.points.length - 1 : 0;
                                                    for (h = w.points[S].point.length, l = 0; l < h; l += 1) r[l] = w.points[S].point[l];
                                                } else {
                                                    o.__fnct ? (u = o.__fnct) : ((u = BezierFactory.getBezierEasing(s.o.x, s.o.y, s.i.x, s.i.y, s.n).get), (o.__fnct = u)), (c = u((t - _) / (b - _)));
                                                    var E,
                                                        P = w.segmentLength * c,
                                                        x = e.lastFrame < t && e._lastKeyframeIndex === m ? e._lastAddedLength : 0;
                                                    for (d = e.lastFrame < t && e._lastKeyframeIndex === m ? e._lastPoint : 0, g = !0, p = w.points.length; g; ) {
                                                        if (((x += w.points[d].partialLength), 0 === P || 0 === c || d === w.points.length - 1)) {
                                                            for (h = w.points[d].point.length, l = 0; l < h; l += 1) r[l] = w.points[d].point[l];
                                                            break;
                                                        }
                                                        if (P >= x && P < x + w.points[d + 1].partialLength) {
                                                            for (E = (P - x) / w.points[d + 1].partialLength, h = w.points[d].point.length, l = 0; l < h; l += 1)
                                                                r[l] = w.points[d].point[l] + (w.points[d + 1].point[l] - w.points[d].point[l]) * E;
                                                            break;
                                                        }
                                                        d < p - 1 ? (d += 1) : (g = !1);
                                                    }
                                                    (e._lastPoint = d), (e._lastAddedLength = x - w.points[d].partialLength), (e._lastKeyframeIndex = m);
                                                }
                                            } else {
                                                var k, A, T, C, I;
                                                if (((y = s.s.length), (v = a.s || s.e), this.sh && 1 !== s.h))
                                                    t >= b
                                                        ? ((r[0] = v[0]), (r[1] = v[1]), (r[2] = v[2]))
                                                        : t <= _
                                                        ? ((r[0] = s.s[0]), (r[1] = s.s[1]), (r[2] = s.s[2]))
                                                        : (function (t, e) {
                                                              var r = e[0],
                                                                  i = e[1],
                                                                  n = e[2],
                                                                  s = e[3],
                                                                  a = Math.atan2(2 * i * s - 2 * r * n, 1 - 2 * i * i - 2 * n * n),
                                                                  o = Math.asin(2 * r * i + 2 * n * s),
                                                                  l = Math.atan2(2 * r * s - 2 * i * n, 1 - 2 * r * r - 2 * n * n);
                                                              (t[0] = a / degToRads), (t[1] = o / degToRads), (t[2] = l / degToRads);
                                                          })(
                                                              r,
                                                              (function (t, e, r) {
                                                                  var i,
                                                                      n,
                                                                      s,
                                                                      a,
                                                                      o,
                                                                      l = [],
                                                                      h = t[0],
                                                                      c = t[1],
                                                                      p = t[2],
                                                                      d = t[3],
                                                                      u = e[0],
                                                                      f = e[1],
                                                                      m = e[2],
                                                                      y = e[3];
                                                                  return (
                                                                      (n = h * u + c * f + p * m + d * y) < 0 && ((n = -n), (u = -u), (f = -f), (m = -m), (y = -y)),
                                                                      1 - n > 1e-6 ? ((i = Math.acos(n)), (s = Math.sin(i)), (a = Math.sin((1 - r) * i) / s), (o = Math.sin(r * i) / s)) : ((a = 1 - r), (o = r)),
                                                                      (l[0] = a * h + o * u),
                                                                      (l[1] = a * c + o * f),
                                                                      (l[2] = a * p + o * m),
                                                                      (l[3] = a * d + o * y),
                                                                      l
                                                                  );
                                                              })(i(s.s), i(v), (t - _) / (b - _))
                                                          );
                                                else
                                                    for (m = 0; m < y; m += 1)
                                                        1 !== s.h &&
                                                            (t >= b
                                                                ? (c = 1)
                                                                : t < _
                                                                ? (c = 0)
                                                                : (s.o.x.constructor === Array
                                                                      ? (o.__fnct || (o.__fnct = []),
                                                                        o.__fnct[m]
                                                                            ? (u = o.__fnct[m])
                                                                            : ((k = void 0 === s.o.x[m] ? s.o.x[0] : s.o.x[m]),
                                                                              (A = void 0 === s.o.y[m] ? s.o.y[0] : s.o.y[m]),
                                                                              (T = void 0 === s.i.x[m] ? s.i.x[0] : s.i.x[m]),
                                                                              (C = void 0 === s.i.y[m] ? s.i.y[0] : s.i.y[m]),
                                                                              (u = BezierFactory.getBezierEasing(k, A, T, C).get),
                                                                              (o.__fnct[m] = u)))
                                                                      : o.__fnct
                                                                      ? (u = o.__fnct)
                                                                      : ((k = s.o.x), (A = s.o.y), (T = s.i.x), (C = s.i.y), (u = BezierFactory.getBezierEasing(k, A, T, C).get), (s.keyframeMetadata = u)),
                                                                  (c = u((t - _) / (b - _))))),
                                                            (v = a.s || s.e),
                                                            (I = 1 === s.h ? s.s[m] : s.s[m] + (v[m] - s.s[m]) * c),
                                                            "multidimensional" === this.propType ? (r[m] = I) : (r = I);
                                            }
                                            return (e.lastIndex = f), r;
                                        }
                                        function i(t) {
                                            var e = t[0] * degToRads,
                                                r = t[1] * degToRads,
                                                i = t[2] * degToRads,
                                                n = Math.cos(e / 2),
                                                s = Math.cos(r / 2),
                                                a = Math.cos(i / 2),
                                                o = Math.sin(e / 2),
                                                l = Math.sin(r / 2),
                                                h = Math.sin(i / 2);
                                            return [o * l * a + n * s * h, o * s * a + n * l * h, n * l * a - o * s * h, n * s * a - o * l * h];
                                        }
                                        function n() {
                                            var e = this.comp.renderedFrame - this.offsetTime,
                                                r = this.keyframes[0].t - this.offsetTime,
                                                i = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
                                            if (!(e === this._caching.lastFrame || (this._caching.lastFrame !== t && ((this._caching.lastFrame >= i && e >= i) || (this._caching.lastFrame < r && e < r))))) {
                                                this._caching.lastFrame >= e && ((this._caching._lastKeyframeIndex = -1), (this._caching.lastIndex = 0));
                                                var n = this.interpolateValue(e, this._caching);
                                                this.pv = n;
                                            }
                                            return (this._caching.lastFrame = e), this.pv;
                                        }
                                        function s(t) {
                                            var r;
                                            if ("unidimensional" === this.propType) (r = t * this.mult), e(this.v - r) > 1e-5 && ((this.v = r), (this._mdf = !0));
                                            else for (var i = 0, n = this.v.length; i < n; ) (r = t[i] * this.mult), e(this.v[i] - r) > 1e-5 && ((this.v[i] = r), (this._mdf = !0)), (i += 1);
                                        }
                                        function a() {
                                            if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length)
                                                if (this.lock) this.setVValue(this.pv);
                                                else {
                                                    var t;
                                                    (this.lock = !0), (this._mdf = this._isFirstFrame);
                                                    var e = this.effectsSequence.length,
                                                        r = this.kf ? this.pv : this.data.k;
                                                    for (t = 0; t < e; t += 1) r = this.effectsSequence[t](r);
                                                    this.setVValue(r), (this._isFirstFrame = !1), (this.lock = !1), (this.frameId = this.elem.globalData.frameId);
                                                }
                                        }
                                        function o(t) {
                                            this.effectsSequence.push(t), this.container.addDynamicProperty(this);
                                        }
                                        function l(t, e, r, i) {
                                            (this.propType = "unidimensional"),
                                                (this.mult = r || 1),
                                                (this.data = e),
                                                (this.v = r ? e.k * r : e.k),
                                                (this.pv = e.k),
                                                (this._mdf = !1),
                                                (this.elem = t),
                                                (this.container = i),
                                                (this.comp = t.comp),
                                                (this.k = !1),
                                                (this.kf = !1),
                                                (this.vel = 0),
                                                (this.effectsSequence = []),
                                                (this._isFirstFrame = !0),
                                                (this.getValue = a),
                                                (this.setVValue = s),
                                                (this.addEffect = o);
                                        }
                                        function h(t, e, r, i) {
                                            var n;
                                            (this.propType = "multidimensional"),
                                                (this.mult = r || 1),
                                                (this.data = e),
                                                (this._mdf = !1),
                                                (this.elem = t),
                                                (this.container = i),
                                                (this.comp = t.comp),
                                                (this.k = !1),
                                                (this.kf = !1),
                                                (this.frameId = -1);
                                            var l = e.k.length;
                                            for (this.v = createTypedArray("float32", l), this.pv = createTypedArray("float32", l), this.vel = createTypedArray("float32", l), n = 0; n < l; n += 1)
                                                (this.v[n] = e.k[n] * this.mult), (this.pv[n] = e.k[n]);
                                            (this._isFirstFrame = !0), (this.effectsSequence = []), (this.getValue = a), (this.setVValue = s), (this.addEffect = o);
                                        }
                                        function c(e, i, l, h) {
                                            (this.propType = "unidimensional"),
                                                (this.keyframes = i.k),
                                                (this.keyframesMetadata = []),
                                                (this.offsetTime = e.data.st),
                                                (this.frameId = -1),
                                                (this._caching = { lastFrame: t, lastIndex: 0, value: 0, _lastKeyframeIndex: -1 }),
                                                (this.k = !0),
                                                (this.kf = !0),
                                                (this.data = i),
                                                (this.mult = l || 1),
                                                (this.elem = e),
                                                (this.container = h),
                                                (this.comp = e.comp),
                                                (this.v = t),
                                                (this.pv = t),
                                                (this._isFirstFrame = !0),
                                                (this.getValue = a),
                                                (this.setVValue = s),
                                                (this.interpolateValue = r),
                                                (this.effectsSequence = [n.bind(this)]),
                                                (this.addEffect = o);
                                        }
                                        function p(e, i, l, h) {
                                            var c;
                                            this.propType = "multidimensional";
                                            var p,
                                                d,
                                                u,
                                                f,
                                                m = i.k.length;
                                            for (c = 0; c < m - 1; c += 1)
                                                i.k[c].to &&
                                                    i.k[c].s &&
                                                    i.k[c + 1] &&
                                                    i.k[c + 1].s &&
                                                    ((p = i.k[c].s),
                                                    (d = i.k[c + 1].s),
                                                    (u = i.k[c].to),
                                                    (f = i.k[c].ti),
                                                    ((2 === p.length &&
                                                        (p[0] !== d[0] || p[1] !== d[1]) &&
                                                        bez.pointOnLine2D(p[0], p[1], d[0], d[1], p[0] + u[0], p[1] + u[1]) &&
                                                        bez.pointOnLine2D(p[0], p[1], d[0], d[1], d[0] + f[0], d[1] + f[1])) ||
                                                        (3 === p.length &&
                                                            (p[0] !== d[0] || p[1] !== d[1] || p[2] !== d[2]) &&
                                                            bez.pointOnLine3D(p[0], p[1], p[2], d[0], d[1], d[2], p[0] + u[0], p[1] + u[1], p[2] + u[2]) &&
                                                            bez.pointOnLine3D(p[0], p[1], p[2], d[0], d[1], d[2], d[0] + f[0], d[1] + f[1], d[2] + f[2]))) &&
                                                        ((i.k[c].to = null), (i.k[c].ti = null)),
                                                    p[0] === d[0] &&
                                                        p[1] === d[1] &&
                                                        0 === u[0] &&
                                                        0 === u[1] &&
                                                        0 === f[0] &&
                                                        0 === f[1] &&
                                                        (2 === p.length || (p[2] === d[2] && 0 === u[2] && 0 === f[2])) &&
                                                        ((i.k[c].to = null), (i.k[c].ti = null)));
                                            (this.effectsSequence = [n.bind(this)]),
                                                (this.data = i),
                                                (this.keyframes = i.k),
                                                (this.keyframesMetadata = []),
                                                (this.offsetTime = e.data.st),
                                                (this.k = !0),
                                                (this.kf = !0),
                                                (this._isFirstFrame = !0),
                                                (this.mult = l || 1),
                                                (this.elem = e),
                                                (this.container = h),
                                                (this.comp = e.comp),
                                                (this.getValue = a),
                                                (this.setVValue = s),
                                                (this.interpolateValue = r),
                                                (this.frameId = -1);
                                            var y = i.k[0].s.length;
                                            for (this.v = createTypedArray("float32", y), this.pv = createTypedArray("float32", y), c = 0; c < y; c += 1) (this.v[c] = t), (this.pv[c] = t);
                                            (this._caching = { lastFrame: t, lastIndex: 0, value: createTypedArray("float32", y) }), (this.addEffect = o);
                                        }
                                        return {
                                            getProp: function (t, e, r, i, n) {
                                                var s;
                                                if (e.k.length)
                                                    if ("number" == typeof e.k[0]) s = new h(t, e, i, n);
                                                    else
                                                        switch (r) {
                                                            case 0:
                                                                s = new c(t, e, i, n);
                                                                break;
                                                            case 1:
                                                                s = new p(t, e, i, n);
                                                        }
                                                else s = new l(t, e, i, n);
                                                return s.effectsSequence.length && n.addDynamicProperty(s), s;
                                            },
                                        };
                                    })();
                                function DynamicPropertyContainer() {}
                                DynamicPropertyContainer.prototype = {
                                    addDynamicProperty: function (t) {
                                        -1 === this.dynamicProperties.indexOf(t) && (this.dynamicProperties.push(t), this.container.addDynamicProperty(this), (this._isAnimated = !0));
                                    },
                                    iterateDynamicProperties: function () {
                                        var t;
                                        this._mdf = !1;
                                        var e = this.dynamicProperties.length;
                                        for (t = 0; t < e; t += 1) this.dynamicProperties[t].getValue(), this.dynamicProperties[t]._mdf && (this._mdf = !0);
                                    },
                                    initDynamicPropertyContainer: function (t) {
                                        (this.container = t), (this.dynamicProperties = []), (this._mdf = !1), (this._isAnimated = !1);
                                    },
                                };
                                var pointPool = poolFactory(8, function () {
                                    return createTypedArray("float32", 2);
                                });
                                function ShapePath() {
                                    (this.c = !1), (this._length = 0), (this._maxLength = 8), (this.v = createSizedArray(this._maxLength)), (this.o = createSizedArray(this._maxLength)), (this.i = createSizedArray(this._maxLength));
                                }
                                (ShapePath.prototype.setPathData = function (t, e) {
                                    (this.c = t), this.setLength(e);
                                    for (var r = 0; r < e; ) (this.v[r] = pointPool.newElement()), (this.o[r] = pointPool.newElement()), (this.i[r] = pointPool.newElement()), (r += 1);
                                }),
                                    (ShapePath.prototype.setLength = function (t) {
                                        for (; this._maxLength < t; ) this.doubleArrayLength();
                                        this._length = t;
                                    }),
                                    (ShapePath.prototype.doubleArrayLength = function () {
                                        (this.v = this.v.concat(createSizedArray(this._maxLength))),
                                            (this.i = this.i.concat(createSizedArray(this._maxLength))),
                                            (this.o = this.o.concat(createSizedArray(this._maxLength))),
                                            (this._maxLength *= 2);
                                    }),
                                    (ShapePath.prototype.setXYAt = function (t, e, r, i, n) {
                                        var s;
                                        switch (((this._length = Math.max(this._length, i + 1)), this._length >= this._maxLength && this.doubleArrayLength(), r)) {
                                            case "v":
                                                s = this.v;
                                                break;
                                            case "i":
                                                s = this.i;
                                                break;
                                            case "o":
                                                s = this.o;
                                                break;
                                            default:
                                                s = [];
                                        }
                                        (!s[i] || (s[i] && !n)) && (s[i] = pointPool.newElement()), (s[i][0] = t), (s[i][1] = e);
                                    }),
                                    (ShapePath.prototype.setTripleAt = function (t, e, r, i, n, s, a, o) {
                                        this.setXYAt(t, e, "v", a, o), this.setXYAt(r, i, "o", a, o), this.setXYAt(n, s, "i", a, o);
                                    }),
                                    (ShapePath.prototype.reverse = function () {
                                        var t = new ShapePath();
                                        t.setPathData(this.c, this._length);
                                        var e = this.v,
                                            r = this.o,
                                            i = this.i,
                                            n = 0;
                                        this.c && (t.setTripleAt(e[0][0], e[0][1], i[0][0], i[0][1], r[0][0], r[0][1], 0, !1), (n = 1));
                                        var s,
                                            a = this._length - 1,
                                            o = this._length;
                                        for (s = n; s < o; s += 1) t.setTripleAt(e[a][0], e[a][1], i[a][0], i[a][1], r[a][0], r[a][1], s, !1), (a -= 1);
                                        return t;
                                    }),
                                    (ShapePath.prototype.length = function () {
                                        return this._length;
                                    });
                                var shapePool =
                                        ((factory = poolFactory(
                                            4,
                                            function () {
                                                return new ShapePath();
                                            },
                                            function (t) {
                                                var e,
                                                    r = t._length;
                                                for (e = 0; e < r; e += 1) pointPool.release(t.v[e]), pointPool.release(t.i[e]), pointPool.release(t.o[e]), (t.v[e] = null), (t.i[e] = null), (t.o[e] = null);
                                                (t._length = 0), (t.c = !1);
                                            }
                                        )),
                                        (factory.clone = function (t) {
                                            var e,
                                                r = factory.newElement(),
                                                i = void 0 === t._length ? t.v.length : t._length;
                                            for (r.setLength(i), r.c = t.c, e = 0; e < i; e += 1) r.setTripleAt(t.v[e][0], t.v[e][1], t.o[e][0], t.o[e][1], t.i[e][0], t.i[e][1], e);
                                            return r;
                                        }),
                                        factory),
                                    factory;
                                function ShapeCollection() {
                                    (this._length = 0), (this._maxLength = 4), (this.shapes = createSizedArray(this._maxLength));
                                }
                                (ShapeCollection.prototype.addShape = function (t) {
                                    this._length === this._maxLength && ((this.shapes = this.shapes.concat(createSizedArray(this._maxLength))), (this._maxLength *= 2)), (this.shapes[this._length] = t), (this._length += 1);
                                }),
                                    (ShapeCollection.prototype.releaseShapes = function () {
                                        var t;
                                        for (t = 0; t < this._length; t += 1) shapePool.release(this.shapes[t]);
                                        this._length = 0;
                                    });
                                var shapeCollectionPool =
                                        ((ob = {
                                            newShapeCollection: function () {
                                                return _length ? pool[(_length -= 1)] : new ShapeCollection();
                                            },
                                            release: function (t) {
                                                var e,
                                                    r = t._length;
                                                for (e = 0; e < r; e += 1) shapePool.release(t.shapes[e]);
                                                (t._length = 0), _length === _maxLength && ((pool = pooling.double(pool)), (_maxLength *= 2)), (pool[_length] = t), (_length += 1);
                                            },
                                        }),
                                        (_length = 0),
                                        (_maxLength = 4),
                                        (pool = createSizedArray(_maxLength)),
                                        ob),
                                    ob,
                                    _length,
                                    _maxLength,
                                    pool,
                                    ShapePropertyFactory = (function () {
                                        function t(t, e, r) {
                                            var i,
                                                n,
                                                s,
                                                a,
                                                o,
                                                l,
                                                h,
                                                c,
                                                p,
                                                d = r.lastIndex,
                                                u = this.keyframes;
                                            if (t < u[0].t - this.offsetTime) (i = u[0].s[0]), (s = !0), (d = 0);
                                            else if (t >= u[u.length - 1].t - this.offsetTime) (i = u[u.length - 1].s ? u[u.length - 1].s[0] : u[u.length - 2].e[0]), (s = !0);
                                            else {
                                                for (var f, m, y, g = d, v = u.length - 1, b = !0; b && ((f = u[g]), !((m = u[g + 1]).t - this.offsetTime > t)); ) g < v - 1 ? (g += 1) : (b = !1);
                                                if (((y = this.keyframesMetadata[g] || {}), (d = g), !(s = 1 === f.h))) {
                                                    if (t >= m.t - this.offsetTime) c = 1;
                                                    else if (t < f.t - this.offsetTime) c = 0;
                                                    else {
                                                        var _;
                                                        y.__fnct ? (_ = y.__fnct) : ((_ = BezierFactory.getBezierEasing(f.o.x, f.o.y, f.i.x, f.i.y).get), (y.__fnct = _)),
                                                            (c = _((t - (f.t - this.offsetTime)) / (m.t - this.offsetTime - (f.t - this.offsetTime))));
                                                    }
                                                    n = m.s ? m.s[0] : f.e[0];
                                                }
                                                i = f.s[0];
                                            }
                                            for (l = e._length, h = i.i[0].length, r.lastIndex = d, a = 0; a < l; a += 1)
                                                for (o = 0; o < h; o += 1)
                                                    (p = s ? i.i[a][o] : i.i[a][o] + (n.i[a][o] - i.i[a][o]) * c),
                                                        (e.i[a][o] = p),
                                                        (p = s ? i.o[a][o] : i.o[a][o] + (n.o[a][o] - i.o[a][o]) * c),
                                                        (e.o[a][o] = p),
                                                        (p = s ? i.v[a][o] : i.v[a][o] + (n.v[a][o] - i.v[a][o]) * c),
                                                        (e.v[a][o] = p);
                                        }
                                        function e() {
                                            var t = this.comp.renderedFrame - this.offsetTime,
                                                e = this.keyframes[0].t - this.offsetTime,
                                                r = this.keyframes[this.keyframes.length - 1].t - this.offsetTime,
                                                i = this._caching.lastFrame;
                                            return (
                                                (-999999 !== i && ((i < e && t < e) || (i > r && t > r))) || ((this._caching.lastIndex = i < t ? this._caching.lastIndex : 0), this.interpolateShape(t, this.pv, this._caching)),
                                                (this._caching.lastFrame = t),
                                                this.pv
                                            );
                                        }
                                        function r() {
                                            this.paths = this.localShapeCollection;
                                        }
                                        function i(t) {
                                            (function (t, e) {
                                                if (t._length !== e._length || t.c !== e.c) return !1;
                                                var r,
                                                    i = t._length;
                                                for (r = 0; r < i; r += 1)
                                                    if (t.v[r][0] !== e.v[r][0] || t.v[r][1] !== e.v[r][1] || t.o[r][0] !== e.o[r][0] || t.o[r][1] !== e.o[r][1] || t.i[r][0] !== e.i[r][0] || t.i[r][1] !== e.i[r][1]) return !1;
                                                return !0;
                                            })(this.v, t) || ((this.v = shapePool.clone(t)), this.localShapeCollection.releaseShapes(), this.localShapeCollection.addShape(this.v), (this._mdf = !0), (this.paths = this.localShapeCollection));
                                        }
                                        function n() {
                                            if (this.elem.globalData.frameId !== this.frameId)
                                                if (this.effectsSequence.length)
                                                    if (this.lock) this.setVValue(this.pv);
                                                    else {
                                                        var t, e;
                                                        (this.lock = !0), (this._mdf = !1), (t = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k);
                                                        var r = this.effectsSequence.length;
                                                        for (e = 0; e < r; e += 1) t = this.effectsSequence[e](t);
                                                        this.setVValue(t), (this.lock = !1), (this.frameId = this.elem.globalData.frameId);
                                                    }
                                                else this._mdf = !1;
                                        }
                                        function s(t, e, i) {
                                            (this.propType = "shape"), (this.comp = t.comp), (this.container = t), (this.elem = t), (this.data = e), (this.k = !1), (this.kf = !1), (this._mdf = !1);
                                            var n = 3 === i ? e.pt.k : e.ks.k;
                                            (this.v = shapePool.clone(n)),
                                                (this.pv = shapePool.clone(this.v)),
                                                (this.localShapeCollection = shapeCollectionPool.newShapeCollection()),
                                                (this.paths = this.localShapeCollection),
                                                this.paths.addShape(this.v),
                                                (this.reset = r),
                                                (this.effectsSequence = []);
                                        }
                                        function a(t) {
                                            this.effectsSequence.push(t), this.container.addDynamicProperty(this);
                                        }
                                        function o(t, i, n) {
                                            (this.propType = "shape"),
                                                (this.comp = t.comp),
                                                (this.elem = t),
                                                (this.container = t),
                                                (this.offsetTime = t.data.st),
                                                (this.keyframes = 3 === n ? i.pt.k : i.ks.k),
                                                (this.keyframesMetadata = []),
                                                (this.k = !0),
                                                (this.kf = !0);
                                            var s = this.keyframes[0].s[0].i.length;
                                            (this.v = shapePool.newElement()),
                                                this.v.setPathData(this.keyframes[0].s[0].c, s),
                                                (this.pv = shapePool.clone(this.v)),
                                                (this.localShapeCollection = shapeCollectionPool.newShapeCollection()),
                                                (this.paths = this.localShapeCollection),
                                                this.paths.addShape(this.v),
                                                (this.lastFrame = -999999),
                                                (this.reset = r),
                                                (this._caching = { lastFrame: -999999, lastIndex: 0 }),
                                                (this.effectsSequence = [e.bind(this)]);
                                        }
                                        (s.prototype.interpolateShape = t),
                                            (s.prototype.getValue = n),
                                            (s.prototype.setVValue = i),
                                            (s.prototype.addEffect = a),
                                            (o.prototype.getValue = n),
                                            (o.prototype.interpolateShape = t),
                                            (o.prototype.setVValue = i),
                                            (o.prototype.addEffect = a);
                                        var l = (function () {
                                                var t = roundCorner;
                                                function e(t, e) {
                                                    (this.v = shapePool.newElement()),
                                                        this.v.setPathData(!0, 4),
                                                        (this.localShapeCollection = shapeCollectionPool.newShapeCollection()),
                                                        (this.paths = this.localShapeCollection),
                                                        this.localShapeCollection.addShape(this.v),
                                                        (this.d = e.d),
                                                        (this.elem = t),
                                                        (this.comp = t.comp),
                                                        (this.frameId = -1),
                                                        this.initDynamicPropertyContainer(t),
                                                        (this.p = PropertyFactory.getProp(t, e.p, 1, 0, this)),
                                                        (this.s = PropertyFactory.getProp(t, e.s, 1, 0, this)),
                                                        this.dynamicProperties.length ? (this.k = !0) : ((this.k = !1), this.convertEllToPath());
                                                }
                                                return (
                                                    (e.prototype = {
                                                        reset: r,
                                                        getValue: function () {
                                                            this.elem.globalData.frameId !== this.frameId && ((this.frameId = this.elem.globalData.frameId), this.iterateDynamicProperties(), this._mdf && this.convertEllToPath());
                                                        },
                                                        convertEllToPath: function () {
                                                            var e = this.p.v[0],
                                                                r = this.p.v[1],
                                                                i = this.s.v[0] / 2,
                                                                n = this.s.v[1] / 2,
                                                                s = 3 !== this.d,
                                                                a = this.v;
                                                            (a.v[0][0] = e),
                                                                (a.v[0][1] = r - n),
                                                                (a.v[1][0] = s ? e + i : e - i),
                                                                (a.v[1][1] = r),
                                                                (a.v[2][0] = e),
                                                                (a.v[2][1] = r + n),
                                                                (a.v[3][0] = s ? e - i : e + i),
                                                                (a.v[3][1] = r),
                                                                (a.i[0][0] = s ? e - i * t : e + i * t),
                                                                (a.i[0][1] = r - n),
                                                                (a.i[1][0] = s ? e + i : e - i),
                                                                (a.i[1][1] = r - n * t),
                                                                (a.i[2][0] = s ? e + i * t : e - i * t),
                                                                (a.i[2][1] = r + n),
                                                                (a.i[3][0] = s ? e - i : e + i),
                                                                (a.i[3][1] = r + n * t),
                                                                (a.o[0][0] = s ? e + i * t : e - i * t),
                                                                (a.o[0][1] = r - n),
                                                                (a.o[1][0] = s ? e + i : e - i),
                                                                (a.o[1][1] = r + n * t),
                                                                (a.o[2][0] = s ? e - i * t : e + i * t),
                                                                (a.o[2][1] = r + n),
                                                                (a.o[3][0] = s ? e - i : e + i),
                                                                (a.o[3][1] = r - n * t);
                                                        },
                                                    }),
                                                    extendPrototype([DynamicPropertyContainer], e),
                                                    e
                                                );
                                            })(),
                                            h = (function () {
                                                function t(t, e) {
                                                    (this.v = shapePool.newElement()),
                                                        this.v.setPathData(!0, 0),
                                                        (this.elem = t),
                                                        (this.comp = t.comp),
                                                        (this.data = e),
                                                        (this.frameId = -1),
                                                        (this.d = e.d),
                                                        this.initDynamicPropertyContainer(t),
                                                        1 === e.sy
                                                            ? ((this.ir = PropertyFactory.getProp(t, e.ir, 0, 0, this)), (this.is = PropertyFactory.getProp(t, e.is, 0, 0.01, this)), (this.convertToPath = this.convertStarToPath))
                                                            : (this.convertToPath = this.convertPolygonToPath),
                                                        (this.pt = PropertyFactory.getProp(t, e.pt, 0, 0, this)),
                                                        (this.p = PropertyFactory.getProp(t, e.p, 1, 0, this)),
                                                        (this.r = PropertyFactory.getProp(t, e.r, 0, degToRads, this)),
                                                        (this.or = PropertyFactory.getProp(t, e.or, 0, 0, this)),
                                                        (this.os = PropertyFactory.getProp(t, e.os, 0, 0.01, this)),
                                                        (this.localShapeCollection = shapeCollectionPool.newShapeCollection()),
                                                        this.localShapeCollection.addShape(this.v),
                                                        (this.paths = this.localShapeCollection),
                                                        this.dynamicProperties.length ? (this.k = !0) : ((this.k = !1), this.convertToPath());
                                                }
                                                return (
                                                    (t.prototype = {
                                                        reset: r,
                                                        getValue: function () {
                                                            this.elem.globalData.frameId !== this.frameId && ((this.frameId = this.elem.globalData.frameId), this.iterateDynamicProperties(), this._mdf && this.convertToPath());
                                                        },
                                                        convertStarToPath: function () {
                                                            var t,
                                                                e,
                                                                r,
                                                                i,
                                                                n = 2 * Math.floor(this.pt.v),
                                                                s = (2 * Math.PI) / n,
                                                                a = !0,
                                                                o = this.or.v,
                                                                l = this.ir.v,
                                                                h = this.os.v,
                                                                c = this.is.v,
                                                                p = (2 * Math.PI * o) / (2 * n),
                                                                d = (2 * Math.PI * l) / (2 * n),
                                                                u = -Math.PI / 2;
                                                            u += this.r.v;
                                                            var f = 3 === this.data.d ? -1 : 1;
                                                            for (this.v._length = 0, t = 0; t < n; t += 1) {
                                                                (r = a ? h : c), (i = a ? p : d);
                                                                var m = (e = a ? o : l) * Math.cos(u),
                                                                    y = e * Math.sin(u),
                                                                    g = 0 === m && 0 === y ? 0 : y / Math.sqrt(m * m + y * y),
                                                                    v = 0 === m && 0 === y ? 0 : -m / Math.sqrt(m * m + y * y);
                                                                (m += +this.p.v[0]), (y += +this.p.v[1]), this.v.setTripleAt(m, y, m - g * i * r * f, y - v * i * r * f, m + g * i * r * f, y + v * i * r * f, t, !0), (a = !a), (u += s * f);
                                                            }
                                                        },
                                                        convertPolygonToPath: function () {
                                                            var t,
                                                                e = Math.floor(this.pt.v),
                                                                r = (2 * Math.PI) / e,
                                                                i = this.or.v,
                                                                n = this.os.v,
                                                                s = (2 * Math.PI * i) / (4 * e),
                                                                a = 0.5 * -Math.PI,
                                                                o = 3 === this.data.d ? -1 : 1;
                                                            for (a += this.r.v, this.v._length = 0, t = 0; t < e; t += 1) {
                                                                var l = i * Math.cos(a),
                                                                    h = i * Math.sin(a),
                                                                    c = 0 === l && 0 === h ? 0 : h / Math.sqrt(l * l + h * h),
                                                                    p = 0 === l && 0 === h ? 0 : -l / Math.sqrt(l * l + h * h);
                                                                (l += +this.p.v[0]), (h += +this.p.v[1]), this.v.setTripleAt(l, h, l - c * s * n * o, h - p * s * n * o, l + c * s * n * o, h + p * s * n * o, t, !0), (a += r * o);
                                                            }
                                                            (this.paths.length = 0), (this.paths[0] = this.v);
                                                        },
                                                    }),
                                                    extendPrototype([DynamicPropertyContainer], t),
                                                    t
                                                );
                                            })(),
                                            c = (function () {
                                                function t(t, e) {
                                                    (this.v = shapePool.newElement()),
                                                        (this.v.c = !0),
                                                        (this.localShapeCollection = shapeCollectionPool.newShapeCollection()),
                                                        this.localShapeCollection.addShape(this.v),
                                                        (this.paths = this.localShapeCollection),
                                                        (this.elem = t),
                                                        (this.comp = t.comp),
                                                        (this.frameId = -1),
                                                        (this.d = e.d),
                                                        this.initDynamicPropertyContainer(t),
                                                        (this.p = PropertyFactory.getProp(t, e.p, 1, 0, this)),
                                                        (this.s = PropertyFactory.getProp(t, e.s, 1, 0, this)),
                                                        (this.r = PropertyFactory.getProp(t, e.r, 0, 0, this)),
                                                        this.dynamicProperties.length ? (this.k = !0) : ((this.k = !1), this.convertRectToPath());
                                                }
                                                return (
                                                    (t.prototype = {
                                                        convertRectToPath: function () {
                                                            var t = this.p.v[0],
                                                                e = this.p.v[1],
                                                                r = this.s.v[0] / 2,
                                                                i = this.s.v[1] / 2,
                                                                n = bmMin(r, i, this.r.v),
                                                                s = n * (1 - roundCorner);
                                                            (this.v._length = 0),
                                                                2 === this.d || 1 === this.d
                                                                    ? (this.v.setTripleAt(t + r, e - i + n, t + r, e - i + n, t + r, e - i + s, 0, !0),
                                                                      this.v.setTripleAt(t + r, e + i - n, t + r, e + i - s, t + r, e + i - n, 1, !0),
                                                                      0 !== n
                                                                          ? (this.v.setTripleAt(t + r - n, e + i, t + r - n, e + i, t + r - s, e + i, 2, !0),
                                                                            this.v.setTripleAt(t - r + n, e + i, t - r + s, e + i, t - r + n, e + i, 3, !0),
                                                                            this.v.setTripleAt(t - r, e + i - n, t - r, e + i - n, t - r, e + i - s, 4, !0),
                                                                            this.v.setTripleAt(t - r, e - i + n, t - r, e - i + s, t - r, e - i + n, 5, !0),
                                                                            this.v.setTripleAt(t - r + n, e - i, t - r + n, e - i, t - r + s, e - i, 6, !0),
                                                                            this.v.setTripleAt(t + r - n, e - i, t + r - s, e - i, t + r - n, e - i, 7, !0))
                                                                          : (this.v.setTripleAt(t - r, e + i, t - r + s, e + i, t - r, e + i, 2), this.v.setTripleAt(t - r, e - i, t - r, e - i + s, t - r, e - i, 3)))
                                                                    : (this.v.setTripleAt(t + r, e - i + n, t + r, e - i + s, t + r, e - i + n, 0, !0),
                                                                      0 !== n
                                                                          ? (this.v.setTripleAt(t + r - n, e - i, t + r - n, e - i, t + r - s, e - i, 1, !0),
                                                                            this.v.setTripleAt(t - r + n, e - i, t - r + s, e - i, t - r + n, e - i, 2, !0),
                                                                            this.v.setTripleAt(t - r, e - i + n, t - r, e - i + n, t - r, e - i + s, 3, !0),
                                                                            this.v.setTripleAt(t - r, e + i - n, t - r, e + i - s, t - r, e + i - n, 4, !0),
                                                                            this.v.setTripleAt(t - r + n, e + i, t - r + n, e + i, t - r + s, e + i, 5, !0),
                                                                            this.v.setTripleAt(t + r - n, e + i, t + r - s, e + i, t + r - n, e + i, 6, !0),
                                                                            this.v.setTripleAt(t + r, e + i - n, t + r, e + i - n, t + r, e + i - s, 7, !0))
                                                                          : (this.v.setTripleAt(t - r, e - i, t - r + s, e - i, t - r, e - i, 1, !0),
                                                                            this.v.setTripleAt(t - r, e + i, t - r, e + i - s, t - r, e + i, 2, !0),
                                                                            this.v.setTripleAt(t + r, e + i, t + r - s, e + i, t + r, e + i, 3, !0)));
                                                        },
                                                        getValue: function () {
                                                            this.elem.globalData.frameId !== this.frameId && ((this.frameId = this.elem.globalData.frameId), this.iterateDynamicProperties(), this._mdf && this.convertRectToPath());
                                                        },
                                                        reset: r,
                                                    }),
                                                    extendPrototype([DynamicPropertyContainer], t),
                                                    t
                                                );
                                            })(),
                                            p = {
                                                getShapeProp: function (t, e, r) {
                                                    var i;
                                                    return (
                                                        3 === r || 4 === r
                                                            ? (i = (3 === r ? e.pt : e.ks).k.length ? new o(t, e, r) : new s(t, e, r))
                                                            : 5 === r
                                                            ? (i = new c(t, e))
                                                            : 6 === r
                                                            ? (i = new l(t, e))
                                                            : 7 === r && (i = new h(t, e)),
                                                        i.k && t.addDynamicProperty(i),
                                                        i
                                                    );
                                                },
                                                getConstructorFunction: function () {
                                                    return s;
                                                },
                                                getKeyframedConstructorFunction: function () {
                                                    return o;
                                                },
                                            };
                                        return p;
                                    })(),
                                    Matrix = (function () {
                                        var t = Math.cos,
                                            e = Math.sin,
                                            r = Math.tan,
                                            i = Math.round;
                                        function n() {
                                            return (
                                                (this.props[0] = 1),
                                                (this.props[1] = 0),
                                                (this.props[2] = 0),
                                                (this.props[3] = 0),
                                                (this.props[4] = 0),
                                                (this.props[5] = 1),
                                                (this.props[6] = 0),
                                                (this.props[7] = 0),
                                                (this.props[8] = 0),
                                                (this.props[9] = 0),
                                                (this.props[10] = 1),
                                                (this.props[11] = 0),
                                                (this.props[12] = 0),
                                                (this.props[13] = 0),
                                                (this.props[14] = 0),
                                                (this.props[15] = 1),
                                                this
                                            );
                                        }
                                        function s(r) {
                                            if (0 === r) return this;
                                            var i = t(r),
                                                n = e(r);
                                            return this._t(i, -n, 0, 0, n, i, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
                                        }
                                        function a(r) {
                                            if (0 === r) return this;
                                            var i = t(r),
                                                n = e(r);
                                            return this._t(1, 0, 0, 0, 0, i, -n, 0, 0, n, i, 0, 0, 0, 0, 1);
                                        }
                                        function o(r) {
                                            if (0 === r) return this;
                                            var i = t(r),
                                                n = e(r);
                                            return this._t(i, 0, n, 0, 0, 1, 0, 0, -n, 0, i, 0, 0, 0, 0, 1);
                                        }
                                        function l(r) {
                                            if (0 === r) return this;
                                            var i = t(r),
                                                n = e(r);
                                            return this._t(i, -n, 0, 0, n, i, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
                                        }
                                        function h(t, e) {
                                            return this._t(1, e, t, 1, 0, 0);
                                        }
                                        function c(t, e) {
                                            return this.shear(r(t), r(e));
                                        }
                                        function p(i, n) {
                                            var s = t(n),
                                                a = e(n);
                                            return this._t(s, a, 0, 0, -a, s, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, r(i), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(s, -a, 0, 0, a, s, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
                                        }
                                        function d(t, e, r) {
                                            return r || 0 === r || (r = 1), 1 === t && 1 === e && 1 === r ? this : this._t(t, 0, 0, 0, 0, e, 0, 0, 0, 0, r, 0, 0, 0, 0, 1);
                                        }
                                        function u(t, e, r, i, n, s, a, o, l, h, c, p, d, u, f, m) {
                                            return (
                                                (this.props[0] = t),
                                                (this.props[1] = e),
                                                (this.props[2] = r),
                                                (this.props[3] = i),
                                                (this.props[4] = n),
                                                (this.props[5] = s),
                                                (this.props[6] = a),
                                                (this.props[7] = o),
                                                (this.props[8] = l),
                                                (this.props[9] = h),
                                                (this.props[10] = c),
                                                (this.props[11] = p),
                                                (this.props[12] = d),
                                                (this.props[13] = u),
                                                (this.props[14] = f),
                                                (this.props[15] = m),
                                                this
                                            );
                                        }
                                        function f(t, e, r) {
                                            return (r = r || 0), 0 !== t || 0 !== e || 0 !== r ? this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, t, e, r, 1) : this;
                                        }
                                        function m(t, e, r, i, n, s, a, o, l, h, c, p, d, u, f, m) {
                                            var y = this.props;
                                            if (1 === t && 0 === e && 0 === r && 0 === i && 0 === n && 1 === s && 0 === a && 0 === o && 0 === l && 0 === h && 1 === c && 0 === p)
                                                return (y[12] = y[12] * t + y[15] * d), (y[13] = y[13] * s + y[15] * u), (y[14] = y[14] * c + y[15] * f), (y[15] *= m), (this._identityCalculated = !1), this;
                                            var g = y[0],
                                                v = y[1],
                                                b = y[2],
                                                _ = y[3],
                                                w = y[4],
                                                S = y[5],
                                                E = y[6],
                                                P = y[7],
                                                x = y[8],
                                                k = y[9],
                                                A = y[10],
                                                T = y[11],
                                                C = y[12],
                                                I = y[13],
                                                M = y[14],
                                                D = y[15];
                                            return (
                                                (y[0] = g * t + v * n + b * l + _ * d),
                                                (y[1] = g * e + v * s + b * h + _ * u),
                                                (y[2] = g * r + v * a + b * c + _ * f),
                                                (y[3] = g * i + v * o + b * p + _ * m),
                                                (y[4] = w * t + S * n + E * l + P * d),
                                                (y[5] = w * e + S * s + E * h + P * u),
                                                (y[6] = w * r + S * a + E * c + P * f),
                                                (y[7] = w * i + S * o + E * p + P * m),
                                                (y[8] = x * t + k * n + A * l + T * d),
                                                (y[9] = x * e + k * s + A * h + T * u),
                                                (y[10] = x * r + k * a + A * c + T * f),
                                                (y[11] = x * i + k * o + A * p + T * m),
                                                (y[12] = C * t + I * n + M * l + D * d),
                                                (y[13] = C * e + I * s + M * h + D * u),
                                                (y[14] = C * r + I * a + M * c + D * f),
                                                (y[15] = C * i + I * o + M * p + D * m),
                                                (this._identityCalculated = !1),
                                                this
                                            );
                                        }
                                        function y() {
                                            return (
                                                this._identityCalculated ||
                                                    ((this._identity = !(
                                                        1 !== this.props[0] ||
                                                        0 !== this.props[1] ||
                                                        0 !== this.props[2] ||
                                                        0 !== this.props[3] ||
                                                        0 !== this.props[4] ||
                                                        1 !== this.props[5] ||
                                                        0 !== this.props[6] ||
                                                        0 !== this.props[7] ||
                                                        0 !== this.props[8] ||
                                                        0 !== this.props[9] ||
                                                        1 !== this.props[10] ||
                                                        0 !== this.props[11] ||
                                                        0 !== this.props[12] ||
                                                        0 !== this.props[13] ||
                                                        0 !== this.props[14] ||
                                                        1 !== this.props[15]
                                                    )),
                                                    (this._identityCalculated = !0)),
                                                this._identity
                                            );
                                        }
                                        function g(t) {
                                            for (var e = 0; e < 16; ) {
                                                if (t.props[e] !== this.props[e]) return !1;
                                                e += 1;
                                            }
                                            return !0;
                                        }
                                        function v(t) {
                                            var e;
                                            for (e = 0; e < 16; e += 1) t.props[e] = this.props[e];
                                            return t;
                                        }
                                        function b(t) {
                                            var e;
                                            for (e = 0; e < 16; e += 1) this.props[e] = t[e];
                                        }
                                        function _(t, e, r) {
                                            return {
                                                x: t * this.props[0] + e * this.props[4] + r * this.props[8] + this.props[12],
                                                y: t * this.props[1] + e * this.props[5] + r * this.props[9] + this.props[13],
                                                z: t * this.props[2] + e * this.props[6] + r * this.props[10] + this.props[14],
                                            };
                                        }
                                        function w(t, e, r) {
                                            return t * this.props[0] + e * this.props[4] + r * this.props[8] + this.props[12];
                                        }
                                        function S(t, e, r) {
                                            return t * this.props[1] + e * this.props[5] + r * this.props[9] + this.props[13];
                                        }
                                        function E(t, e, r) {
                                            return t * this.props[2] + e * this.props[6] + r * this.props[10] + this.props[14];
                                        }
                                        function P() {
                                            var t = this.props[0] * this.props[5] - this.props[1] * this.props[4],
                                                e = this.props[5] / t,
                                                r = -this.props[1] / t,
                                                i = -this.props[4] / t,
                                                n = this.props[0] / t,
                                                s = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / t,
                                                a = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / t,
                                                o = new Matrix();
                                            return (o.props[0] = e), (o.props[1] = r), (o.props[4] = i), (o.props[5] = n), (o.props[12] = s), (o.props[13] = a), o;
                                        }
                                        function x(t) {
                                            return this.getInverseMatrix().applyToPointArray(t[0], t[1], t[2] || 0);
                                        }
                                        function k(t) {
                                            var e,
                                                r = t.length,
                                                i = [];
                                            for (e = 0; e < r; e += 1) i[e] = x(t[e]);
                                            return i;
                                        }
                                        function A(t, e, r) {
                                            var i = createTypedArray("float32", 6);
                                            if (this.isIdentity()) (i[0] = t[0]), (i[1] = t[1]), (i[2] = e[0]), (i[3] = e[1]), (i[4] = r[0]), (i[5] = r[1]);
                                            else {
                                                var n = this.props[0],
                                                    s = this.props[1],
                                                    a = this.props[4],
                                                    o = this.props[5],
                                                    l = this.props[12],
                                                    h = this.props[13];
                                                (i[0] = t[0] * n + t[1] * a + l),
                                                    (i[1] = t[0] * s + t[1] * o + h),
                                                    (i[2] = e[0] * n + e[1] * a + l),
                                                    (i[3] = e[0] * s + e[1] * o + h),
                                                    (i[4] = r[0] * n + r[1] * a + l),
                                                    (i[5] = r[0] * s + r[1] * o + h);
                                            }
                                            return i;
                                        }
                                        function T(t, e, r) {
                                            return this.isIdentity()
                                                ? [t, e, r]
                                                : [
                                                      t * this.props[0] + e * this.props[4] + r * this.props[8] + this.props[12],
                                                      t * this.props[1] + e * this.props[5] + r * this.props[9] + this.props[13],
                                                      t * this.props[2] + e * this.props[6] + r * this.props[10] + this.props[14],
                                                  ];
                                        }
                                        function C(t, e) {
                                            if (this.isIdentity()) return t + "," + e;
                                            var r = this.props;
                                            return Math.round(100 * (t * r[0] + e * r[4] + r[12])) / 100 + "," + Math.round(100 * (t * r[1] + e * r[5] + r[13])) / 100;
                                        }
                                        function I() {
                                            for (var t = 0, e = this.props, r = "matrix3d("; t < 16; ) (r += i(1e4 * e[t]) / 1e4), (r += 15 === t ? ")" : ","), (t += 1);
                                            return r;
                                        }
                                        function M(t) {
                                            return (t < 1e-6 && t > 0) || (t > -1e-6 && t < 0) ? i(1e4 * t) / 1e4 : t;
                                        }
                                        function D() {
                                            var t = this.props;
                                            return "matrix(" + M(t[0]) + "," + M(t[1]) + "," + M(t[4]) + "," + M(t[5]) + "," + M(t[12]) + "," + M(t[13]) + ")";
                                        }
                                        return function () {
                                            (this.reset = n),
                                                (this.rotate = s),
                                                (this.rotateX = a),
                                                (this.rotateY = o),
                                                (this.rotateZ = l),
                                                (this.skew = c),
                                                (this.skewFromAxis = p),
                                                (this.shear = h),
                                                (this.scale = d),
                                                (this.setTransform = u),
                                                (this.translate = f),
                                                (this.transform = m),
                                                (this.applyToPoint = _),
                                                (this.applyToX = w),
                                                (this.applyToY = S),
                                                (this.applyToZ = E),
                                                (this.applyToPointArray = T),
                                                (this.applyToTriplePoints = A),
                                                (this.applyToPointStringified = C),
                                                (this.toCSS = I),
                                                (this.to2dCSS = D),
                                                (this.clone = v),
                                                (this.cloneFromProps = b),
                                                (this.equals = g),
                                                (this.inversePoints = k),
                                                (this.inversePoint = x),
                                                (this.getInverseMatrix = P),
                                                (this._t = this.transform),
                                                (this.isIdentity = y),
                                                (this._identity = !0),
                                                (this._identityCalculated = !1),
                                                (this.props = createTypedArray("float32", 16)),
                                                this.reset();
                                        };
                                    })();
                                function _typeof$3(t) {
                                    return (_typeof$3 =
                                        "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                                            ? function (t) {
                                                  return typeof t;
                                              }
                                            : function (t) {
                                                  return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                                              })(t);
                                }
                                var lottie = {},
                                    standalone = "__[STANDALONE]__",
                                    animationData = "__[ANIMATIONDATA]__",
                                    renderer = "";
                                function setLocation(t) {
                                    setLocationHref(t);
                                }
                                function searchAnimations() {
                                    !0 === standalone ? animationManager.searchAnimations(animationData, standalone, renderer) : animationManager.searchAnimations();
                                }
                                function setSubframeRendering(t) {
                                    setSubframeEnabled(t);
                                }
                                function setPrefix(t) {
                                    setIdPrefix(t);
                                }
                                function loadAnimation(t) {
                                    return !0 === standalone && (t.animationData = JSON.parse(animationData)), animationManager.loadAnimation(t);
                                }
                                function setQuality(t) {
                                    if ("string" == typeof t)
                                        switch (t) {
                                            case "high":
                                                setDefaultCurveSegments(200);
                                                break;
                                            default:
                                            case "medium":
                                                setDefaultCurveSegments(50);
                                                break;
                                            case "low":
                                                setDefaultCurveSegments(10);
                                        }
                                    else !isNaN(t) && t > 1 && setDefaultCurveSegments(t);
                                    getDefaultCurveSegments() >= 50 ? roundValues(!1) : roundValues(!0);
                                }
                                function inBrowser() {
                                    return "undefined" != typeof navigator;
                                }
                                function installPlugin(t, e) {
                                    "expressions" === t && setExpressionsPlugin(e);
                                }
                                function getFactory(t) {
                                    switch (t) {
                                        case "propertyFactory":
                                            return PropertyFactory;
                                        case "shapePropertyFactory":
                                            return ShapePropertyFactory;
                                        case "matrix":
                                            return Matrix;
                                        default:
                                            return null;
                                    }
                                }
                                function checkReady() {
                                    "complete" === document.readyState && (clearInterval(readyStateCheckInterval), searchAnimations());
                                }
                                function getQueryVariable(t) {
                                    for (var e = queryString.split("&"), r = 0; r < e.length; r += 1) {
                                        var i = e[r].split("=");
                                        if (decodeURIComponent(i[0]) == t) return decodeURIComponent(i[1]);
                                    }
                                    return null;
                                }
                                (lottie.play = animationManager.play),
                                    (lottie.pause = animationManager.pause),
                                    (lottie.setLocationHref = setLocation),
                                    (lottie.togglePause = animationManager.togglePause),
                                    (lottie.setSpeed = animationManager.setSpeed),
                                    (lottie.setDirection = animationManager.setDirection),
                                    (lottie.stop = animationManager.stop),
                                    (lottie.searchAnimations = searchAnimations),
                                    (lottie.registerAnimation = animationManager.registerAnimation),
                                    (lottie.loadAnimation = loadAnimation),
                                    (lottie.setSubframeRendering = setSubframeRendering),
                                    (lottie.resize = animationManager.resize),
                                    (lottie.goToAndStop = animationManager.goToAndStop),
                                    (lottie.destroy = animationManager.destroy),
                                    (lottie.setQuality = setQuality),
                                    (lottie.inBrowser = inBrowser),
                                    (lottie.installPlugin = installPlugin),
                                    (lottie.freeze = animationManager.freeze),
                                    (lottie.unfreeze = animationManager.unfreeze),
                                    (lottie.setVolume = animationManager.setVolume),
                                    (lottie.mute = animationManager.mute),
                                    (lottie.unmute = animationManager.unmute),
                                    (lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations),
                                    (lottie.useWebWorker = setWebWorker),
                                    (lottie.setIDPrefix = setPrefix),
                                    (lottie.__getFactory = getFactory),
                                    (lottie.version = "5.10.0");
                                var queryString = "";
                                if (standalone) {
                                    var scripts = document.getElementsByTagName("script"),
                                        index = scripts.length - 1,
                                        myScript = scripts[index] || { src: "" };
                                    (queryString = myScript.src ? myScript.src.replace(/^[^\?]+\??/, "") : ""), (renderer = getQueryVariable("renderer"));
                                }
                                var readyStateCheckInterval = setInterval(checkReady, 100);
                                try {
                                    "object" !== _typeof$3(exports) && (window.bodymovin = lottie);
                                } catch (t) {}
                                var ShapeModifiers = (function () {
                                    var t = {},
                                        e = {};
                                    return (
                                        (t.registerModifier = function (t, r) {
                                            e[t] || (e[t] = r);
                                        }),
                                        (t.getModifier = function (t, r, i) {
                                            return new e[t](r, i);
                                        }),
                                        t
                                    );
                                })();
                                function ShapeModifier() {}
                                function TrimModifier() {}
                                function PuckerAndBloatModifier() {}
                                (ShapeModifier.prototype.initModifierProperties = function () {}),
                                    (ShapeModifier.prototype.addShapeToModifier = function () {}),
                                    (ShapeModifier.prototype.addShape = function (t) {
                                        if (!this.closed) {
                                            t.sh.container.addDynamicProperty(t.sh);
                                            var e = { shape: t.sh, data: t, localShapeCollection: shapeCollectionPool.newShapeCollection() };
                                            this.shapes.push(e), this.addShapeToModifier(e), this._isAnimated && t.setAsAnimated();
                                        }
                                    }),
                                    (ShapeModifier.prototype.init = function (t, e) {
                                        (this.shapes = []),
                                            (this.elem = t),
                                            this.initDynamicPropertyContainer(t),
                                            this.initModifierProperties(t, e),
                                            (this.frameId = initialDefaultFrame),
                                            (this.closed = !1),
                                            (this.k = !1),
                                            this.dynamicProperties.length ? (this.k = !0) : this.getValue(!0);
                                    }),
                                    (ShapeModifier.prototype.processKeys = function () {
                                        this.elem.globalData.frameId !== this.frameId && ((this.frameId = this.elem.globalData.frameId), this.iterateDynamicProperties());
                                    }),
                                    extendPrototype([DynamicPropertyContainer], ShapeModifier),
                                    extendPrototype([ShapeModifier], TrimModifier),
                                    (TrimModifier.prototype.initModifierProperties = function (t, e) {
                                        (this.s = PropertyFactory.getProp(t, e.s, 0, 0.01, this)),
                                            (this.e = PropertyFactory.getProp(t, e.e, 0, 0.01, this)),
                                            (this.o = PropertyFactory.getProp(t, e.o, 0, 0, this)),
                                            (this.sValue = 0),
                                            (this.eValue = 0),
                                            (this.getValue = this.processKeys),
                                            (this.m = e.m),
                                            (this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length);
                                    }),
                                    (TrimModifier.prototype.addShapeToModifier = function (t) {
                                        t.pathsData = [];
                                    }),
                                    (TrimModifier.prototype.calculateShapeEdges = function (t, e, r, i, n) {
                                        var s = [];
                                        e <= 1 ? s.push({ s: t, e }) : t >= 1 ? s.push({ s: t - 1, e: e - 1 }) : (s.push({ s: t, e: 1 }), s.push({ s: 0, e: e - 1 }));
                                        var a,
                                            o,
                                            l = [],
                                            h = s.length;
                                        for (a = 0; a < h; a += 1) {
                                            var c, p;
                                            (o = s[a]).e * n < i || o.s * n > i + r || ((c = o.s * n <= i ? 0 : (o.s * n - i) / r), (p = o.e * n >= i + r ? 1 : (o.e * n - i) / r), l.push([c, p]));
                                        }
                                        return l.length || l.push([0, 0]), l;
                                    }),
                                    (TrimModifier.prototype.releasePathsData = function (t) {
                                        var e,
                                            r = t.length;
                                        for (e = 0; e < r; e += 1) segmentsLengthPool.release(t[e]);
                                        return (t.length = 0), t;
                                    }),
                                    (TrimModifier.prototype.processShapes = function (t) {
                                        var e, r, i, n;
                                        if (this._mdf || t) {
                                            var s = (this.o.v % 360) / 360;
                                            if ((s < 0 && (s += 1), (e = this.s.v > 1 ? 1 + s : this.s.v < 0 ? 0 + s : this.s.v + s) > (r = this.e.v > 1 ? 1 + s : this.e.v < 0 ? 0 + s : this.e.v + s))) {
                                                var a = e;
                                                (e = r), (r = a);
                                            }
                                            (e = 1e-4 * Math.round(1e4 * e)), (r = 1e-4 * Math.round(1e4 * r)), (this.sValue = e), (this.eValue = r);
                                        } else (e = this.sValue), (r = this.eValue);
                                        var o,
                                            l,
                                            h,
                                            c,
                                            p,
                                            d = this.shapes.length,
                                            u = 0;
                                        if (r === e)
                                            for (n = 0; n < d; n += 1)
                                                this.shapes[n].localShapeCollection.releaseShapes(),
                                                    (this.shapes[n].shape._mdf = !0),
                                                    (this.shapes[n].shape.paths = this.shapes[n].localShapeCollection),
                                                    this._mdf && (this.shapes[n].pathsData.length = 0);
                                        else if ((1 === r && 0 === e) || (0 === r && 1 === e)) {
                                            if (this._mdf) for (n = 0; n < d; n += 1) (this.shapes[n].pathsData.length = 0), (this.shapes[n].shape._mdf = !0);
                                        } else {
                                            var f,
                                                m,
                                                y = [];
                                            for (n = 0; n < d; n += 1)
                                                if ((f = this.shapes[n]).shape._mdf || this._mdf || t || 2 === this.m) {
                                                    if (((l = (i = f.shape.paths)._length), (p = 0), !f.shape._mdf && f.pathsData.length)) p = f.totalShapeLength;
                                                    else {
                                                        for (h = this.releasePathsData(f.pathsData), o = 0; o < l; o += 1) (c = bez.getSegmentsLength(i.shapes[o])), h.push(c), (p += c.totalLength);
                                                        (f.totalShapeLength = p), (f.pathsData = h);
                                                    }
                                                    (u += p), (f.shape._mdf = !0);
                                                } else f.shape.paths = f.localShapeCollection;
                                            var g,
                                                v = e,
                                                b = r,
                                                _ = 0;
                                            for (n = d - 1; n >= 0; n -= 1)
                                                if ((f = this.shapes[n]).shape._mdf) {
                                                    for (
                                                        (m = f.localShapeCollection).releaseShapes(),
                                                            2 === this.m && d > 1 ? ((g = this.calculateShapeEdges(e, r, f.totalShapeLength, _, u)), (_ += f.totalShapeLength)) : (g = [[v, b]]),
                                                            l = g.length,
                                                            o = 0;
                                                        o < l;
                                                        o += 1
                                                    ) {
                                                        (v = g[o][0]),
                                                            (b = g[o][1]),
                                                            (y.length = 0),
                                                            b <= 1
                                                                ? y.push({ s: f.totalShapeLength * v, e: f.totalShapeLength * b })
                                                                : v >= 1
                                                                ? y.push({ s: f.totalShapeLength * (v - 1), e: f.totalShapeLength * (b - 1) })
                                                                : (y.push({ s: f.totalShapeLength * v, e: f.totalShapeLength }), y.push({ s: 0, e: f.totalShapeLength * (b - 1) }));
                                                        var w = this.addShapes(f, y[0]);
                                                        if (y[0].s !== y[0].e) {
                                                            if (y.length > 1)
                                                                if (f.shape.paths.shapes[f.shape.paths._length - 1].c) {
                                                                    var S = w.pop();
                                                                    this.addPaths(w, m), (w = this.addShapes(f, y[1], S));
                                                                } else this.addPaths(w, m), (w = this.addShapes(f, y[1]));
                                                            this.addPaths(w, m);
                                                        }
                                                    }
                                                    f.shape.paths = m;
                                                }
                                        }
                                    }),
                                    (TrimModifier.prototype.addPaths = function (t, e) {
                                        var r,
                                            i = t.length;
                                        for (r = 0; r < i; r += 1) e.addShape(t[r]);
                                    }),
                                    (TrimModifier.prototype.addSegment = function (t, e, r, i, n, s, a) {
                                        n.setXYAt(e[0], e[1], "o", s), n.setXYAt(r[0], r[1], "i", s + 1), a && n.setXYAt(t[0], t[1], "v", s), n.setXYAt(i[0], i[1], "v", s + 1);
                                    }),
                                    (TrimModifier.prototype.addSegmentFromArray = function (t, e, r, i) {
                                        e.setXYAt(t[1], t[5], "o", r), e.setXYAt(t[2], t[6], "i", r + 1), i && e.setXYAt(t[0], t[4], "v", r), e.setXYAt(t[3], t[7], "v", r + 1);
                                    }),
                                    (TrimModifier.prototype.addShapes = function (t, e, r) {
                                        var i,
                                            n,
                                            s,
                                            a,
                                            o,
                                            l,
                                            h,
                                            c,
                                            p = t.pathsData,
                                            d = t.shape.paths.shapes,
                                            u = t.shape.paths._length,
                                            f = 0,
                                            m = [],
                                            y = !0;
                                        for (r ? ((o = r._length), (c = r._length)) : ((r = shapePool.newElement()), (o = 0), (c = 0)), m.push(r), i = 0; i < u; i += 1) {
                                            for (l = p[i].lengths, r.c = d[i].c, s = d[i].c ? l.length : l.length + 1, n = 1; n < s; n += 1)
                                                if (f + (a = l[n - 1]).addedLength < e.s) (f += a.addedLength), (r.c = !1);
                                                else {
                                                    if (f > e.e) {
                                                        r.c = !1;
                                                        break;
                                                    }
                                                    e.s <= f && e.e >= f + a.addedLength
                                                        ? (this.addSegment(d[i].v[n - 1], d[i].o[n - 1], d[i].i[n], d[i].v[n], r, o, y), (y = !1))
                                                        : ((h = bez.getNewSegment(d[i].v[n - 1], d[i].v[n], d[i].o[n - 1], d[i].i[n], (e.s - f) / a.addedLength, (e.e - f) / a.addedLength, l[n - 1])),
                                                          this.addSegmentFromArray(h, r, o, y),
                                                          (y = !1),
                                                          (r.c = !1)),
                                                        (f += a.addedLength),
                                                        (o += 1);
                                                }
                                            if (d[i].c && l.length) {
                                                if (((a = l[n - 1]), f <= e.e)) {
                                                    var g = l[n - 1].addedLength;
                                                    e.s <= f && e.e >= f + g
                                                        ? (this.addSegment(d[i].v[n - 1], d[i].o[n - 1], d[i].i[0], d[i].v[0], r, o, y), (y = !1))
                                                        : ((h = bez.getNewSegment(d[i].v[n - 1], d[i].v[0], d[i].o[n - 1], d[i].i[0], (e.s - f) / g, (e.e - f) / g, l[n - 1])), this.addSegmentFromArray(h, r, o, y), (y = !1), (r.c = !1));
                                                } else r.c = !1;
                                                (f += a.addedLength), (o += 1);
                                            }
                                            if ((r._length && (r.setXYAt(r.v[c][0], r.v[c][1], "i", c), r.setXYAt(r.v[r._length - 1][0], r.v[r._length - 1][1], "o", r._length - 1)), f > e.e)) break;
                                            i < u - 1 && ((r = shapePool.newElement()), (y = !0), m.push(r), (o = 0));
                                        }
                                        return m;
                                    }),
                                    extendPrototype([ShapeModifier], PuckerAndBloatModifier),
                                    (PuckerAndBloatModifier.prototype.initModifierProperties = function (t, e) {
                                        (this.getValue = this.processKeys), (this.amount = PropertyFactory.getProp(t, e.a, 0, null, this)), (this._isAnimated = !!this.amount.effectsSequence.length);
                                    }),
                                    (PuckerAndBloatModifier.prototype.processPath = function (t, e) {
                                        var r = e / 100,
                                            i = [0, 0],
                                            n = t._length,
                                            s = 0;
                                        for (s = 0; s < n; s += 1) (i[0] += t.v[s][0]), (i[1] += t.v[s][1]);
                                        (i[0] /= n), (i[1] /= n);
                                        var a,
                                            o,
                                            l,
                                            h,
                                            c,
                                            p,
                                            d = shapePool.newElement();
                                        for (d.c = t.c, s = 0; s < n; s += 1)
                                            (a = t.v[s][0] + (i[0] - t.v[s][0]) * r),
                                                (o = t.v[s][1] + (i[1] - t.v[s][1]) * r),
                                                (l = t.o[s][0] + (i[0] - t.o[s][0]) * -r),
                                                (h = t.o[s][1] + (i[1] - t.o[s][1]) * -r),
                                                (c = t.i[s][0] + (i[0] - t.i[s][0]) * -r),
                                                (p = t.i[s][1] + (i[1] - t.i[s][1]) * -r),
                                                d.setTripleAt(a, o, l, h, c, p, s);
                                        return d;
                                    }),
                                    (PuckerAndBloatModifier.prototype.processShapes = function (t) {
                                        var e,
                                            r,
                                            i,
                                            n,
                                            s,
                                            a,
                                            o = this.shapes.length,
                                            l = this.amount.v;
                                        if (0 !== l)
                                            for (r = 0; r < o; r += 1) {
                                                if (((a = (s = this.shapes[r]).localShapeCollection), s.shape._mdf || this._mdf || t))
                                                    for (a.releaseShapes(), s.shape._mdf = !0, e = s.shape.paths.shapes, n = s.shape.paths._length, i = 0; i < n; i += 1) a.addShape(this.processPath(e[i], l));
                                                s.shape.paths = s.localShapeCollection;
                                            }
                                        this.dynamicProperties.length || (this._mdf = !1);
                                    });
                                var TransformPropertyFactory = (function () {
                                    var t = [0, 0];
                                    function e(t, e, r) {
                                        if (
                                            ((this.elem = t),
                                            (this.frameId = -1),
                                            (this.propType = "transform"),
                                            (this.data = e),
                                            (this.v = new Matrix()),
                                            (this.pre = new Matrix()),
                                            (this.appliedTransformations = 0),
                                            this.initDynamicPropertyContainer(r || t),
                                            e.p && e.p.s
                                                ? ((this.px = PropertyFactory.getProp(t, e.p.x, 0, 0, this)), (this.py = PropertyFactory.getProp(t, e.p.y, 0, 0, this)), e.p.z && (this.pz = PropertyFactory.getProp(t, e.p.z, 0, 0, this)))
                                                : (this.p = PropertyFactory.getProp(t, e.p || { k: [0, 0, 0] }, 1, 0, this)),
                                            e.rx)
                                        ) {
                                            if (
                                                ((this.rx = PropertyFactory.getProp(t, e.rx, 0, degToRads, this)),
                                                (this.ry = PropertyFactory.getProp(t, e.ry, 0, degToRads, this)),
                                                (this.rz = PropertyFactory.getProp(t, e.rz, 0, degToRads, this)),
                                                e.or.k[0].ti)
                                            ) {
                                                var i,
                                                    n = e.or.k.length;
                                                for (i = 0; i < n; i += 1) (e.or.k[i].to = null), (e.or.k[i].ti = null);
                                            }
                                            (this.or = PropertyFactory.getProp(t, e.or, 1, degToRads, this)), (this.or.sh = !0);
                                        } else this.r = PropertyFactory.getProp(t, e.r || { k: 0 }, 0, degToRads, this);
                                        e.sk && ((this.sk = PropertyFactory.getProp(t, e.sk, 0, degToRads, this)), (this.sa = PropertyFactory.getProp(t, e.sa, 0, degToRads, this))),
                                            (this.a = PropertyFactory.getProp(t, e.a || { k: [0, 0, 0] }, 1, 0, this)),
                                            (this.s = PropertyFactory.getProp(t, e.s || { k: [100, 100, 100] }, 1, 0.01, this)),
                                            e.o ? (this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, t)) : (this.o = { _mdf: !1, v: 1 }),
                                            (this._isDirty = !0),
                                            this.dynamicProperties.length || this.getValue(!0);
                                    }
                                    return (
                                        (e.prototype = {
                                            applyToMatrix: function (t) {
                                                var e = this._mdf;
                                                this.iterateDynamicProperties(),
                                                    (this._mdf = this._mdf || e),
                                                    this.a && t.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                                                    this.s && t.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                                                    this.sk && t.skewFromAxis(-this.sk.v, this.sa.v),
                                                    this.r ? t.rotate(-this.r.v) : t.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),
                                                    this.data.p.s ? (this.data.p.z ? t.translate(this.px.v, this.py.v, -this.pz.v) : t.translate(this.px.v, this.py.v, 0)) : t.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
                                            },
                                            getValue: function (e) {
                                                if (this.elem.globalData.frameId !== this.frameId) {
                                                    if ((this._isDirty && (this.precalculateMatrix(), (this._isDirty = !1)), this.iterateDynamicProperties(), this._mdf || e)) {
                                                        var r;
                                                        if (
                                                            (this.v.cloneFromProps(this.pre.props),
                                                            this.appliedTransformations < 1 && this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                                                            this.appliedTransformations < 2 && this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                                                            this.sk && this.appliedTransformations < 3 && this.v.skewFromAxis(-this.sk.v, this.sa.v),
                                                            this.r && this.appliedTransformations < 4
                                                                ? this.v.rotate(-this.r.v)
                                                                : !this.r &&
                                                                  this.appliedTransformations < 4 &&
                                                                  this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),
                                                            this.autoOriented)
                                                        ) {
                                                            var i, n;
                                                            if (((r = this.elem.globalData.frameRate), this.p && this.p.keyframes && this.p.getValueAtTime))
                                                                this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t
                                                                    ? ((i = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / r, 0)), (n = this.p.getValueAtTime(this.p.keyframes[0].t / r, 0)))
                                                                    : this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t
                                                                    ? ((i = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / r, 0)),
                                                                      (n = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / r, 0)))
                                                                    : ((i = this.p.pv), (n = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / r, this.p.offsetTime)));
                                                            else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {
                                                                (i = []), (n = []);
                                                                var s = this.px,
                                                                    a = this.py;
                                                                s._caching.lastFrame + s.offsetTime <= s.keyframes[0].t
                                                                    ? ((i[0] = s.getValueAtTime((s.keyframes[0].t + 0.01) / r, 0)),
                                                                      (i[1] = a.getValueAtTime((a.keyframes[0].t + 0.01) / r, 0)),
                                                                      (n[0] = s.getValueAtTime(s.keyframes[0].t / r, 0)),
                                                                      (n[1] = a.getValueAtTime(a.keyframes[0].t / r, 0)))
                                                                    : s._caching.lastFrame + s.offsetTime >= s.keyframes[s.keyframes.length - 1].t
                                                                    ? ((i[0] = s.getValueAtTime(s.keyframes[s.keyframes.length - 1].t / r, 0)),
                                                                      (i[1] = a.getValueAtTime(a.keyframes[a.keyframes.length - 1].t / r, 0)),
                                                                      (n[0] = s.getValueAtTime((s.keyframes[s.keyframes.length - 1].t - 0.01) / r, 0)),
                                                                      (n[1] = a.getValueAtTime((a.keyframes[a.keyframes.length - 1].t - 0.01) / r, 0)))
                                                                    : ((i = [s.pv, a.pv]),
                                                                      (n[0] = s.getValueAtTime((s._caching.lastFrame + s.offsetTime - 0.01) / r, s.offsetTime)),
                                                                      (n[1] = a.getValueAtTime((a._caching.lastFrame + a.offsetTime - 0.01) / r, a.offsetTime)));
                                                            } else i = n = t;
                                                            this.v.rotate(-Math.atan2(i[1] - n[1], i[0] - n[0]));
                                                        }
                                                        this.data.p && this.data.p.s
                                                            ? this.data.p.z
                                                                ? this.v.translate(this.px.v, this.py.v, -this.pz.v)
                                                                : this.v.translate(this.px.v, this.py.v, 0)
                                                            : this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
                                                    }
                                                    this.frameId = this.elem.globalData.frameId;
                                                }
                                            },
                                            precalculateMatrix: function () {
                                                if (!this.a.k && (this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), (this.appliedTransformations = 1), !this.s.effectsSequence.length)) {
                                                    if ((this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]), (this.appliedTransformations = 2), this.sk)) {
                                                        if (this.sk.effectsSequence.length || this.sa.effectsSequence.length) return;
                                                        this.pre.skewFromAxis(-this.sk.v, this.sa.v), (this.appliedTransformations = 3);
                                                    }
                                                    this.r
                                                        ? this.r.effectsSequence.length || (this.pre.rotate(-this.r.v), (this.appliedTransformations = 4))
                                                        : this.rz.effectsSequence.length ||
                                                          this.ry.effectsSequence.length ||
                                                          this.rx.effectsSequence.length ||
                                                          this.or.effectsSequence.length ||
                                                          (this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), (this.appliedTransformations = 4));
                                                }
                                            },
                                            autoOrient: function () {},
                                        }),
                                        extendPrototype([DynamicPropertyContainer], e),
                                        (e.prototype.addDynamicProperty = function (t) {
                                            this._addDynamicProperty(t), this.elem.addDynamicProperty(t), (this._isDirty = !0);
                                        }),
                                        (e.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty),
                                        {
                                            getTransformProperty: function (t, r, i) {
                                                return new e(t, r, i);
                                            },
                                        }
                                    );
                                })();
                                function RepeaterModifier() {}
                                function RoundCornersModifier() {}
                                function floatEqual(t, e) {
                                    return 1e5 * Math.abs(t - e) <= Math.min(Math.abs(t), Math.abs(e));
                                }
                                function floatZero(t) {
                                    return Math.abs(t) <= 1e-5;
                                }
                                function lerp(t, e, r) {
                                    return t * (1 - r) + e * r;
                                }
                                function lerpPoint(t, e, r) {
                                    return [lerp(t[0], e[0], r), lerp(t[1], e[1], r)];
                                }
                                function quadRoots(t, e, r) {
                                    if (0 === t) return [];
                                    var i = e * e - 4 * t * r;
                                    if (i < 0) return [];
                                    var n = -e / (2 * t);
                                    if (0 === i) return [n];
                                    var s = Math.sqrt(i) / (2 * t);
                                    return [n - s, n + s];
                                }
                                function polynomialCoefficients(t, e, r, i) {
                                    return [3 * e - t - 3 * r + i, 3 * t - 6 * e + 3 * r, -3 * t + 3 * e, t];
                                }
                                function singlePoint(t) {
                                    return new PolynomialBezier(t, t, t, t, !1);
                                }
                                function PolynomialBezier(t, e, r, i, n) {
                                    n && pointEqual(t, e) && (e = lerpPoint(t, i, 1 / 3)), n && pointEqual(r, i) && (r = lerpPoint(t, i, 2 / 3));
                                    var s = polynomialCoefficients(t[0], e[0], r[0], i[0]),
                                        a = polynomialCoefficients(t[1], e[1], r[1], i[1]);
                                    (this.a = [s[0], a[0]]), (this.b = [s[1], a[1]]), (this.c = [s[2], a[2]]), (this.d = [s[3], a[3]]), (this.points = [t, e, r, i]);
                                }
                                function extrema(t, e) {
                                    var r = t.points[0][e],
                                        i = t.points[t.points.length - 1][e];
                                    if (r > i) {
                                        var n = i;
                                        (i = r), (r = n);
                                    }
                                    for (var s = quadRoots(3 * t.a[e], 2 * t.b[e], t.c[e]), a = 0; a < s.length; a += 1)
                                        if (s[a] > 0 && s[a] < 1) {
                                            var o = t.point(s[a])[e];
                                            o < r ? (r = o) : o > i && (i = o);
                                        }
                                    return { min: r, max: i };
                                }
                                function intersectData(t, e, r) {
                                    var i = t.boundingBox();
                                    return { cx: i.cx, cy: i.cy, width: i.width, height: i.height, bez: t, t: (e + r) / 2, t1: e, t2: r };
                                }
                                function splitData(t) {
                                    var e = t.bez.split(0.5);
                                    return [intersectData(e[0], t.t1, t.t), intersectData(e[1], t.t, t.t2)];
                                }
                                function boxIntersect(t, e) {
                                    return 2 * Math.abs(t.cx - e.cx) < t.width + e.width && 2 * Math.abs(t.cy - e.cy) < t.height + e.height;
                                }
                                function intersectsImpl(t, e, r, i, n, s) {
                                    if (boxIntersect(t, e))
                                        if (r >= s || (t.width <= i && t.height <= i && e.width <= i && e.height <= i)) n.push([t.t, e.t]);
                                        else {
                                            var a = splitData(t),
                                                o = splitData(e);
                                            intersectsImpl(a[0], o[0], r + 1, i, n, s), intersectsImpl(a[0], o[1], r + 1, i, n, s), intersectsImpl(a[1], o[0], r + 1, i, n, s), intersectsImpl(a[1], o[1], r + 1, i, n, s);
                                        }
                                }
                                function crossProduct(t, e) {
                                    return [t[1] * e[2] - t[2] * e[1], t[2] * e[0] - t[0] * e[2], t[0] * e[1] - t[1] * e[0]];
                                }
                                function lineIntersection(t, e, r, i) {
                                    var n = [t[0], t[1], 1],
                                        s = [e[0], e[1], 1],
                                        a = [r[0], r[1], 1],
                                        o = [i[0], i[1], 1],
                                        l = crossProduct(crossProduct(n, s), crossProduct(a, o));
                                    return floatZero(l[2]) ? null : [l[0] / l[2], l[1] / l[2]];
                                }
                                function polarOffset(t, e, r) {
                                    return [t[0] + Math.cos(e) * r, t[1] - Math.sin(e) * r];
                                }
                                function pointDistance(t, e) {
                                    return Math.hypot(t[0] - e[0], t[1] - e[1]);
                                }
                                function pointEqual(t, e) {
                                    return floatEqual(t[0], e[0]) && floatEqual(t[1], e[1]);
                                }
                                function ZigZagModifier() {}
                                function setPoint(t, e, r, i, n, s, a) {
                                    var o = r - Math.PI / 2,
                                        l = r + Math.PI / 2,
                                        h = e[0] + Math.cos(r) * i * n,
                                        c = e[1] - Math.sin(r) * i * n;
                                    t.setTripleAt(h, c, h + Math.cos(o) * s, c - Math.sin(o) * s, h + Math.cos(l) * a, c - Math.sin(l) * a, t.length());
                                }
                                function getPerpendicularVector(t, e) {
                                    var r = [e[0] - t[0], e[1] - t[1]],
                                        i = 0.5 * -Math.PI;
                                    return [Math.cos(i) * r[0] - Math.sin(i) * r[1], Math.sin(i) * r[0] + Math.cos(i) * r[1]];
                                }
                                function getProjectingAngle(t, e) {
                                    var r = 0 === e ? t.length() - 1 : e - 1,
                                        i = (e + 1) % t.length(),
                                        n = getPerpendicularVector(t.v[r], t.v[i]);
                                    return Math.atan2(0, 1) - Math.atan2(n[1], n[0]);
                                }
                                function zigZagCorner(t, e, r, i, n, s, a) {
                                    var o = getProjectingAngle(e, r),
                                        l = e.v[r % e._length],
                                        h = e.v[0 === r ? e._length - 1 : r - 1],
                                        c = e.v[(r + 1) % e._length],
                                        p = 2 === s ? Math.sqrt(Math.pow(l[0] - h[0], 2) + Math.pow(l[1] - h[1], 2)) : 0,
                                        d = 2 === s ? Math.sqrt(Math.pow(l[0] - c[0], 2) + Math.pow(l[1] - c[1], 2)) : 0;
                                    setPoint(t, e.v[r % e._length], o, a, i, d / (2 * (n + 1)), p / (2 * (n + 1)), s);
                                }
                                function zigZagSegment(t, e, r, i, n, s) {
                                    for (var a = 0; a < i; a += 1) {
                                        var o = (a + 1) / (i + 1),
                                            l = 2 === n ? Math.sqrt(Math.pow(e.points[3][0] - e.points[0][0], 2) + Math.pow(e.points[3][1] - e.points[0][1], 2)) : 0,
                                            h = e.normalAngle(o);
                                        setPoint(t, e.point(o), h, s, r, l / (2 * (i + 1)), l / (2 * (i + 1)), n), (s = -s);
                                    }
                                    return s;
                                }
                                function linearOffset(t, e, r) {
                                    var i = Math.atan2(e[0] - t[0], e[1] - t[1]);
                                    return [polarOffset(t, i, r), polarOffset(e, i, r)];
                                }
                                function offsetSegment(t, e) {
                                    var r, i, n, s, a, o, l;
                                    (r = (l = linearOffset(t.points[0], t.points[1], e))[0]),
                                        (i = l[1]),
                                        (n = (l = linearOffset(t.points[1], t.points[2], e))[0]),
                                        (s = l[1]),
                                        (a = (l = linearOffset(t.points[2], t.points[3], e))[0]),
                                        (o = l[1]);
                                    var h = lineIntersection(r, i, n, s);
                                    null === h && (h = i);
                                    var c = lineIntersection(a, o, n, s);
                                    return null === c && (c = a), new PolynomialBezier(r, h, c, o);
                                }
                                function joinLines(t, e, r, i, n) {
                                    var s = e.points[3],
                                        a = r.points[0];
                                    if (3 === i) return s;
                                    if (pointEqual(s, a)) return s;
                                    if (2 === i) {
                                        var o = -e.tangentAngle(1),
                                            l = -r.tangentAngle(0) + Math.PI,
                                            h = lineIntersection(s, polarOffset(s, o + Math.PI / 2, 100), a, polarOffset(a, o + Math.PI / 2, 100)),
                                            c = h ? pointDistance(h, s) : pointDistance(s, a) / 2,
                                            p = polarOffset(s, o, 2 * c * roundCorner);
                                        return t.setXYAt(p[0], p[1], "o", t.length() - 1), (p = polarOffset(a, l, 2 * c * roundCorner)), t.setTripleAt(a[0], a[1], a[0], a[1], p[0], p[1], t.length()), a;
                                    }
                                    var d = lineIntersection(pointEqual(s, e.points[2]) ? e.points[0] : e.points[2], s, a, pointEqual(a, r.points[1]) ? r.points[3] : r.points[1]);
                                    return d && pointDistance(d, s) < n ? (t.setTripleAt(d[0], d[1], d[0], d[1], d[0], d[1], t.length()), d) : s;
                                }
                                function getIntersection(t, e) {
                                    var r = t.intersections(e);
                                    return r.length && floatEqual(r[0][0], 1) && r.shift(), r.length ? r[0] : null;
                                }
                                function pruneSegmentIntersection(t, e) {
                                    var r = t.slice(),
                                        i = e.slice(),
                                        n = getIntersection(t[t.length - 1], e[0]);
                                    return (
                                        n && ((r[t.length - 1] = t[t.length - 1].split(n[0])[0]), (i[0] = e[0].split(n[1])[1])),
                                        t.length > 1 && e.length > 1 && (n = getIntersection(t[0], e[e.length - 1])) ? [[t[0].split(n[0])[0]], [e[e.length - 1].split(n[1])[1]]] : [r, i]
                                    );
                                }
                                function pruneIntersections(t) {
                                    for (var e, r = 1; r < t.length; r += 1) (e = pruneSegmentIntersection(t[r - 1], t[r])), (t[r - 1] = e[0]), (t[r] = e[1]);
                                    return t.length > 1 && ((e = pruneSegmentIntersection(t[t.length - 1], t[0])), (t[t.length - 1] = e[0]), (t[0] = e[1])), t;
                                }
                                function offsetSegmentSplit(t, e) {
                                    var r,
                                        i,
                                        n,
                                        s,
                                        a = t.inflectionPoints();
                                    if (0 === a.length) return [offsetSegment(t, e)];
                                    if (1 === a.length || floatEqual(a[1], 1)) return (r = (n = t.split(a[0]))[0]), (i = n[1]), [offsetSegment(r, e), offsetSegment(i, e)];
                                    r = (n = t.split(a[0]))[0];
                                    var o = (a[1] - a[0]) / (1 - a[0]);
                                    return (s = (n = n[1].split(o))[0]), (i = n[1]), [offsetSegment(r, e), offsetSegment(s, e), offsetSegment(i, e)];
                                }
                                function OffsetPathModifier() {}
                                function getFontProperties(t) {
                                    for (var e = t.fStyle ? t.fStyle.split(" ") : [], r = "normal", i = "normal", n = e.length, s = 0; s < n; s += 1)
                                        switch (e[s].toLowerCase()) {
                                            case "italic":
                                                i = "italic";
                                                break;
                                            case "bold":
                                                r = "700";
                                                break;
                                            case "black":
                                                r = "900";
                                                break;
                                            case "medium":
                                                r = "500";
                                                break;
                                            case "regular":
                                            case "normal":
                                                r = "400";
                                                break;
                                            case "light":
                                            case "thin":
                                                r = "200";
                                        }
                                    return { style: i, weight: t.fWeight || r };
                                }
                                extendPrototype([ShapeModifier], RepeaterModifier),
                                    (RepeaterModifier.prototype.initModifierProperties = function (t, e) {
                                        (this.getValue = this.processKeys),
                                            (this.c = PropertyFactory.getProp(t, e.c, 0, null, this)),
                                            (this.o = PropertyFactory.getProp(t, e.o, 0, null, this)),
                                            (this.tr = TransformPropertyFactory.getTransformProperty(t, e.tr, this)),
                                            (this.so = PropertyFactory.getProp(t, e.tr.so, 0, 0.01, this)),
                                            (this.eo = PropertyFactory.getProp(t, e.tr.eo, 0, 0.01, this)),
                                            (this.data = e),
                                            this.dynamicProperties.length || this.getValue(!0),
                                            (this._isAnimated = !!this.dynamicProperties.length),
                                            (this.pMatrix = new Matrix()),
                                            (this.rMatrix = new Matrix()),
                                            (this.sMatrix = new Matrix()),
                                            (this.tMatrix = new Matrix()),
                                            (this.matrix = new Matrix());
                                    }),
                                    (RepeaterModifier.prototype.applyTransforms = function (t, e, r, i, n, s) {
                                        var a = s ? -1 : 1,
                                            o = i.s.v[0] + (1 - i.s.v[0]) * (1 - n),
                                            l = i.s.v[1] + (1 - i.s.v[1]) * (1 - n);
                                        t.translate(i.p.v[0] * a * n, i.p.v[1] * a * n, i.p.v[2]),
                                            e.translate(-i.a.v[0], -i.a.v[1], i.a.v[2]),
                                            e.rotate(-i.r.v * a * n),
                                            e.translate(i.a.v[0], i.a.v[1], i.a.v[2]),
                                            r.translate(-i.a.v[0], -i.a.v[1], i.a.v[2]),
                                            r.scale(s ? 1 / o : o, s ? 1 / l : l),
                                            r.translate(i.a.v[0], i.a.v[1], i.a.v[2]);
                                    }),
                                    (RepeaterModifier.prototype.init = function (t, e, r, i) {
                                        for (
                                            this.elem = t,
                                                this.arr = e,
                                                this.pos = r,
                                                this.elemsData = i,
                                                this._currentCopies = 0,
                                                this._elements = [],
                                                this._groups = [],
                                                this.frameId = -1,
                                                this.initDynamicPropertyContainer(t),
                                                this.initModifierProperties(t, e[r]);
                                            r > 0;

                                        )
                                            (r -= 1), this._elements.unshift(e[r]);
                                        this.dynamicProperties.length ? (this.k = !0) : this.getValue(!0);
                                    }),
                                    (RepeaterModifier.prototype.resetElements = function (t) {
                                        var e,
                                            r = t.length;
                                        for (e = 0; e < r; e += 1) (t[e]._processed = !1), "gr" === t[e].ty && this.resetElements(t[e].it);
                                    }),
                                    (RepeaterModifier.prototype.cloneElements = function (t) {
                                        var e = JSON.parse(JSON.stringify(t));
                                        return this.resetElements(e), e;
                                    }),
                                    (RepeaterModifier.prototype.changeGroupRender = function (t, e) {
                                        var r,
                                            i = t.length;
                                        for (r = 0; r < i; r += 1) (t[r]._render = e), "gr" === t[r].ty && this.changeGroupRender(t[r].it, e);
                                    }),
                                    (RepeaterModifier.prototype.processShapes = function (t) {
                                        var e,
                                            r,
                                            i,
                                            n,
                                            s,
                                            a = !1;
                                        if (this._mdf || t) {
                                            var o,
                                                l = Math.ceil(this.c.v);
                                            if (this._groups.length < l) {
                                                for (; this._groups.length < l; ) {
                                                    var h = { it: this.cloneElements(this._elements), ty: "gr" };
                                                    h.it.push({
                                                        a: { a: 0, ix: 1, k: [0, 0] },
                                                        nm: "Transform",
                                                        o: { a: 0, ix: 7, k: 100 },
                                                        p: { a: 0, ix: 2, k: [0, 0] },
                                                        r: {
                                                            a: 1,
                                                            ix: 6,
                                                            k: [
                                                                { s: 0, e: 0, t: 0 },
                                                                { s: 0, e: 0, t: 1 },
                                                            ],
                                                        },
                                                        s: { a: 0, ix: 3, k: [100, 100] },
                                                        sa: { a: 0, ix: 5, k: 0 },
                                                        sk: { a: 0, ix: 4, k: 0 },
                                                        ty: "tr",
                                                    }),
                                                        this.arr.splice(0, 0, h),
                                                        this._groups.splice(0, 0, h),
                                                        (this._currentCopies += 1);
                                                }
                                                this.elem.reloadShapes(), (a = !0);
                                            }
                                            for (s = 0, i = 0; i <= this._groups.length - 1; i += 1) {
                                                if (((o = s < l), (this._groups[i]._render = o), this.changeGroupRender(this._groups[i].it, o), !o)) {
                                                    var c = this.elemsData[i].it,
                                                        p = c[c.length - 1];
                                                    0 !== p.transform.op.v ? ((p.transform.op._mdf = !0), (p.transform.op.v = 0)) : (p.transform.op._mdf = !1);
                                                }
                                                s += 1;
                                            }
                                            this._currentCopies = l;
                                            var d = this.o.v,
                                                u = d % 1,
                                                f = d > 0 ? Math.floor(d) : Math.ceil(d),
                                                m = this.pMatrix.props,
                                                y = this.rMatrix.props,
                                                g = this.sMatrix.props;
                                            this.pMatrix.reset(), this.rMatrix.reset(), this.sMatrix.reset(), this.tMatrix.reset(), this.matrix.reset();
                                            var v,
                                                b,
                                                _ = 0;
                                            if (d > 0) {
                                                for (; _ < f; ) this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1), (_ += 1);
                                                u && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, u, !1), (_ += u));
                                            } else if (d < 0) {
                                                for (; _ > f; ) this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !0), (_ -= 1);
                                                u && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -u, !0), (_ -= u));
                                            }
                                            for (i = 1 === this.data.m ? 0 : this._currentCopies - 1, n = 1 === this.data.m ? 1 : -1, s = this._currentCopies; s; ) {
                                                if (
                                                    ((b = (r = (e = this.elemsData[i].it)[e.length - 1].transform.mProps.v.props).length),
                                                    (e[e.length - 1].transform.mProps._mdf = !0),
                                                    (e[e.length - 1].transform.op._mdf = !0),
                                                    (e[e.length - 1].transform.op.v = 1 === this._currentCopies ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1))),
                                                    0 !== _)
                                                ) {
                                                    for (
                                                        ((0 !== i && 1 === n) || (i !== this._currentCopies - 1 && -1 === n)) && this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1),
                                                            this.matrix.transform(y[0], y[1], y[2], y[3], y[4], y[5], y[6], y[7], y[8], y[9], y[10], y[11], y[12], y[13], y[14], y[15]),
                                                            this.matrix.transform(g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], g[9], g[10], g[11], g[12], g[13], g[14], g[15]),
                                                            this.matrix.transform(m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10], m[11], m[12], m[13], m[14], m[15]),
                                                            v = 0;
                                                        v < b;
                                                        v += 1
                                                    )
                                                        r[v] = this.matrix.props[v];
                                                    this.matrix.reset();
                                                } else for (this.matrix.reset(), v = 0; v < b; v += 1) r[v] = this.matrix.props[v];
                                                (_ += 1), (s -= 1), (i += n);
                                            }
                                        } else
                                            for (s = this._currentCopies, i = 0, n = 1; s; )
                                                (r = (e = this.elemsData[i].it)[e.length - 1].transform.mProps.v.props), (e[e.length - 1].transform.mProps._mdf = !1), (e[e.length - 1].transform.op._mdf = !1), (s -= 1), (i += n);
                                        return a;
                                    }),
                                    (RepeaterModifier.prototype.addShape = function () {}),
                                    extendPrototype([ShapeModifier], RoundCornersModifier),
                                    (RoundCornersModifier.prototype.initModifierProperties = function (t, e) {
                                        (this.getValue = this.processKeys), (this.rd = PropertyFactory.getProp(t, e.r, 0, null, this)), (this._isAnimated = !!this.rd.effectsSequence.length);
                                    }),
                                    (RoundCornersModifier.prototype.processPath = function (t, e) {
                                        var r,
                                            i = shapePool.newElement();
                                        i.c = t.c;
                                        var n,
                                            s,
                                            a,
                                            o,
                                            l,
                                            h,
                                            c,
                                            p,
                                            d,
                                            u,
                                            f,
                                            m,
                                            y = t._length,
                                            g = 0;
                                        for (r = 0; r < y; r += 1)
                                            (n = t.v[r]),
                                                (a = t.o[r]),
                                                (s = t.i[r]),
                                                n[0] === a[0] && n[1] === a[1] && n[0] === s[0] && n[1] === s[1]
                                                    ? (0 !== r && r !== y - 1) || t.c
                                                        ? ((o = 0 === r ? t.v[y - 1] : t.v[r - 1]),
                                                          (h = (l = Math.sqrt(Math.pow(n[0] - o[0], 2) + Math.pow(n[1] - o[1], 2))) ? Math.min(l / 2, e) / l : 0),
                                                          (c = f = n[0] + (o[0] - n[0]) * h),
                                                          (p = m = n[1] - (n[1] - o[1]) * h),
                                                          (d = c - (c - n[0]) * roundCorner),
                                                          (u = p - (p - n[1]) * roundCorner),
                                                          i.setTripleAt(c, p, d, u, f, m, g),
                                                          (g += 1),
                                                          (o = r === y - 1 ? t.v[0] : t.v[r + 1]),
                                                          (h = (l = Math.sqrt(Math.pow(n[0] - o[0], 2) + Math.pow(n[1] - o[1], 2))) ? Math.min(l / 2, e) / l : 0),
                                                          (c = d = n[0] + (o[0] - n[0]) * h),
                                                          (p = u = n[1] + (o[1] - n[1]) * h),
                                                          (f = c - (c - n[0]) * roundCorner),
                                                          (m = p - (p - n[1]) * roundCorner),
                                                          i.setTripleAt(c, p, d, u, f, m, g),
                                                          (g += 1))
                                                        : (i.setTripleAt(n[0], n[1], a[0], a[1], s[0], s[1], g), (g += 1))
                                                    : (i.setTripleAt(t.v[r][0], t.v[r][1], t.o[r][0], t.o[r][1], t.i[r][0], t.i[r][1], g), (g += 1));
                                        return i;
                                    }),
                                    (RoundCornersModifier.prototype.processShapes = function (t) {
                                        var e,
                                            r,
                                            i,
                                            n,
                                            s,
                                            a,
                                            o = this.shapes.length,
                                            l = this.rd.v;
                                        if (0 !== l)
                                            for (r = 0; r < o; r += 1) {
                                                if (((a = (s = this.shapes[r]).localShapeCollection), s.shape._mdf || this._mdf || t))
                                                    for (a.releaseShapes(), s.shape._mdf = !0, e = s.shape.paths.shapes, n = s.shape.paths._length, i = 0; i < n; i += 1) a.addShape(this.processPath(e[i], l));
                                                s.shape.paths = s.localShapeCollection;
                                            }
                                        this.dynamicProperties.length || (this._mdf = !1);
                                    }),
                                    (PolynomialBezier.prototype.point = function (t) {
                                        return [((this.a[0] * t + this.b[0]) * t + this.c[0]) * t + this.d[0], ((this.a[1] * t + this.b[1]) * t + this.c[1]) * t + this.d[1]];
                                    }),
                                    (PolynomialBezier.prototype.derivative = function (t) {
                                        return [(3 * t * this.a[0] + 2 * this.b[0]) * t + this.c[0], (3 * t * this.a[1] + 2 * this.b[1]) * t + this.c[1]];
                                    }),
                                    (PolynomialBezier.prototype.tangentAngle = function (t) {
                                        var e = this.derivative(t);
                                        return Math.atan2(e[1], e[0]);
                                    }),
                                    (PolynomialBezier.prototype.normalAngle = function (t) {
                                        var e = this.derivative(t);
                                        return Math.atan2(e[0], e[1]);
                                    }),
                                    (PolynomialBezier.prototype.inflectionPoints = function () {
                                        var t = this.a[1] * this.b[0] - this.a[0] * this.b[1];
                                        if (floatZero(t)) return [];
                                        var e = (-0.5 * (this.a[1] * this.c[0] - this.a[0] * this.c[1])) / t,
                                            r = e * e - ((1 / 3) * (this.b[1] * this.c[0] - this.b[0] * this.c[1])) / t;
                                        if (r < 0) return [];
                                        var i = Math.sqrt(r);
                                        return floatZero(i)
                                            ? i > 0 && i < 1
                                                ? [e]
                                                : []
                                            : [e - i, e + i].filter(function (t) {
                                                  return t > 0 && t < 1;
                                              });
                                    }),
                                    (PolynomialBezier.prototype.split = function (t) {
                                        if (t <= 0) return [singlePoint(this.points[0]), this];
                                        if (t >= 1) return [this, singlePoint(this.points[this.points.length - 1])];
                                        var e = lerpPoint(this.points[0], this.points[1], t),
                                            r = lerpPoint(this.points[1], this.points[2], t),
                                            i = lerpPoint(this.points[2], this.points[3], t),
                                            n = lerpPoint(e, r, t),
                                            s = lerpPoint(r, i, t),
                                            a = lerpPoint(n, s, t);
                                        return [new PolynomialBezier(this.points[0], e, n, a, !0), new PolynomialBezier(a, s, i, this.points[3], !0)];
                                    }),
                                    (PolynomialBezier.prototype.bounds = function () {
                                        return { x: extrema(this, 0), y: extrema(this, 1) };
                                    }),
                                    (PolynomialBezier.prototype.boundingBox = function () {
                                        var t = this.bounds();
                                        return { left: t.x.min, right: t.x.max, top: t.y.min, bottom: t.y.max, width: t.x.max - t.x.min, height: t.y.max - t.y.min, cx: (t.x.max + t.x.min) / 2, cy: (t.y.max + t.y.min) / 2 };
                                    }),
                                    (PolynomialBezier.prototype.intersections = function (t, e, r) {
                                        void 0 === e && (e = 2), void 0 === r && (r = 7);
                                        var i = [];
                                        return intersectsImpl(intersectData(this, 0, 1), intersectData(t, 0, 1), 0, e, i, r), i;
                                    }),
                                    (PolynomialBezier.shapeSegment = function (t, e) {
                                        var r = (e + 1) % t.length();
                                        return new PolynomialBezier(t.v[e], t.o[e], t.i[r], t.v[r], !0);
                                    }),
                                    (PolynomialBezier.shapeSegmentInverted = function (t, e) {
                                        var r = (e + 1) % t.length();
                                        return new PolynomialBezier(t.v[r], t.i[r], t.o[e], t.v[e], !0);
                                    }),
                                    extendPrototype([ShapeModifier], ZigZagModifier),
                                    (ZigZagModifier.prototype.initModifierProperties = function (t, e) {
                                        (this.getValue = this.processKeys),
                                            (this.amplitude = PropertyFactory.getProp(t, e.s, 0, null, this)),
                                            (this.frequency = PropertyFactory.getProp(t, e.r, 0, null, this)),
                                            (this.pointsType = PropertyFactory.getProp(t, e.pt, 0, null, this)),
                                            (this._isAnimated = 0 !== this.amplitude.effectsSequence.length || 0 !== this.frequency.effectsSequence.length || 0 !== this.pointsType.effectsSequence.length);
                                    }),
                                    (ZigZagModifier.prototype.processPath = function (t, e, r, i) {
                                        var n = t._length,
                                            s = shapePool.newElement();
                                        if (((s.c = t.c), t.c || (n -= 1), 0 === n)) return s;
                                        var a = -1,
                                            o = PolynomialBezier.shapeSegment(t, 0);
                                        zigZagCorner(s, t, 0, e, r, i, a);
                                        for (var l = 0; l < n; l += 1) (a = zigZagSegment(s, o, e, r, i, -a)), (o = l !== n - 1 || t.c ? PolynomialBezier.shapeSegment(t, (l + 1) % n) : null), zigZagCorner(s, t, l + 1, e, r, i, a);
                                        return s;
                                    }),
                                    (ZigZagModifier.prototype.processShapes = function (t) {
                                        var e,
                                            r,
                                            i,
                                            n,
                                            s,
                                            a,
                                            o = this.shapes.length,
                                            l = this.amplitude.v,
                                            h = Math.max(0, Math.round(this.frequency.v)),
                                            c = this.pointsType.v;
                                        if (0 !== l)
                                            for (r = 0; r < o; r += 1) {
                                                if (((a = (s = this.shapes[r]).localShapeCollection), s.shape._mdf || this._mdf || t))
                                                    for (a.releaseShapes(), s.shape._mdf = !0, e = s.shape.paths.shapes, n = s.shape.paths._length, i = 0; i < n; i += 1) a.addShape(this.processPath(e[i], l, h, c));
                                                s.shape.paths = s.localShapeCollection;
                                            }
                                        this.dynamicProperties.length || (this._mdf = !1);
                                    }),
                                    extendPrototype([ShapeModifier], OffsetPathModifier),
                                    (OffsetPathModifier.prototype.initModifierProperties = function (t, e) {
                                        (this.getValue = this.processKeys),
                                            (this.amount = PropertyFactory.getProp(t, e.a, 0, null, this)),
                                            (this.miterLimit = PropertyFactory.getProp(t, e.ml, 0, null, this)),
                                            (this.lineJoin = e.lj),
                                            (this._isAnimated = 0 !== this.amount.effectsSequence.length);
                                    }),
                                    (OffsetPathModifier.prototype.processPath = function (t, e, r, i) {
                                        var n = shapePool.newElement();
                                        n.c = t.c;
                                        var s,
                                            a,
                                            o,
                                            l = t.length();
                                        t.c || (l -= 1);
                                        var h = [];
                                        for (s = 0; s < l; s += 1) (o = PolynomialBezier.shapeSegment(t, s)), h.push(offsetSegmentSplit(o, e));
                                        if (!t.c) for (s = l - 1; s >= 0; s -= 1) (o = PolynomialBezier.shapeSegmentInverted(t, s)), h.push(offsetSegmentSplit(o, e));
                                        h = pruneIntersections(h);
                                        var c = null,
                                            p = null;
                                        for (s = 0; s < h.length; s += 1) {
                                            var d = h[s];
                                            for (p && (c = joinLines(n, p, d[0], r, i)), p = d[d.length - 1], a = 0; a < d.length; a += 1)
                                                (o = d[a]),
                                                    c && pointEqual(o.points[0], c)
                                                        ? n.setXYAt(o.points[1][0], o.points[1][1], "o", n.length() - 1)
                                                        : n.setTripleAt(o.points[0][0], o.points[0][1], o.points[1][0], o.points[1][1], o.points[0][0], o.points[0][1], n.length()),
                                                    n.setTripleAt(o.points[3][0], o.points[3][1], o.points[3][0], o.points[3][1], o.points[2][0], o.points[2][1], n.length()),
                                                    (c = o.points[3]);
                                        }
                                        return h.length && joinLines(n, p, h[0][0], r, i), n;
                                    }),
                                    (OffsetPathModifier.prototype.processShapes = function (t) {
                                        var e,
                                            r,
                                            i,
                                            n,
                                            s,
                                            a,
                                            o = this.shapes.length,
                                            l = this.amount.v,
                                            h = this.miterLimit.v,
                                            c = this.lineJoin;
                                        if (0 !== l)
                                            for (r = 0; r < o; r += 1) {
                                                if (((a = (s = this.shapes[r]).localShapeCollection), s.shape._mdf || this._mdf || t))
                                                    for (a.releaseShapes(), s.shape._mdf = !0, e = s.shape.paths.shapes, n = s.shape.paths._length, i = 0; i < n; i += 1) a.addShape(this.processPath(e[i], l, c, h));
                                                s.shape.paths = s.localShapeCollection;
                                            }
                                        this.dynamicProperties.length || (this._mdf = !1);
                                    });
                                var FontManager = (function () {
                                    var t = { w: 0, size: 0, shapes: [], data: { shapes: [] } },
                                        e = [];
                                    e = e.concat([
                                        2304,
                                        2305,
                                        2306,
                                        2307,
                                        2362,
                                        2363,
                                        2364,
                                        2364,
                                        2366,
                                        2367,
                                        2368,
                                        2369,
                                        2370,
                                        2371,
                                        2372,
                                        2373,
                                        2374,
                                        2375,
                                        2376,
                                        2377,
                                        2378,
                                        2379,
                                        2380,
                                        2381,
                                        2382,
                                        2383,
                                        2387,
                                        2388,
                                        2389,
                                        2390,
                                        2391,
                                        2402,
                                        2403,
                                    ]);
                                    var r = ["d83cdffb", "d83cdffc", "d83cdffd", "d83cdffe", "d83cdfff"],
                                        i = [65039, 8205];
                                    function n(t, e) {
                                        var r = createTag("span");
                                        r.setAttribute("aria-hidden", !0), (r.style.fontFamily = e);
                                        var i = createTag("span");
                                        (i.innerText = "giItT1WQy@!-/#"),
                                            (r.style.position = "absolute"),
                                            (r.style.left = "-10000px"),
                                            (r.style.top = "-10000px"),
                                            (r.style.fontSize = "300px"),
                                            (r.style.fontVariant = "normal"),
                                            (r.style.fontStyle = "normal"),
                                            (r.style.fontWeight = "normal"),
                                            (r.style.letterSpacing = "0"),
                                            r.appendChild(i),
                                            document.body.appendChild(r);
                                        var n = i.offsetWidth;
                                        return (
                                            (i.style.fontFamily =
                                                (function (t) {
                                                    var e,
                                                        r = t.split(","),
                                                        i = r.length,
                                                        n = [];
                                                    for (e = 0; e < i; e += 1) "sans-serif" !== r[e] && "monospace" !== r[e] && n.push(r[e]);
                                                    return n.join(",");
                                                })(t) +
                                                ", " +
                                                e),
                                            { node: i, w: n, parent: r }
                                        );
                                    }
                                    function s(t, e) {
                                        var r,
                                            i = document.body && e ? "svg" : "canvas",
                                            n = getFontProperties(t);
                                        if ("svg" === i) {
                                            var s = createNS("text");
                                            (s.style.fontSize = "100px"),
                                                s.setAttribute("font-family", t.fFamily),
                                                s.setAttribute("font-style", n.style),
                                                s.setAttribute("font-weight", n.weight),
                                                (s.textContent = "1"),
                                                t.fClass ? ((s.style.fontFamily = "inherit"), s.setAttribute("class", t.fClass)) : (s.style.fontFamily = t.fFamily),
                                                e.appendChild(s),
                                                (r = s);
                                        } else {
                                            var a = new OffscreenCanvas(500, 500).getContext("2d");
                                            (a.font = n.style + " " + n.weight + " 100px " + t.fFamily), (r = a);
                                        }
                                        return {
                                            measureText: function (t) {
                                                return "svg" === i ? ((r.textContent = t), r.getComputedTextLength()) : r.measureText(t).width;
                                            },
                                        };
                                    }
                                    var a = function () {
                                        (this.fonts = []),
                                            (this.chars = null),
                                            (this.typekitLoaded = 0),
                                            (this.isLoaded = !1),
                                            (this._warned = !1),
                                            (this.initTime = Date.now()),
                                            (this.setIsLoadedBinded = this.setIsLoaded.bind(this)),
                                            (this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this));
                                    };
                                    return (
                                        (a.isModifier = function (t, e) {
                                            var i = t.toString(16) + e.toString(16);
                                            return -1 !== r.indexOf(i);
                                        }),
                                        (a.isZeroWidthJoiner = function (t, e) {
                                            return e ? t === i[0] && e === i[1] : t === i[1];
                                        }),
                                        (a.isCombinedCharacter = function (t) {
                                            return -1 !== e.indexOf(t);
                                        }),
                                        (a.prototype = {
                                            addChars: function (t) {
                                                if (t) {
                                                    var e;
                                                    this.chars || (this.chars = []);
                                                    var r,
                                                        i,
                                                        n = t.length,
                                                        s = this.chars.length;
                                                    for (e = 0; e < n; e += 1) {
                                                        for (r = 0, i = !1; r < s; ) this.chars[r].style === t[e].style && this.chars[r].fFamily === t[e].fFamily && this.chars[r].ch === t[e].ch && (i = !0), (r += 1);
                                                        i || (this.chars.push(t[e]), (s += 1));
                                                    }
                                                }
                                            },
                                            addFonts: function (t, e) {
                                                if (t) {
                                                    if (this.chars) return (this.isLoaded = !0), void (this.fonts = t.list);
                                                    if (!document.body)
                                                        return (
                                                            (this.isLoaded = !0),
                                                            t.list.forEach(function (t) {
                                                                (t.helper = s(t)), (t.cache = {});
                                                            }),
                                                            void (this.fonts = t.list)
                                                        );
                                                    var r,
                                                        i = t.list,
                                                        a = i.length,
                                                        o = a;
                                                    for (r = 0; r < a; r += 1) {
                                                        var l,
                                                            h,
                                                            c = !0;
                                                        if (((i[r].loaded = !1), (i[r].monoCase = n(i[r].fFamily, "monospace")), (i[r].sansCase = n(i[r].fFamily, "sans-serif")), i[r].fPath)) {
                                                            if ("p" === i[r].fOrigin || 3 === i[r].origin) {
                                                                if (
                                                                    ((l = document.querySelectorAll('style[f-forigin="p"][f-family="' + i[r].fFamily + '"], style[f-origin="3"][f-family="' + i[r].fFamily + '"]')).length > 0 && (c = !1), c)
                                                                ) {
                                                                    var p = createTag("style");
                                                                    p.setAttribute("f-forigin", i[r].fOrigin),
                                                                        p.setAttribute("f-origin", i[r].origin),
                                                                        p.setAttribute("f-family", i[r].fFamily),
                                                                        (p.type = "text/css"),
                                                                        (p.innerText = "@font-face {font-family: " + i[r].fFamily + "; font-style: normal; src: url('" + i[r].fPath + "');}"),
                                                                        e.appendChild(p);
                                                                }
                                                            } else if ("g" === i[r].fOrigin || 1 === i[r].origin) {
                                                                for (l = document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]'), h = 0; h < l.length; h += 1) -1 !== l[h].href.indexOf(i[r].fPath) && (c = !1);
                                                                if (c) {
                                                                    var d = createTag("link");
                                                                    d.setAttribute("f-forigin", i[r].fOrigin),
                                                                        d.setAttribute("f-origin", i[r].origin),
                                                                        (d.type = "text/css"),
                                                                        (d.rel = "stylesheet"),
                                                                        (d.href = i[r].fPath),
                                                                        document.body.appendChild(d);
                                                                }
                                                            } else if ("t" === i[r].fOrigin || 2 === i[r].origin) {
                                                                for (l = document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]'), h = 0; h < l.length; h += 1) i[r].fPath === l[h].src && (c = !1);
                                                                if (c) {
                                                                    var u = createTag("link");
                                                                    u.setAttribute("f-forigin", i[r].fOrigin),
                                                                        u.setAttribute("f-origin", i[r].origin),
                                                                        u.setAttribute("rel", "stylesheet"),
                                                                        u.setAttribute("href", i[r].fPath),
                                                                        e.appendChild(u);
                                                                }
                                                            }
                                                        } else (i[r].loaded = !0), (o -= 1);
                                                        (i[r].helper = s(i[r], e)), (i[r].cache = {}), this.fonts.push(i[r]);
                                                    }
                                                    0 === o ? (this.isLoaded = !0) : setTimeout(this.checkLoadedFonts.bind(this), 100);
                                                } else this.isLoaded = !0;
                                            },
                                            getCharData: function (e, r, i) {
                                                for (var n = 0, s = this.chars.length; n < s; ) {
                                                    if (this.chars[n].ch === e && this.chars[n].style === r && this.chars[n].fFamily === i) return this.chars[n];
                                                    n += 1;
                                                }
                                                return (
                                                    (("string" == typeof e && 13 !== e.charCodeAt(0)) || !e) &&
                                                        console &&
                                                        console.warn &&
                                                        !this._warned &&
                                                        ((this._warned = !0), console.warn("Missing character from exported characters list: ", e, r, i)),
                                                    t
                                                );
                                            },
                                            getFontByName: function (t) {
                                                for (var e = 0, r = this.fonts.length; e < r; ) {
                                                    if (this.fonts[e].fName === t) return this.fonts[e];
                                                    e += 1;
                                                }
                                                return this.fonts[0];
                                            },
                                            measureText: function (t, e, r) {
                                                var i = this.getFontByName(e),
                                                    n = t.charCodeAt(0);
                                                if (!i.cache[n + 1]) {
                                                    var s = i.helper;
                                                    if (" " === t) {
                                                        var a = s.measureText("|" + t + "|"),
                                                            o = s.measureText("||");
                                                        i.cache[n + 1] = (a - o) / 100;
                                                    } else i.cache[n + 1] = s.measureText(t) / 100;
                                                }
                                                return i.cache[n + 1] * r;
                                            },
                                            checkLoadedFonts: function () {
                                                var t,
                                                    e,
                                                    r,
                                                    i = this.fonts.length,
                                                    n = i;
                                                for (t = 0; t < i; t += 1)
                                                    this.fonts[t].loaded
                                                        ? (n -= 1)
                                                        : "n" === this.fonts[t].fOrigin || 0 === this.fonts[t].origin
                                                        ? (this.fonts[t].loaded = !0)
                                                        : ((e = this.fonts[t].monoCase.node),
                                                          (r = this.fonts[t].monoCase.w),
                                                          e.offsetWidth !== r
                                                              ? ((n -= 1), (this.fonts[t].loaded = !0))
                                                              : ((e = this.fonts[t].sansCase.node), (r = this.fonts[t].sansCase.w), e.offsetWidth !== r && ((n -= 1), (this.fonts[t].loaded = !0))),
                                                          this.fonts[t].loaded &&
                                                              (this.fonts[t].sansCase.parent.parentNode.removeChild(this.fonts[t].sansCase.parent), this.fonts[t].monoCase.parent.parentNode.removeChild(this.fonts[t].monoCase.parent)));
                                                0 !== n && Date.now() - this.initTime < 5e3 ? setTimeout(this.checkLoadedFontsBinded, 20) : setTimeout(this.setIsLoadedBinded, 10);
                                            },
                                            setIsLoaded: function () {
                                                this.isLoaded = !0;
                                            },
                                        }),
                                        a
                                    );
                                })();
                                function RenderableElement() {}
                                RenderableElement.prototype = {
                                    initRenderable: function () {
                                        (this.isInRange = !1), (this.hidden = !1), (this.isTransparent = !1), (this.renderableComponents = []);
                                    },
                                    addRenderableComponent: function (t) {
                                        -1 === this.renderableComponents.indexOf(t) && this.renderableComponents.push(t);
                                    },
                                    removeRenderableComponent: function (t) {
                                        -1 !== this.renderableComponents.indexOf(t) && this.renderableComponents.splice(this.renderableComponents.indexOf(t), 1);
                                    },
                                    prepareRenderableFrame: function (t) {
                                        this.checkLayerLimits(t);
                                    },
                                    checkTransparency: function () {
                                        this.finalTransform.mProp.o.v <= 0
                                            ? !this.isTransparent && this.globalData.renderConfig.hideOnTransparent && ((this.isTransparent = !0), this.hide())
                                            : this.isTransparent && ((this.isTransparent = !1), this.show());
                                    },
                                    checkLayerLimits: function (t) {
                                        this.data.ip - this.data.st <= t && this.data.op - this.data.st > t
                                            ? !0 !== this.isInRange && ((this.globalData._mdf = !0), (this._mdf = !0), (this.isInRange = !0), this.show())
                                            : !1 !== this.isInRange && ((this.globalData._mdf = !0), (this.isInRange = !1), this.hide());
                                    },
                                    renderRenderable: function () {
                                        var t,
                                            e = this.renderableComponents.length;
                                        for (t = 0; t < e; t += 1) this.renderableComponents[t].renderFrame(this._isFirstFrame);
                                    },
                                    sourceRectAtTime: function () {
                                        return { top: 0, left: 0, width: 100, height: 100 };
                                    },
                                    getLayerSize: function () {
                                        return 5 === this.data.ty ? { w: this.data.textData.width, h: this.data.textData.height } : { w: this.data.width, h: this.data.height };
                                    },
                                };
                                var getBlendMode =
                                        ((blendModeEnums = {
                                            0: "source-over",
                                            1: "multiply",
                                            2: "screen",
                                            3: "overlay",
                                            4: "darken",
                                            5: "lighten",
                                            6: "color-dodge",
                                            7: "color-burn",
                                            8: "hard-light",
                                            9: "soft-light",
                                            10: "difference",
                                            11: "exclusion",
                                            12: "hue",
                                            13: "saturation",
                                            14: "color",
                                            15: "luminosity",
                                        }),
                                        function (t) {
                                            return blendModeEnums[t] || "";
                                        }),
                                    blendModeEnums;
                                function SliderEffect(t, e, r) {
                                    this.p = PropertyFactory.getProp(e, t.v, 0, 0, r);
                                }
                                function AngleEffect(t, e, r) {
                                    this.p = PropertyFactory.getProp(e, t.v, 0, 0, r);
                                }
                                function ColorEffect(t, e, r) {
                                    this.p = PropertyFactory.getProp(e, t.v, 1, 0, r);
                                }
                                function PointEffect(t, e, r) {
                                    this.p = PropertyFactory.getProp(e, t.v, 1, 0, r);
                                }
                                function LayerIndexEffect(t, e, r) {
                                    this.p = PropertyFactory.getProp(e, t.v, 0, 0, r);
                                }
                                function MaskIndexEffect(t, e, r) {
                                    this.p = PropertyFactory.getProp(e, t.v, 0, 0, r);
                                }
                                function CheckboxEffect(t, e, r) {
                                    this.p = PropertyFactory.getProp(e, t.v, 0, 0, r);
                                }
                                function NoValueEffect() {
                                    this.p = {};
                                }
                                function EffectsManager(t, e) {
                                    var r,
                                        i = t.ef || [];
                                    this.effectElements = [];
                                    var n,
                                        s = i.length;
                                    for (r = 0; r < s; r += 1) (n = new GroupEffect(i[r], e)), this.effectElements.push(n);
                                }
                                function GroupEffect(t, e) {
                                    this.init(t, e);
                                }
                                function BaseElement() {}
                                function FrameElement() {}
                                function FootageElement(t, e, r) {
                                    this.initFrame(), this.initRenderable(), (this.assetData = e.getAssetData(t.refId)), (this.footageData = e.imageLoader.getAsset(this.assetData)), this.initBaseData(t, e, r);
                                }
                                function AudioElement(t, e, r) {
                                    this.initFrame(), this.initRenderable(), (this.assetData = e.getAssetData(t.refId)), this.initBaseData(t, e, r), (this._isPlaying = !1), (this._canPlay = !1);
                                    var i = this.globalData.getAssetsPath(this.assetData);
                                    (this.audio = this.globalData.audioController.createAudio(i)),
                                        (this._currentTime = 0),
                                        this.globalData.audioController.addAudio(this),
                                        (this._volumeMultiplier = 1),
                                        (this._volume = 1),
                                        (this._previousVolume = null),
                                        (this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : { _placeholder: !0 }),
                                        (this.lv = PropertyFactory.getProp(this, t.au && t.au.lv ? t.au.lv : { k: [100] }, 1, 0.01, this));
                                }
                                function BaseRenderer() {}
                                function TransformElement() {}
                                function MaskElement(t, e, r) {
                                    (this.data = t), (this.element = e), (this.globalData = r), (this.storedData = []), (this.masksProperties = this.data.masksProperties || []), (this.maskElement = null);
                                    var i,
                                        n,
                                        s = this.globalData.defs,
                                        a = this.masksProperties ? this.masksProperties.length : 0;
                                    (this.viewData = createSizedArray(a)), (this.solidPath = "");
                                    var o,
                                        l,
                                        h,
                                        c,
                                        p,
                                        d,
                                        u = this.masksProperties,
                                        f = 0,
                                        m = [],
                                        y = createElementID(),
                                        g = "clipPath",
                                        v = "clip-path";
                                    for (i = 0; i < a; i += 1)
                                        if (
                                            ((("a" !== u[i].mode && "n" !== u[i].mode) || u[i].inv || 100 !== u[i].o.k || u[i].o.x) && ((g = "mask"), (v = "mask")),
                                            ("s" !== u[i].mode && "i" !== u[i].mode) || 0 !== f
                                                ? (h = null)
                                                : ((h = createNS("rect")).setAttribute("fill", "#ffffff"), h.setAttribute("width", this.element.comp.data.w || 0), h.setAttribute("height", this.element.comp.data.h || 0), m.push(h)),
                                            (n = createNS("path")),
                                            "n" === u[i].mode)
                                        )
                                            (this.viewData[i] = { op: PropertyFactory.getProp(this.element, u[i].o, 0, 0.01, this.element), prop: ShapePropertyFactory.getShapeProp(this.element, u[i], 3), elem: n, lastPath: "" }),
                                                s.appendChild(n);
                                        else {
                                            var b;
                                            if (
                                                ((f += 1),
                                                n.setAttribute("fill", "s" === u[i].mode ? "#000000" : "#ffffff"),
                                                n.setAttribute("clip-rule", "nonzero"),
                                                0 !== u[i].x.k
                                                    ? ((g = "mask"),
                                                      (v = "mask"),
                                                      (d = PropertyFactory.getProp(this.element, u[i].x, 0, null, this.element)),
                                                      (b = createElementID()),
                                                      (c = createNS("filter")).setAttribute("id", b),
                                                      (p = createNS("feMorphology")).setAttribute("operator", "erode"),
                                                      p.setAttribute("in", "SourceGraphic"),
                                                      p.setAttribute("radius", "0"),
                                                      c.appendChild(p),
                                                      s.appendChild(c),
                                                      n.setAttribute("stroke", "s" === u[i].mode ? "#000000" : "#ffffff"))
                                                    : ((p = null), (d = null)),
                                                (this.storedData[i] = { elem: n, x: d, expan: p, lastPath: "", lastOperator: "", filterId: b, lastRadius: 0 }),
                                                "i" === u[i].mode)
                                            ) {
                                                l = m.length;
                                                var _ = createNS("g");
                                                for (o = 0; o < l; o += 1) _.appendChild(m[o]);
                                                var w = createNS("mask");
                                                w.setAttribute("mask-type", "alpha"),
                                                    w.setAttribute("id", y + "_" + f),
                                                    w.appendChild(n),
                                                    s.appendChild(w),
                                                    _.setAttribute("mask", "url(" + getLocationHref() + "#" + y + "_" + f + ")"),
                                                    (m.length = 0),
                                                    m.push(_);
                                            } else m.push(n);
                                            u[i].inv && !this.solidPath && (this.solidPath = this.createLayerSolidPath()),
                                                (this.viewData[i] = {
                                                    elem: n,
                                                    lastPath: "",
                                                    op: PropertyFactory.getProp(this.element, u[i].o, 0, 0.01, this.element),
                                                    prop: ShapePropertyFactory.getShapeProp(this.element, u[i], 3),
                                                    invRect: h,
                                                }),
                                                this.viewData[i].prop.k || this.drawPath(u[i], this.viewData[i].prop.v, this.viewData[i]);
                                        }
                                    for (this.maskElement = createNS(g), a = m.length, i = 0; i < a; i += 1) this.maskElement.appendChild(m[i]);
                                    f > 0 && (this.maskElement.setAttribute("id", y), this.element.maskedElement.setAttribute(v, "url(" + getLocationHref() + "#" + y + ")"), s.appendChild(this.maskElement)),
                                        this.viewData.length && this.element.addRenderableComponent(this);
                                }
                                extendPrototype([DynamicPropertyContainer], GroupEffect),
                                    (GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties),
                                    (GroupEffect.prototype.init = function (t, e) {
                                        var r;
                                        (this.data = t), (this.effectElements = []), this.initDynamicPropertyContainer(e);
                                        var i,
                                            n = this.data.ef.length,
                                            s = this.data.ef;
                                        for (r = 0; r < n; r += 1) {
                                            switch (((i = null), s[r].ty)) {
                                                case 0:
                                                    i = new SliderEffect(s[r], e, this);
                                                    break;
                                                case 1:
                                                    i = new AngleEffect(s[r], e, this);
                                                    break;
                                                case 2:
                                                    i = new ColorEffect(s[r], e, this);
                                                    break;
                                                case 3:
                                                    i = new PointEffect(s[r], e, this);
                                                    break;
                                                case 4:
                                                case 7:
                                                    i = new CheckboxEffect(s[r], e, this);
                                                    break;
                                                case 10:
                                                    i = new LayerIndexEffect(s[r], e, this);
                                                    break;
                                                case 11:
                                                    i = new MaskIndexEffect(s[r], e, this);
                                                    break;
                                                case 5:
                                                    i = new EffectsManager(s[r], e, this);
                                                    break;
                                                default:
                                                    i = new NoValueEffect(s[r], e, this);
                                            }
                                            i && this.effectElements.push(i);
                                        }
                                    }),
                                    (BaseElement.prototype = {
                                        checkMasks: function () {
                                            if (!this.data.hasMask) return !1;
                                            for (var t = 0, e = this.data.masksProperties.length; t < e; ) {
                                                if ("n" !== this.data.masksProperties[t].mode && !1 !== this.data.masksProperties[t].cl) return !0;
                                                t += 1;
                                            }
                                            return !1;
                                        },
                                        initExpressions: function () {
                                            var t = getExpressionInterfaces();
                                            if (t) {
                                                var e = t("layer"),
                                                    r = t("effects"),
                                                    i = t("shape"),
                                                    n = t("text"),
                                                    s = t("comp");
                                                (this.layerInterface = e(this)), this.data.hasMask && this.maskManager && this.layerInterface.registerMaskInterface(this.maskManager);
                                                var a = r.createEffectsInterface(this, this.layerInterface);
                                                this.layerInterface.registerEffectsInterface(a),
                                                    0 === this.data.ty || this.data.xt
                                                        ? (this.compInterface = s(this))
                                                        : 4 === this.data.ty
                                                        ? ((this.layerInterface.shapeInterface = i(this.shapesData, this.itemsData, this.layerInterface)), (this.layerInterface.content = this.layerInterface.shapeInterface))
                                                        : 5 === this.data.ty && ((this.layerInterface.textInterface = n(this)), (this.layerInterface.text = this.layerInterface.textInterface));
                                            }
                                        },
                                        setBlendMode: function () {
                                            var t = getBlendMode(this.data.bm);
                                            (this.baseElement || this.layerElement).style["mix-blend-mode"] = t;
                                        },
                                        initBaseData: function (t, e, r) {
                                            (this.globalData = e),
                                                (this.comp = r),
                                                (this.data = t),
                                                (this.layerId = createElementID()),
                                                this.data.sr || (this.data.sr = 1),
                                                (this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties));
                                        },
                                        getType: function () {
                                            return this.type;
                                        },
                                        sourceRectAtTime: function () {},
                                    }),
                                    (FrameElement.prototype = {
                                        initFrame: function () {
                                            (this._isFirstFrame = !1), (this.dynamicProperties = []), (this._mdf = !1);
                                        },
                                        prepareProperties: function (t, e) {
                                            var r,
                                                i = this.dynamicProperties.length;
                                            for (r = 0; r < i; r += 1)
                                                (e || (this._isParent && "transform" === this.dynamicProperties[r].propType)) &&
                                                    (this.dynamicProperties[r].getValue(), this.dynamicProperties[r]._mdf && ((this.globalData._mdf = !0), (this._mdf = !0)));
                                        },
                                        addDynamicProperty: function (t) {
                                            -1 === this.dynamicProperties.indexOf(t) && this.dynamicProperties.push(t);
                                        },
                                    }),
                                    (FootageElement.prototype.prepareFrame = function () {}),
                                    extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement),
                                    (FootageElement.prototype.getBaseElement = function () {
                                        return null;
                                    }),
                                    (FootageElement.prototype.renderFrame = function () {}),
                                    (FootageElement.prototype.destroy = function () {}),
                                    (FootageElement.prototype.initExpressions = function () {
                                        var t = getExpressionInterfaces();
                                        if (t) {
                                            var e = t("footage");
                                            this.layerInterface = e(this);
                                        }
                                    }),
                                    (FootageElement.prototype.getFootageData = function () {
                                        return this.footageData;
                                    }),
                                    (AudioElement.prototype.prepareFrame = function (t) {
                                        if ((this.prepareRenderableFrame(t, !0), this.prepareProperties(t, !0), this.tm._placeholder)) this._currentTime = t / this.data.sr;
                                        else {
                                            var e = this.tm.v;
                                            this._currentTime = e;
                                        }
                                        this._volume = this.lv.v[0];
                                        var r = this._volume * this._volumeMultiplier;
                                        this._previousVolume !== r && ((this._previousVolume = r), this.audio.volume(r));
                                    }),
                                    extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement),
                                    (AudioElement.prototype.renderFrame = function () {
                                        this.isInRange &&
                                            this._canPlay &&
                                            (this._isPlaying
                                                ? (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1) && this.audio.seek(this._currentTime / this.globalData.frameRate)
                                                : (this.audio.play(), this.audio.seek(this._currentTime / this.globalData.frameRate), (this._isPlaying = !0)));
                                    }),
                                    (AudioElement.prototype.show = function () {}),
                                    (AudioElement.prototype.hide = function () {
                                        this.audio.pause(), (this._isPlaying = !1);
                                    }),
                                    (AudioElement.prototype.pause = function () {
                                        this.audio.pause(), (this._isPlaying = !1), (this._canPlay = !1);
                                    }),
                                    (AudioElement.prototype.resume = function () {
                                        this._canPlay = !0;
                                    }),
                                    (AudioElement.prototype.setRate = function (t) {
                                        this.audio.rate(t);
                                    }),
                                    (AudioElement.prototype.volume = function (t) {
                                        (this._volumeMultiplier = t), (this._previousVolume = t * this._volume), this.audio.volume(this._previousVolume);
                                    }),
                                    (AudioElement.prototype.getBaseElement = function () {
                                        return null;
                                    }),
                                    (AudioElement.prototype.destroy = function () {}),
                                    (AudioElement.prototype.sourceRectAtTime = function () {}),
                                    (AudioElement.prototype.initExpressions = function () {}),
                                    (BaseRenderer.prototype.checkLayers = function (t) {
                                        var e,
                                            r,
                                            i = this.layers.length;
                                        for (this.completeLayers = !0, e = i - 1; e >= 0; e -= 1)
                                            this.elements[e] || ((r = this.layers[e]).ip - r.st <= t - this.layers[e].st && r.op - r.st > t - this.layers[e].st && this.buildItem(e)),
                                                (this.completeLayers = !!this.elements[e] && this.completeLayers);
                                        this.checkPendingElements();
                                    }),
                                    (BaseRenderer.prototype.createItem = function (t) {
                                        switch (t.ty) {
                                            case 2:
                                                return this.createImage(t);
                                            case 0:
                                                return this.createComp(t);
                                            case 1:
                                                return this.createSolid(t);
                                            case 3:
                                            default:
                                                return this.createNull(t);
                                            case 4:
                                                return this.createShape(t);
                                            case 5:
                                                return this.createText(t);
                                            case 6:
                                                return this.createAudio(t);
                                            case 13:
                                                return this.createCamera(t);
                                            case 15:
                                                return this.createFootage(t);
                                        }
                                    }),
                                    (BaseRenderer.prototype.createCamera = function () {
                                        throw new Error("You're using a 3d camera. Try the html renderer.");
                                    }),
                                    (BaseRenderer.prototype.createAudio = function (t) {
                                        return new AudioElement(t, this.globalData, this);
                                    }),
                                    (BaseRenderer.prototype.createFootage = function (t) {
                                        return new FootageElement(t, this.globalData, this);
                                    }),
                                    (BaseRenderer.prototype.buildAllItems = function () {
                                        var t,
                                            e = this.layers.length;
                                        for (t = 0; t < e; t += 1) this.buildItem(t);
                                        this.checkPendingElements();
                                    }),
                                    (BaseRenderer.prototype.includeLayers = function (t) {
                                        var e;
                                        this.completeLayers = !1;
                                        var r,
                                            i = t.length,
                                            n = this.layers.length;
                                        for (e = 0; e < i; e += 1)
                                            for (r = 0; r < n; ) {
                                                if (this.layers[r].id === t[e].id) {
                                                    this.layers[r] = t[e];
                                                    break;
                                                }
                                                r += 1;
                                            }
                                    }),
                                    (BaseRenderer.prototype.setProjectInterface = function (t) {
                                        this.globalData.projectInterface = t;
                                    }),
                                    (BaseRenderer.prototype.initItems = function () {
                                        this.globalData.progressiveLoad || this.buildAllItems();
                                    }),
                                    (BaseRenderer.prototype.buildElementParenting = function (t, e, r) {
                                        for (var i = this.elements, n = this.layers, s = 0, a = n.length; s < a; )
                                            n[s].ind == e &&
                                                (i[s] && !0 !== i[s]
                                                    ? (r.push(i[s]), i[s].setAsParent(), void 0 !== n[s].parent ? this.buildElementParenting(t, n[s].parent, r) : t.setHierarchy(r))
                                                    : (this.buildItem(s), this.addPendingElement(t))),
                                                (s += 1);
                                    }),
                                    (BaseRenderer.prototype.addPendingElement = function (t) {
                                        this.pendingElements.push(t);
                                    }),
                                    (BaseRenderer.prototype.searchExtraCompositions = function (t) {
                                        var e,
                                            r = t.length;
                                        for (e = 0; e < r; e += 1)
                                            if (t[e].xt) {
                                                var i = this.createComp(t[e]);
                                                i.initExpressions(), this.globalData.projectInterface.registerComposition(i);
                                            }
                                    }),
                                    (BaseRenderer.prototype.getElementByPath = function (t) {
                                        var e,
                                            r = t.shift();
                                        if ("number" == typeof r) e = this.elements[r];
                                        else {
                                            var i,
                                                n = this.elements.length;
                                            for (i = 0; i < n; i += 1)
                                                if (this.elements[i].data.nm === r) {
                                                    e = this.elements[i];
                                                    break;
                                                }
                                        }
                                        return 0 === t.length ? e : e.getElementByPath(t);
                                    }),
                                    (BaseRenderer.prototype.setupGlobalData = function (t, e) {
                                        (this.globalData.fontManager = new FontManager()),
                                            this.globalData.fontManager.addChars(t.chars),
                                            this.globalData.fontManager.addFonts(t.fonts, e),
                                            (this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem)),
                                            (this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem)),
                                            (this.globalData.imageLoader = this.animationItem.imagePreloader),
                                            (this.globalData.audioController = this.animationItem.audioController),
                                            (this.globalData.frameId = 0),
                                            (this.globalData.frameRate = t.fr),
                                            (this.globalData.nm = t.nm),
                                            (this.globalData.compSize = { w: t.w, h: t.h });
                                    }),
                                    (TransformElement.prototype = {
                                        initTransform: function () {
                                            (this.finalTransform = { mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : { o: 0 }, _matMdf: !1, _opMdf: !1, mat: new Matrix() }),
                                                this.data.ao && (this.finalTransform.mProp.autoOriented = !0),
                                                this.data.ty;
                                        },
                                        renderTransform: function () {
                                            if (((this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame), (this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame), this.hierarchy)) {
                                                var t,
                                                    e = this.finalTransform.mat,
                                                    r = 0,
                                                    i = this.hierarchy.length;
                                                if (!this.finalTransform._matMdf)
                                                    for (; r < i; ) {
                                                        if (this.hierarchy[r].finalTransform.mProp._mdf) {
                                                            this.finalTransform._matMdf = !0;
                                                            break;
                                                        }
                                                        r += 1;
                                                    }
                                                if (this.finalTransform._matMdf)
                                                    for (t = this.finalTransform.mProp.v.props, e.cloneFromProps(t), r = 0; r < i; r += 1)
                                                        (t = this.hierarchy[r].finalTransform.mProp.v.props), e.transform(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15]);
                                            }
                                        },
                                        globalToLocal: function (t) {
                                            var e = [];
                                            e.push(this.finalTransform);
                                            for (var r, i = !0, n = this.comp; i; ) n.finalTransform ? (n.data.hasMask && e.splice(0, 0, n.finalTransform), (n = n.comp)) : (i = !1);
                                            var s,
                                                a = e.length;
                                            for (r = 0; r < a; r += 1) (s = e[r].mat.applyToPointArray(0, 0, 0)), (t = [t[0] - s[0], t[1] - s[1], 0]);
                                            return t;
                                        },
                                        mHelper: new Matrix(),
                                    }),
                                    (MaskElement.prototype.getMaskProperty = function (t) {
                                        return this.viewData[t].prop;
                                    }),
                                    (MaskElement.prototype.renderFrame = function (t) {
                                        var e,
                                            r = this.element.finalTransform.mat,
                                            i = this.masksProperties.length;
                                        for (e = 0; e < i; e += 1)
                                            if (
                                                ((this.viewData[e].prop._mdf || t) && this.drawPath(this.masksProperties[e], this.viewData[e].prop.v, this.viewData[e]),
                                                (this.viewData[e].op._mdf || t) && this.viewData[e].elem.setAttribute("fill-opacity", this.viewData[e].op.v),
                                                "n" !== this.masksProperties[e].mode &&
                                                    (this.viewData[e].invRect && (this.element.finalTransform.mProp._mdf || t) && this.viewData[e].invRect.setAttribute("transform", r.getInverseMatrix().to2dCSS()),
                                                    this.storedData[e].x && (this.storedData[e].x._mdf || t)))
                                            ) {
                                                var n = this.storedData[e].expan;
                                                this.storedData[e].x.v < 0
                                                    ? ("erode" !== this.storedData[e].lastOperator &&
                                                          ((this.storedData[e].lastOperator = "erode"), this.storedData[e].elem.setAttribute("filter", "url(" + getLocationHref() + "#" + this.storedData[e].filterId + ")")),
                                                      n.setAttribute("radius", -this.storedData[e].x.v))
                                                    : ("dilate" !== this.storedData[e].lastOperator && ((this.storedData[e].lastOperator = "dilate"), this.storedData[e].elem.setAttribute("filter", null)),
                                                      this.storedData[e].elem.setAttribute("stroke-width", 2 * this.storedData[e].x.v));
                                            }
                                    }),
                                    (MaskElement.prototype.getMaskelement = function () {
                                        return this.maskElement;
                                    }),
                                    (MaskElement.prototype.createLayerSolidPath = function () {
                                        var t = "M0,0 ";
                                        return (t += " h" + this.globalData.compSize.w), (t += " v" + this.globalData.compSize.h), (t += " h-" + this.globalData.compSize.w) + " v-" + this.globalData.compSize.h + " ";
                                    }),
                                    (MaskElement.prototype.drawPath = function (t, e, r) {
                                        var i,
                                            n,
                                            s = " M" + e.v[0][0] + "," + e.v[0][1];
                                        for (n = e._length, i = 1; i < n; i += 1) s += " C" + e.o[i - 1][0] + "," + e.o[i - 1][1] + " " + e.i[i][0] + "," + e.i[i][1] + " " + e.v[i][0] + "," + e.v[i][1];
                                        if ((e.c && n > 1 && (s += " C" + e.o[i - 1][0] + "," + e.o[i - 1][1] + " " + e.i[0][0] + "," + e.i[0][1] + " " + e.v[0][0] + "," + e.v[0][1]), r.lastPath !== s)) {
                                            var a = "";
                                            r.elem && (e.c && (a = t.inv ? this.solidPath + s : s), r.elem.setAttribute("d", a)), (r.lastPath = s);
                                        }
                                    }),
                                    (MaskElement.prototype.destroy = function () {
                                        (this.element = null), (this.globalData = null), (this.maskElement = null), (this.data = null), (this.masksProperties = null);
                                    });
                                var filtersFactory = (function () {
                                        var t = {
                                            createFilter: function (t, e) {
                                                var r = createNS("filter");
                                                return (
                                                    r.setAttribute("id", t),
                                                    !0 !== e && (r.setAttribute("filterUnits", "objectBoundingBox"), r.setAttribute("x", "0%"), r.setAttribute("y", "0%"), r.setAttribute("width", "100%"), r.setAttribute("height", "100%")),
                                                    r
                                                );
                                            },
                                            createAlphaToLuminanceFilter: function () {
                                                var t = createNS("feColorMatrix");
                                                return t.setAttribute("type", "matrix"), t.setAttribute("color-interpolation-filters", "sRGB"), t.setAttribute("values", "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1"), t;
                                            },
                                        };
                                        return t;
                                    })(),
                                    featureSupport = (function () {
                                        var t = { maskType: !0 };
                                        return (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent)) && (t.maskType = !1), t;
                                    })(),
                                    registeredEffects = {},
                                    idPrefix = "filter_result_";
                                function SVGEffects(t) {
                                    var e,
                                        r,
                                        i = "SourceGraphic",
                                        n = t.data.ef ? t.data.ef.length : 0,
                                        s = createElementID(),
                                        a = filtersFactory.createFilter(s, !0),
                                        o = 0;
                                    for (this.filters = [], e = 0; e < n; e += 1) {
                                        r = null;
                                        var l = t.data.ef[e].ty;
                                        registeredEffects[l] && ((r = new (0, registeredEffects[l].effect)(a, t.effectsManager.effectElements[e], t, idPrefix + o, i)), (i = idPrefix + o), registeredEffects[l].countsAsEffect && (o += 1)),
                                            r && this.filters.push(r);
                                    }
                                    o && (t.globalData.defs.appendChild(a), t.layerElement.setAttribute("filter", "url(" + getLocationHref() + "#" + s + ")")), this.filters.length && t.addRenderableComponent(this);
                                }
                                function registerEffect(t, e, r) {
                                    registeredEffects[t] = { effect: e, countsAsEffect: r };
                                }
                                function SVGBaseElement() {}
                                function HierarchyElement() {}
                                function RenderableDOMElement() {}
                                function IImageElement(t, e, r) {
                                    (this.assetData = e.getAssetData(t.refId)), this.initElement(t, e, r), (this.sourceRect = { top: 0, left: 0, width: this.assetData.w, height: this.assetData.h });
                                }
                                function ProcessedElement(t, e) {
                                    (this.elem = t), (this.pos = e);
                                }
                                function IShapeElement() {}
                                (SVGEffects.prototype.renderFrame = function (t) {
                                    var e,
                                        r = this.filters.length;
                                    for (e = 0; e < r; e += 1) this.filters[e].renderFrame(t);
                                }),
                                    (SVGBaseElement.prototype = {
                                        initRendererElement: function () {
                                            this.layerElement = createNS("g");
                                        },
                                        createContainerElements: function () {
                                            (this.matteElement = createNS("g")), (this.transformedElement = this.layerElement), (this.maskedElement = this.layerElement), (this._sizeChanged = !1);
                                            var t = null;
                                            if (this.data.td) {
                                                this.matteMasks = {};
                                                var e = createNS("symbol");
                                                e.setAttribute("id", this.layerId);
                                                var r = createNS("g");
                                                r.appendChild(this.layerElement), e.appendChild(r), (t = r), this.globalData.defs.appendChild(e);
                                            } else this.data.tt ? (this.matteElement.appendChild(this.layerElement), (t = this.matteElement), (this.baseElement = this.matteElement)) : (this.baseElement = this.layerElement);
                                            if ((this.data.ln && this.layerElement.setAttribute("id", this.data.ln), this.data.cl && this.layerElement.setAttribute("class", this.data.cl), 0 === this.data.ty && !this.data.hd)) {
                                                var i = createNS("clipPath"),
                                                    n = createNS("path");
                                                n.setAttribute("d", "M0,0 L" + this.data.w + ",0 L" + this.data.w + "," + this.data.h + " L0," + this.data.h + "z");
                                                var s = createElementID();
                                                if ((i.setAttribute("id", s), i.appendChild(n), this.globalData.defs.appendChild(i), this.checkMasks())) {
                                                    var a = createNS("g");
                                                    a.setAttribute("clip-path", "url(" + getLocationHref() + "#" + s + ")"),
                                                        a.appendChild(this.layerElement),
                                                        (this.transformedElement = a),
                                                        t ? t.appendChild(this.transformedElement) : (this.baseElement = this.transformedElement);
                                                } else this.layerElement.setAttribute("clip-path", "url(" + getLocationHref() + "#" + s + ")");
                                            }
                                            0 !== this.data.bm && this.setBlendMode();
                                        },
                                        renderElement: function () {
                                            this.finalTransform._matMdf && this.transformedElement.setAttribute("transform", this.finalTransform.mat.to2dCSS()),
                                                this.finalTransform._opMdf && this.transformedElement.setAttribute("opacity", this.finalTransform.mProp.o.v);
                                        },
                                        destroyBaseElement: function () {
                                            (this.layerElement = null), (this.matteElement = null), this.maskManager.destroy();
                                        },
                                        getBaseElement: function () {
                                            return this.data.hd ? null : this.baseElement;
                                        },
                                        createRenderableComponents: function () {
                                            (this.maskManager = new MaskElement(this.data, this, this.globalData)), (this.renderableEffectsManager = new SVGEffects(this));
                                        },
                                        getMatte: function (t) {
                                            if (!this.matteMasks[t]) {
                                                var e,
                                                    r,
                                                    i,
                                                    n,
                                                    s = this.layerId + "_" + t;
                                                if (1 === t || 3 === t) {
                                                    var a = createNS("mask");
                                                    a.setAttribute("id", s),
                                                        a.setAttribute("mask-type", 3 === t ? "luminance" : "alpha"),
                                                        (i = createNS("use")).setAttributeNS("http://www.w3.org/1999/xlink", "href", "#" + this.layerId),
                                                        a.appendChild(i),
                                                        this.globalData.defs.appendChild(a),
                                                        featureSupport.maskType ||
                                                            1 !== t ||
                                                            (a.setAttribute("mask-type", "luminance"),
                                                            (e = createElementID()),
                                                            (r = filtersFactory.createFilter(e)),
                                                            this.globalData.defs.appendChild(r),
                                                            r.appendChild(filtersFactory.createAlphaToLuminanceFilter()),
                                                            (n = createNS("g")).appendChild(i),
                                                            a.appendChild(n),
                                                            n.setAttribute("filter", "url(" + getLocationHref() + "#" + e + ")"));
                                                } else if (2 === t) {
                                                    var o = createNS("mask");
                                                    o.setAttribute("id", s), o.setAttribute("mask-type", "alpha");
                                                    var l = createNS("g");
                                                    o.appendChild(l), (e = createElementID()), (r = filtersFactory.createFilter(e));
                                                    var h = createNS("feComponentTransfer");
                                                    h.setAttribute("in", "SourceGraphic"), r.appendChild(h);
                                                    var c = createNS("feFuncA");
                                                    c.setAttribute("type", "table"), c.setAttribute("tableValues", "1.0 0.0"), h.appendChild(c), this.globalData.defs.appendChild(r);
                                                    var p = createNS("rect");
                                                    p.setAttribute("width", this.comp.data.w),
                                                        p.setAttribute("height", this.comp.data.h),
                                                        p.setAttribute("x", "0"),
                                                        p.setAttribute("y", "0"),
                                                        p.setAttribute("fill", "#ffffff"),
                                                        p.setAttribute("opacity", "0"),
                                                        l.setAttribute("filter", "url(" + getLocationHref() + "#" + e + ")"),
                                                        l.appendChild(p),
                                                        (i = createNS("use")).setAttributeNS("http://www.w3.org/1999/xlink", "href", "#" + this.layerId),
                                                        l.appendChild(i),
                                                        featureSupport.maskType ||
                                                            (o.setAttribute("mask-type", "luminance"),
                                                            r.appendChild(filtersFactory.createAlphaToLuminanceFilter()),
                                                            (n = createNS("g")),
                                                            l.appendChild(p),
                                                            n.appendChild(this.layerElement),
                                                            l.appendChild(n)),
                                                        this.globalData.defs.appendChild(o);
                                                }
                                                this.matteMasks[t] = s;
                                            }
                                            return this.matteMasks[t];
                                        },
                                        setMatte: function (t) {
                                            this.matteElement && this.matteElement.setAttribute("mask", "url(" + getLocationHref() + "#" + t + ")");
                                        },
                                    }),
                                    (HierarchyElement.prototype = {
                                        initHierarchy: function () {
                                            (this.hierarchy = []), (this._isParent = !1), this.checkParenting();
                                        },
                                        setHierarchy: function (t) {
                                            this.hierarchy = t;
                                        },
                                        setAsParent: function () {
                                            this._isParent = !0;
                                        },
                                        checkParenting: function () {
                                            void 0 !== this.data.parent && this.comp.buildElementParenting(this, this.data.parent, []);
                                        },
                                    }),
                                    extendPrototype(
                                        [
                                            RenderableElement,
                                            createProxyFunction({
                                                initElement: function (t, e, r) {
                                                    this.initFrame(),
                                                        this.initBaseData(t, e, r),
                                                        this.initTransform(t, e, r),
                                                        this.initHierarchy(),
                                                        this.initRenderable(),
                                                        this.initRendererElement(),
                                                        this.createContainerElements(),
                                                        this.createRenderableComponents(),
                                                        this.createContent(),
                                                        this.hide();
                                                },
                                                hide: function () {
                                                    this.hidden || (this.isInRange && !this.isTransparent) || (((this.baseElement || this.layerElement).style.display = "none"), (this.hidden = !0));
                                                },
                                                show: function () {
                                                    this.isInRange && !this.isTransparent && (this.data.hd || ((this.baseElement || this.layerElement).style.display = "block"), (this.hidden = !1), (this._isFirstFrame = !0));
                                                },
                                                renderFrame: function () {
                                                    this.data.hd || this.hidden || (this.renderTransform(), this.renderRenderable(), this.renderElement(), this.renderInnerContent(), this._isFirstFrame && (this._isFirstFrame = !1));
                                                },
                                                renderInnerContent: function () {},
                                                prepareFrame: function (t) {
                                                    (this._mdf = !1), this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), this.checkTransparency();
                                                },
                                                destroy: function () {
                                                    (this.innerElem = null), this.destroyBaseElement();
                                                },
                                            }),
                                        ],
                                        RenderableDOMElement
                                    ),
                                    extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement),
                                    (IImageElement.prototype.createContent = function () {
                                        var t = this.globalData.getAssetsPath(this.assetData);
                                        (this.innerElem = createNS("image")),
                                            this.innerElem.setAttribute("width", this.assetData.w + "px"),
                                            this.innerElem.setAttribute("height", this.assetData.h + "px"),
                                            this.innerElem.setAttribute("preserveAspectRatio", this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio),
                                            this.innerElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", t),
                                            this.layerElement.appendChild(this.innerElem);
                                    }),
                                    (IImageElement.prototype.sourceRectAtTime = function () {
                                        return this.sourceRect;
                                    }),
                                    (IShapeElement.prototype = {
                                        addShapeToModifiers: function (t) {
                                            var e,
                                                r = this.shapeModifiers.length;
                                            for (e = 0; e < r; e += 1) this.shapeModifiers[e].addShape(t);
                                        },
                                        isShapeInAnimatedModifiers: function (t) {
                                            for (var e = this.shapeModifiers.length; 0 < e; ) if (this.shapeModifiers[0].isAnimatedWithShape(t)) return !0;
                                            return !1;
                                        },
                                        renderModifiers: function () {
                                            if (this.shapeModifiers.length) {
                                                var t,
                                                    e = this.shapes.length;
                                                for (t = 0; t < e; t += 1) this.shapes[t].sh.reset();
                                                for (t = (e = this.shapeModifiers.length) - 1; t >= 0 && !this.shapeModifiers[t].processShapes(this._isFirstFrame); t -= 1);
                                            }
                                        },
                                        searchProcessedElement: function (t) {
                                            for (var e = this.processedElements, r = 0, i = e.length; r < i; ) {
                                                if (e[r].elem === t) return e[r].pos;
                                                r += 1;
                                            }
                                            return 0;
                                        },
                                        addProcessedElement: function (t, e) {
                                            for (var r = this.processedElements, i = r.length; i; ) if (r[(i -= 1)].elem === t) return void (r[i].pos = e);
                                            r.push(new ProcessedElement(t, e));
                                        },
                                        prepareFrame: function (t) {
                                            this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange);
                                        },
                                    });
                                var lineCapEnum = { 1: "butt", 2: "round", 3: "square" },
                                    lineJoinEnum = { 1: "miter", 2: "round", 3: "bevel" };
                                function SVGShapeData(t, e, r) {
                                    (this.caches = []), (this.styles = []), (this.transformers = t), (this.lStr = ""), (this.sh = r), (this.lvl = e), (this._isAnimated = !!r.k);
                                    for (var i = 0, n = t.length; i < n; ) {
                                        if (t[i].mProps.dynamicProperties.length) {
                                            this._isAnimated = !0;
                                            break;
                                        }
                                        i += 1;
                                    }
                                }
                                function SVGStyleData(t, e) {
                                    (this.data = t), (this.type = t.ty), (this.d = ""), (this.lvl = e), (this._mdf = !1), (this.closed = !0 === t.hd), (this.pElem = createNS("path")), (this.msElem = null);
                                }
                                function DashProperty(t, e, r, i) {
                                    var n;
                                    (this.elem = t),
                                        (this.frameId = -1),
                                        (this.dataProps = createSizedArray(e.length)),
                                        (this.renderer = r),
                                        (this.k = !1),
                                        (this.dashStr = ""),
                                        (this.dashArray = createTypedArray("float32", e.length ? e.length - 1 : 0)),
                                        (this.dashoffset = createTypedArray("float32", 1)),
                                        this.initDynamicPropertyContainer(i);
                                    var s,
                                        a = e.length || 0;
                                    for (n = 0; n < a; n += 1) (s = PropertyFactory.getProp(t, e[n].v, 0, 0, this)), (this.k = s.k || this.k), (this.dataProps[n] = { n: e[n].n, p: s });
                                    this.k || this.getValue(!0), (this._isAnimated = this.k);
                                }
                                function SVGStrokeStyleData(t, e, r) {
                                    this.initDynamicPropertyContainer(t),
                                        (this.getValue = this.iterateDynamicProperties),
                                        (this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, this)),
                                        (this.w = PropertyFactory.getProp(t, e.w, 0, null, this)),
                                        (this.d = new DashProperty(t, e.d || {}, "svg", this)),
                                        (this.c = PropertyFactory.getProp(t, e.c, 1, 255, this)),
                                        (this.style = r),
                                        (this._isAnimated = !!this._isAnimated);
                                }
                                function SVGFillStyleData(t, e, r) {
                                    this.initDynamicPropertyContainer(t),
                                        (this.getValue = this.iterateDynamicProperties),
                                        (this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, this)),
                                        (this.c = PropertyFactory.getProp(t, e.c, 1, 255, this)),
                                        (this.style = r);
                                }
                                function SVGNoStyleData(t, e, r) {
                                    this.initDynamicPropertyContainer(t), (this.getValue = this.iterateDynamicProperties), (this.style = r);
                                }
                                function GradientProperty(t, e, r) {
                                    (this.data = e), (this.c = createTypedArray("uint8c", 4 * e.p));
                                    var i = e.k.k[0].s ? e.k.k[0].s.length - 4 * e.p : e.k.k.length - 4 * e.p;
                                    (this.o = createTypedArray("float32", i)),
                                        (this._cmdf = !1),
                                        (this._omdf = !1),
                                        (this._collapsable = this.checkCollapsable()),
                                        (this._hasOpacity = i),
                                        this.initDynamicPropertyContainer(r),
                                        (this.prop = PropertyFactory.getProp(t, e.k, 1, null, this)),
                                        (this.k = this.prop.k),
                                        this.getValue(!0);
                                }
                                function SVGGradientFillStyleData(t, e, r) {
                                    this.initDynamicPropertyContainer(t), (this.getValue = this.iterateDynamicProperties), this.initGradientData(t, e, r);
                                }
                                function SVGGradientStrokeStyleData(t, e, r) {
                                    this.initDynamicPropertyContainer(t),
                                        (this.getValue = this.iterateDynamicProperties),
                                        (this.w = PropertyFactory.getProp(t, e.w, 0, null, this)),
                                        (this.d = new DashProperty(t, e.d || {}, "svg", this)),
                                        this.initGradientData(t, e, r),
                                        (this._isAnimated = !!this._isAnimated);
                                }
                                function ShapeGroupData() {
                                    (this.it = []), (this.prevViewData = []), (this.gr = createNS("g"));
                                }
                                function SVGTransformData(t, e, r) {
                                    (this.transform = { mProps: t, op: e, container: r }), (this.elements = []), (this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length);
                                }
                                (SVGShapeData.prototype.setAsAnimated = function () {
                                    this._isAnimated = !0;
                                }),
                                    (SVGStyleData.prototype.reset = function () {
                                        (this.d = ""), (this._mdf = !1);
                                    }),
                                    (DashProperty.prototype.getValue = function (t) {
                                        if ((this.elem.globalData.frameId !== this.frameId || t) && ((this.frameId = this.elem.globalData.frameId), this.iterateDynamicProperties(), (this._mdf = this._mdf || t), this._mdf)) {
                                            var e = 0,
                                                r = this.dataProps.length;
                                            for ("svg" === this.renderer && (this.dashStr = ""), e = 0; e < r; e += 1)
                                                "o" !== this.dataProps[e].n
                                                    ? "svg" === this.renderer
                                                        ? (this.dashStr += " " + this.dataProps[e].p.v)
                                                        : (this.dashArray[e] = this.dataProps[e].p.v)
                                                    : (this.dashoffset[0] = this.dataProps[e].p.v);
                                        }
                                    }),
                                    extendPrototype([DynamicPropertyContainer], DashProperty),
                                    extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData),
                                    extendPrototype([DynamicPropertyContainer], SVGFillStyleData),
                                    extendPrototype([DynamicPropertyContainer], SVGNoStyleData),
                                    (GradientProperty.prototype.comparePoints = function (t, e) {
                                        for (var r = 0, i = this.o.length / 2; r < i; ) {
                                            if (Math.abs(t[4 * r] - t[4 * e + 2 * r]) > 0.01) return !1;
                                            r += 1;
                                        }
                                        return !0;
                                    }),
                                    (GradientProperty.prototype.checkCollapsable = function () {
                                        if (this.o.length / 2 != this.c.length / 4) return !1;
                                        if (this.data.k.k[0].s)
                                            for (var t = 0, e = this.data.k.k.length; t < e; ) {
                                                if (!this.comparePoints(this.data.k.k[t].s, this.data.p)) return !1;
                                                t += 1;
                                            }
                                        else if (!this.comparePoints(this.data.k.k, this.data.p)) return !1;
                                        return !0;
                                    }),
                                    (GradientProperty.prototype.getValue = function (t) {
                                        if ((this.prop.getValue(), (this._mdf = !1), (this._cmdf = !1), (this._omdf = !1), this.prop._mdf || t)) {
                                            var e,
                                                r,
                                                i,
                                                n = 4 * this.data.p;
                                            for (e = 0; e < n; e += 1) (r = e % 4 == 0 ? 100 : 255), (i = Math.round(this.prop.v[e] * r)), this.c[e] !== i && ((this.c[e] = i), (this._cmdf = !t));
                                            if (this.o.length)
                                                for (n = this.prop.v.length, e = 4 * this.data.p; e < n; e += 1)
                                                    (r = e % 2 == 0 ? 100 : 1),
                                                        (i = e % 2 == 0 ? Math.round(100 * this.prop.v[e]) : this.prop.v[e]),
                                                        this.o[e - 4 * this.data.p] !== i && ((this.o[e - 4 * this.data.p] = i), (this._omdf = !t));
                                            this._mdf = !t;
                                        }
                                    }),
                                    extendPrototype([DynamicPropertyContainer], GradientProperty),
                                    (SVGGradientFillStyleData.prototype.initGradientData = function (t, e, r) {
                                        (this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, this)),
                                            (this.s = PropertyFactory.getProp(t, e.s, 1, null, this)),
                                            (this.e = PropertyFactory.getProp(t, e.e, 1, null, this)),
                                            (this.h = PropertyFactory.getProp(t, e.h || { k: 0 }, 0, 0.01, this)),
                                            (this.a = PropertyFactory.getProp(t, e.a || { k: 0 }, 0, degToRads, this)),
                                            (this.g = new GradientProperty(t, e.g, this)),
                                            (this.style = r),
                                            (this.stops = []),
                                            this.setGradientData(r.pElem, e),
                                            this.setGradientOpacity(e, r),
                                            (this._isAnimated = !!this._isAnimated);
                                    }),
                                    (SVGGradientFillStyleData.prototype.setGradientData = function (t, e) {
                                        var r = createElementID(),
                                            i = createNS(1 === e.t ? "linearGradient" : "radialGradient");
                                        i.setAttribute("id", r), i.setAttribute("spreadMethod", "pad"), i.setAttribute("gradientUnits", "userSpaceOnUse");
                                        var n,
                                            s,
                                            a,
                                            o = [];
                                        for (a = 4 * e.g.p, s = 0; s < a; s += 4) (n = createNS("stop")), i.appendChild(n), o.push(n);
                                        t.setAttribute("gf" === e.ty ? "fill" : "stroke", "url(" + getLocationHref() + "#" + r + ")"), (this.gf = i), (this.cst = o);
                                    }),
                                    (SVGGradientFillStyleData.prototype.setGradientOpacity = function (t, e) {
                                        if (this.g._hasOpacity && !this.g._collapsable) {
                                            var r,
                                                i,
                                                n,
                                                s = createNS("mask"),
                                                a = createNS("path");
                                            s.appendChild(a);
                                            var o = createElementID(),
                                                l = createElementID();
                                            s.setAttribute("id", l);
                                            var h = createNS(1 === t.t ? "linearGradient" : "radialGradient");
                                            h.setAttribute("id", o), h.setAttribute("spreadMethod", "pad"), h.setAttribute("gradientUnits", "userSpaceOnUse"), (n = t.g.k.k[0].s ? t.g.k.k[0].s.length : t.g.k.k.length);
                                            var c = this.stops;
                                            for (i = 4 * t.g.p; i < n; i += 2) (r = createNS("stop")).setAttribute("stop-color", "rgb(255,255,255)"), h.appendChild(r), c.push(r);
                                            a.setAttribute("gf" === t.ty ? "fill" : "stroke", "url(" + getLocationHref() + "#" + o + ")"),
                                                "gs" === t.ty &&
                                                    (a.setAttribute("stroke-linecap", lineCapEnum[t.lc || 2]), a.setAttribute("stroke-linejoin", lineJoinEnum[t.lj || 2]), 1 === t.lj && a.setAttribute("stroke-miterlimit", t.ml)),
                                                (this.of = h),
                                                (this.ms = s),
                                                (this.ost = c),
                                                (this.maskId = l),
                                                (e.msElem = a);
                                        }
                                    }),
                                    extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData),
                                    extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);
                                var buildShapeString = function (t, e, r, i) {
                                        if (0 === e) return "";
                                        var n,
                                            s = t.o,
                                            a = t.i,
                                            o = t.v,
                                            l = " M" + i.applyToPointStringified(o[0][0], o[0][1]);
                                        for (n = 1; n < e; n += 1) l += " C" + i.applyToPointStringified(s[n - 1][0], s[n - 1][1]) + " " + i.applyToPointStringified(a[n][0], a[n][1]) + " " + i.applyToPointStringified(o[n][0], o[n][1]);
                                        return (
                                            r && e && ((l += " C" + i.applyToPointStringified(s[n - 1][0], s[n - 1][1]) + " " + i.applyToPointStringified(a[0][0], a[0][1]) + " " + i.applyToPointStringified(o[0][0], o[0][1])), (l += "z")), l
                                        );
                                    },
                                    SVGElementsRenderer = (function () {
                                        var t = new Matrix(),
                                            e = new Matrix();
                                        function r(t, e, r) {
                                            (r || e.transform.op._mdf) && e.transform.container.setAttribute("opacity", e.transform.op.v),
                                                (r || e.transform.mProps._mdf) && e.transform.container.setAttribute("transform", e.transform.mProps.v.to2dCSS());
                                        }
                                        function i() {}
                                        function n(r, i, n) {
                                            var s,
                                                a,
                                                o,
                                                l,
                                                h,
                                                c,
                                                p,
                                                d,
                                                u,
                                                f,
                                                m,
                                                y = i.styles.length,
                                                g = i.lvl;
                                            for (c = 0; c < y; c += 1) {
                                                if (((l = i.sh._mdf || n), i.styles[c].lvl < g)) {
                                                    for (d = e.reset(), f = g - i.styles[c].lvl, m = i.transformers.length - 1; !l && f > 0; ) (l = i.transformers[m].mProps._mdf || l), (f -= 1), (m -= 1);
                                                    if (l)
                                                        for (f = g - i.styles[c].lvl, m = i.transformers.length - 1; f > 0; )
                                                            (u = i.transformers[m].mProps.v.props), d.transform(u[0], u[1], u[2], u[3], u[4], u[5], u[6], u[7], u[8], u[9], u[10], u[11], u[12], u[13], u[14], u[15]), (f -= 1), (m -= 1);
                                                } else d = t;
                                                if (((a = (p = i.sh.paths)._length), l)) {
                                                    for (o = "", s = 0; s < a; s += 1) (h = p.shapes[s]) && h._length && (o += buildShapeString(h, h._length, h.c, d));
                                                    i.caches[c] = o;
                                                } else o = i.caches[c];
                                                (i.styles[c].d += !0 === r.hd ? "" : o), (i.styles[c]._mdf = l || i.styles[c]._mdf);
                                            }
                                        }
                                        function s(t, e, r) {
                                            var i = e.style;
                                            (e.c._mdf || r) && i.pElem.setAttribute("fill", "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"),
                                                (e.o._mdf || r) && i.pElem.setAttribute("fill-opacity", e.o.v);
                                        }
                                        function a(t, e, r) {
                                            o(t, e, r), l(0, e, r);
                                        }
                                        function o(t, e, r) {
                                            var i,
                                                n,
                                                s,
                                                a,
                                                o,
                                                l = e.gf,
                                                h = e.g._hasOpacity,
                                                c = e.s.v,
                                                p = e.e.v;
                                            if (e.o._mdf || r) {
                                                var d = "gf" === t.ty ? "fill-opacity" : "stroke-opacity";
                                                e.style.pElem.setAttribute(d, e.o.v);
                                            }
                                            if (e.s._mdf || r) {
                                                var u = 1 === t.t ? "x1" : "cx",
                                                    f = "x1" === u ? "y1" : "cy";
                                                l.setAttribute(u, c[0]), l.setAttribute(f, c[1]), h && !e.g._collapsable && (e.of.setAttribute(u, c[0]), e.of.setAttribute(f, c[1]));
                                            }
                                            if (e.g._cmdf || r) {
                                                i = e.cst;
                                                var m = e.g.c;
                                                for (s = i.length, n = 0; n < s; n += 1) (a = i[n]).setAttribute("offset", m[4 * n] + "%"), a.setAttribute("stop-color", "rgb(" + m[4 * n + 1] + "," + m[4 * n + 2] + "," + m[4 * n + 3] + ")");
                                            }
                                            if (h && (e.g._omdf || r)) {
                                                var y = e.g.o;
                                                for (s = (i = e.g._collapsable ? e.cst : e.ost).length, n = 0; n < s; n += 1)
                                                    (a = i[n]), e.g._collapsable || a.setAttribute("offset", y[2 * n] + "%"), a.setAttribute("stop-opacity", y[2 * n + 1]);
                                            }
                                            if (1 === t.t) (e.e._mdf || r) && (l.setAttribute("x2", p[0]), l.setAttribute("y2", p[1]), h && !e.g._collapsable && (e.of.setAttribute("x2", p[0]), e.of.setAttribute("y2", p[1])));
                                            else if (
                                                ((e.s._mdf || e.e._mdf || r) && ((o = Math.sqrt(Math.pow(c[0] - p[0], 2) + Math.pow(c[1] - p[1], 2))), l.setAttribute("r", o), h && !e.g._collapsable && e.of.setAttribute("r", o)),
                                                e.e._mdf || e.h._mdf || e.a._mdf || r)
                                            ) {
                                                o || (o = Math.sqrt(Math.pow(c[0] - p[0], 2) + Math.pow(c[1] - p[1], 2)));
                                                var g = Math.atan2(p[1] - c[1], p[0] - c[0]),
                                                    v = e.h.v;
                                                v >= 1 ? (v = 0.99) : v <= -1 && (v = -0.99);
                                                var b = o * v,
                                                    _ = Math.cos(g + e.a.v) * b + c[0],
                                                    w = Math.sin(g + e.a.v) * b + c[1];
                                                l.setAttribute("fx", _), l.setAttribute("fy", w), h && !e.g._collapsable && (e.of.setAttribute("fx", _), e.of.setAttribute("fy", w));
                                            }
                                        }
                                        function l(t, e, r) {
                                            var i = e.style,
                                                n = e.d;
                                            n && (n._mdf || r) && n.dashStr && (i.pElem.setAttribute("stroke-dasharray", n.dashStr), i.pElem.setAttribute("stroke-dashoffset", n.dashoffset[0])),
                                                e.c && (e.c._mdf || r) && i.pElem.setAttribute("stroke", "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"),
                                                (e.o._mdf || r) && i.pElem.setAttribute("stroke-opacity", e.o.v),
                                                (e.w._mdf || r) && (i.pElem.setAttribute("stroke-width", e.w.v), i.msElem && i.msElem.setAttribute("stroke-width", e.w.v));
                                        }
                                        return {
                                            createRenderFunction: function (t) {
                                                switch (t.ty) {
                                                    case "fl":
                                                        return s;
                                                    case "gf":
                                                        return o;
                                                    case "gs":
                                                        return a;
                                                    case "st":
                                                        return l;
                                                    case "sh":
                                                    case "el":
                                                    case "rc":
                                                    case "sr":
                                                        return n;
                                                    case "tr":
                                                        return r;
                                                    case "no":
                                                        return i;
                                                    default:
                                                        return null;
                                                }
                                            },
                                        };
                                    })();
                                function SVGShapeElement(t, e, r) {
                                    (this.shapes = []),
                                        (this.shapesData = t.shapes),
                                        (this.stylesList = []),
                                        (this.shapeModifiers = []),
                                        (this.itemsData = []),
                                        (this.processedElements = []),
                                        (this.animatedContents = []),
                                        this.initElement(t, e, r),
                                        (this.prevViewData = []);
                                }
                                function LetterProps(t, e, r, i, n, s) {
                                    (this.o = t), (this.sw = e), (this.sc = r), (this.fc = i), (this.m = n), (this.p = s), (this._mdf = { o: !0, sw: !!e, sc: !!r, fc: !!i, m: !0, p: !0 });
                                }
                                function TextProperty(t, e) {
                                    (this._frameId = initialDefaultFrame),
                                        (this.pv = ""),
                                        (this.v = ""),
                                        (this.kf = !1),
                                        (this._isFirstFrame = !0),
                                        (this._mdf = !1),
                                        (this.data = e),
                                        (this.elem = t),
                                        (this.comp = this.elem.comp),
                                        (this.keysIndex = 0),
                                        (this.canResize = !1),
                                        (this.minimumFontSize = 1),
                                        (this.effectsSequence = []),
                                        (this.currentData = {
                                            ascent: 0,
                                            boxWidth: this.defaultBoxWidth,
                                            f: "",
                                            fStyle: "",
                                            fWeight: "",
                                            fc: "",
                                            j: "",
                                            justifyOffset: "",
                                            l: [],
                                            lh: 0,
                                            lineWidths: [],
                                            ls: "",
                                            of: "",
                                            s: "",
                                            sc: "",
                                            sw: 0,
                                            t: 0,
                                            tr: 0,
                                            sz: 0,
                                            ps: null,
                                            fillColorAnim: !1,
                                            strokeColorAnim: !1,
                                            strokeWidthAnim: !1,
                                            yOffset: 0,
                                            finalSize: 0,
                                            finalText: [],
                                            finalLineHeight: 0,
                                            __complete: !1,
                                        }),
                                        this.copyData(this.currentData, this.data.d.k[0].s),
                                        this.searchProperty() || this.completeTextData(this.currentData);
                                }
                                extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement),
                                    (SVGShapeElement.prototype.initSecondaryElement = function () {}),
                                    (SVGShapeElement.prototype.identityMatrix = new Matrix()),
                                    (SVGShapeElement.prototype.buildExpressionInterface = function () {}),
                                    (SVGShapeElement.prototype.createContent = function () {
                                        this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0), this.filterUniqueShapes();
                                    }),
                                    (SVGShapeElement.prototype.filterUniqueShapes = function () {
                                        var t,
                                            e,
                                            r,
                                            i,
                                            n = this.shapes.length,
                                            s = this.stylesList.length,
                                            a = [],
                                            o = !1;
                                        for (r = 0; r < s; r += 1) {
                                            for (i = this.stylesList[r], o = !1, a.length = 0, t = 0; t < n; t += 1) -1 !== (e = this.shapes[t]).styles.indexOf(i) && (a.push(e), (o = e._isAnimated || o));
                                            a.length > 1 && o && this.setShapesAsAnimated(a);
                                        }
                                    }),
                                    (SVGShapeElement.prototype.setShapesAsAnimated = function (t) {
                                        var e,
                                            r = t.length;
                                        for (e = 0; e < r; e += 1) t[e].setAsAnimated();
                                    }),
                                    (SVGShapeElement.prototype.createStyleElement = function (t, e) {
                                        var r,
                                            i = new SVGStyleData(t, e),
                                            n = i.pElem;
                                        return (
                                            "st" === t.ty
                                                ? (r = new SVGStrokeStyleData(this, t, i))
                                                : "fl" === t.ty
                                                ? (r = new SVGFillStyleData(this, t, i))
                                                : "gf" === t.ty || "gs" === t.ty
                                                ? ((r = new ("gf" === t.ty ? SVGGradientFillStyleData : SVGGradientStrokeStyleData)(this, t, i)),
                                                  this.globalData.defs.appendChild(r.gf),
                                                  r.maskId && (this.globalData.defs.appendChild(r.ms), this.globalData.defs.appendChild(r.of), n.setAttribute("mask", "url(" + getLocationHref() + "#" + r.maskId + ")")))
                                                : "no" === t.ty && (r = new SVGNoStyleData(this, t, i)),
                                            ("st" !== t.ty && "gs" !== t.ty) ||
                                                (n.setAttribute("stroke-linecap", lineCapEnum[t.lc || 2]),
                                                n.setAttribute("stroke-linejoin", lineJoinEnum[t.lj || 2]),
                                                n.setAttribute("fill-opacity", "0"),
                                                1 === t.lj && n.setAttribute("stroke-miterlimit", t.ml)),
                                            2 === t.r && n.setAttribute("fill-rule", "evenodd"),
                                            t.ln && n.setAttribute("id", t.ln),
                                            t.cl && n.setAttribute("class", t.cl),
                                            t.bm && (n.style["mix-blend-mode"] = getBlendMode(t.bm)),
                                            this.stylesList.push(i),
                                            this.addToAnimatedContents(t, r),
                                            r
                                        );
                                    }),
                                    (SVGShapeElement.prototype.createGroupElement = function (t) {
                                        var e = new ShapeGroupData();
                                        return t.ln && e.gr.setAttribute("id", t.ln), t.cl && e.gr.setAttribute("class", t.cl), t.bm && (e.gr.style["mix-blend-mode"] = getBlendMode(t.bm)), e;
                                    }),
                                    (SVGShapeElement.prototype.createTransformElement = function (t, e) {
                                        var r = TransformPropertyFactory.getTransformProperty(this, t, this),
                                            i = new SVGTransformData(r, r.o, e);
                                        return this.addToAnimatedContents(t, i), i;
                                    }),
                                    (SVGShapeElement.prototype.createShapeElement = function (t, e, r) {
                                        var i = 4;
                                        "rc" === t.ty ? (i = 5) : "el" === t.ty ? (i = 6) : "sr" === t.ty && (i = 7);
                                        var n = new SVGShapeData(e, r, ShapePropertyFactory.getShapeProp(this, t, i, this));
                                        return this.shapes.push(n), this.addShapeToModifiers(n), this.addToAnimatedContents(t, n), n;
                                    }),
                                    (SVGShapeElement.prototype.addToAnimatedContents = function (t, e) {
                                        for (var r = 0, i = this.animatedContents.length; r < i; ) {
                                            if (this.animatedContents[r].element === e) return;
                                            r += 1;
                                        }
                                        this.animatedContents.push({ fn: SVGElementsRenderer.createRenderFunction(t), element: e, data: t });
                                    }),
                                    (SVGShapeElement.prototype.setElementStyles = function (t) {
                                        var e,
                                            r = t.styles,
                                            i = this.stylesList.length;
                                        for (e = 0; e < i; e += 1) this.stylesList[e].closed || r.push(this.stylesList[e]);
                                    }),
                                    (SVGShapeElement.prototype.reloadShapes = function () {
                                        var t;
                                        this._isFirstFrame = !0;
                                        var e = this.itemsData.length;
                                        for (t = 0; t < e; t += 1) this.prevViewData[t] = this.itemsData[t];
                                        for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0), this.filterUniqueShapes(), e = this.dynamicProperties.length, t = 0; t < e; t += 1)
                                            this.dynamicProperties[t].getValue();
                                        this.renderModifiers();
                                    }),
                                    (SVGShapeElement.prototype.searchShapes = function (t, e, r, i, n, s, a) {
                                        var o,
                                            l,
                                            h,
                                            c,
                                            p,
                                            d,
                                            u = [].concat(s),
                                            f = t.length - 1,
                                            m = [],
                                            y = [];
                                        for (o = f; o >= 0; o -= 1) {
                                            if (((d = this.searchProcessedElement(t[o])) ? (e[o] = r[d - 1]) : (t[o]._render = a), "fl" === t[o].ty || "st" === t[o].ty || "gf" === t[o].ty || "gs" === t[o].ty || "no" === t[o].ty))
                                                d ? (e[o].style.closed = !1) : (e[o] = this.createStyleElement(t[o], n)), t[o]._render && e[o].style.pElem.parentNode !== i && i.appendChild(e[o].style.pElem), m.push(e[o].style);
                                            else if ("gr" === t[o].ty) {
                                                if (d) for (h = e[o].it.length, l = 0; l < h; l += 1) e[o].prevViewData[l] = e[o].it[l];
                                                else e[o] = this.createGroupElement(t[o]);
                                                this.searchShapes(t[o].it, e[o].it, e[o].prevViewData, e[o].gr, n + 1, u, a), t[o]._render && e[o].gr.parentNode !== i && i.appendChild(e[o].gr);
                                            } else
                                                "tr" === t[o].ty
                                                    ? (d || (e[o] = this.createTransformElement(t[o], i)), (c = e[o].transform), u.push(c))
                                                    : "sh" === t[o].ty || "rc" === t[o].ty || "el" === t[o].ty || "sr" === t[o].ty
                                                    ? (d || (e[o] = this.createShapeElement(t[o], u, n)), this.setElementStyles(e[o]))
                                                    : "tm" === t[o].ty || "rd" === t[o].ty || "ms" === t[o].ty || "pb" === t[o].ty || "zz" === t[o].ty || "op" === t[o].ty
                                                    ? (d ? ((p = e[o]).closed = !1) : ((p = ShapeModifiers.getModifier(t[o].ty)).init(this, t[o]), (e[o] = p), this.shapeModifiers.push(p)), y.push(p))
                                                    : "rp" === t[o].ty && (d ? ((p = e[o]).closed = !0) : ((p = ShapeModifiers.getModifier(t[o].ty)), (e[o] = p), p.init(this, t, o, e), this.shapeModifiers.push(p), (a = !1)), y.push(p));
                                            this.addProcessedElement(t[o], o + 1);
                                        }
                                        for (f = m.length, o = 0; o < f; o += 1) m[o].closed = !0;
                                        for (f = y.length, o = 0; o < f; o += 1) y[o].closed = !0;
                                    }),
                                    (SVGShapeElement.prototype.renderInnerContent = function () {
                                        var t;
                                        this.renderModifiers();
                                        var e = this.stylesList.length;
                                        for (t = 0; t < e; t += 1) this.stylesList[t].reset();
                                        for (this.renderShape(), t = 0; t < e; t += 1)
                                            (this.stylesList[t]._mdf || this._isFirstFrame) &&
                                                (this.stylesList[t].msElem && (this.stylesList[t].msElem.setAttribute("d", this.stylesList[t].d), (this.stylesList[t].d = "M0 0" + this.stylesList[t].d)),
                                                this.stylesList[t].pElem.setAttribute("d", this.stylesList[t].d || "M0 0"));
                                    }),
                                    (SVGShapeElement.prototype.renderShape = function () {
                                        var t,
                                            e,
                                            r = this.animatedContents.length;
                                        for (t = 0; t < r; t += 1) (e = this.animatedContents[t]), (this._isFirstFrame || e.element._isAnimated) && !0 !== e.data && e.fn(e.data, e.element, this._isFirstFrame);
                                    }),
                                    (SVGShapeElement.prototype.destroy = function () {
                                        this.destroyBaseElement(), (this.shapesData = null), (this.itemsData = null);
                                    }),
                                    (LetterProps.prototype.update = function (t, e, r, i, n, s) {
                                        (this._mdf.o = !1), (this._mdf.sw = !1), (this._mdf.sc = !1), (this._mdf.fc = !1), (this._mdf.m = !1), (this._mdf.p = !1);
                                        var a = !1;
                                        return (
                                            this.o !== t && ((this.o = t), (this._mdf.o = !0), (a = !0)),
                                            this.sw !== e && ((this.sw = e), (this._mdf.sw = !0), (a = !0)),
                                            this.sc !== r && ((this.sc = r), (this._mdf.sc = !0), (a = !0)),
                                            this.fc !== i && ((this.fc = i), (this._mdf.fc = !0), (a = !0)),
                                            this.m !== n && ((this.m = n), (this._mdf.m = !0), (a = !0)),
                                            !s.length || (this.p[0] === s[0] && this.p[1] === s[1] && this.p[4] === s[4] && this.p[5] === s[5] && this.p[12] === s[12] && this.p[13] === s[13]) || ((this.p = s), (this._mdf.p = !0), (a = !0)),
                                            a
                                        );
                                    }),
                                    (TextProperty.prototype.defaultBoxWidth = [0, 0]),
                                    (TextProperty.prototype.copyData = function (t, e) {
                                        for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
                                        return t;
                                    }),
                                    (TextProperty.prototype.setCurrentData = function (t) {
                                        t.__complete || this.completeTextData(t), (this.currentData = t), (this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth), (this._mdf = !0);
                                    }),
                                    (TextProperty.prototype.searchProperty = function () {
                                        return this.searchKeyframes();
                                    }),
                                    (TextProperty.prototype.searchKeyframes = function () {
                                        return (this.kf = this.data.d.k.length > 1), this.kf && this.addEffect(this.getKeyframeValue.bind(this)), this.kf;
                                    }),
                                    (TextProperty.prototype.addEffect = function (t) {
                                        this.effectsSequence.push(t), this.elem.addDynamicProperty(this);
                                    }),
                                    (TextProperty.prototype.getValue = function (t) {
                                        if ((this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length) || t) {
                                            this.currentData.t = this.data.d.k[this.keysIndex].s.t;
                                            var e = this.currentData,
                                                r = this.keysIndex;
                                            if (this.lock) this.setCurrentData(this.currentData);
                                            else {
                                                var i;
                                                (this.lock = !0), (this._mdf = !1);
                                                var n = this.effectsSequence.length,
                                                    s = t || this.data.d.k[this.keysIndex].s;
                                                for (i = 0; i < n; i += 1) s = r !== this.keysIndex ? this.effectsSequence[i](s, s.t) : this.effectsSequence[i](this.currentData, s.t);
                                                e !== s && this.setCurrentData(s), (this.v = this.currentData), (this.pv = this.v), (this.lock = !1), (this.frameId = this.elem.globalData.frameId);
                                            }
                                        }
                                    }),
                                    (TextProperty.prototype.getKeyframeValue = function () {
                                        for (var t = this.data.d.k, e = this.elem.comp.renderedFrame, r = 0, i = t.length; r <= i - 1 && !(r === i - 1 || t[r + 1].t > e); ) r += 1;
                                        return this.keysIndex !== r && (this.keysIndex = r), this.data.d.k[this.keysIndex].s;
                                    }),
                                    (TextProperty.prototype.buildFinalText = function (t) {
                                        for (var e, r, i = [], n = 0, s = t.length, a = !1; n < s; )
                                            (e = t.charCodeAt(n)),
                                                FontManager.isCombinedCharacter(e)
                                                    ? (i[i.length - 1] += t.charAt(n))
                                                    : e >= 55296 && e <= 56319
                                                    ? (r = t.charCodeAt(n + 1)) >= 56320 && r <= 57343
                                                        ? (a || FontManager.isModifier(e, r) ? ((i[i.length - 1] += t.substr(n, 2)), (a = !1)) : i.push(t.substr(n, 2)), (n += 1))
                                                        : i.push(t.charAt(n))
                                                    : e > 56319
                                                    ? ((r = t.charCodeAt(n + 1)), FontManager.isZeroWidthJoiner(e, r) ? ((a = !0), (i[i.length - 1] += t.substr(n, 2)), (n += 1)) : i.push(t.charAt(n)))
                                                    : FontManager.isZeroWidthJoiner(e)
                                                    ? ((i[i.length - 1] += t.charAt(n)), (a = !0))
                                                    : i.push(t.charAt(n)),
                                                (n += 1);
                                        return i;
                                    }),
                                    (TextProperty.prototype.completeTextData = function (t) {
                                        t.__complete = !0;
                                        var e,
                                            r,
                                            i,
                                            n,
                                            s,
                                            a,
                                            o,
                                            l = this.elem.globalData.fontManager,
                                            h = this.data,
                                            c = [],
                                            p = 0,
                                            d = h.m.g,
                                            u = 0,
                                            f = 0,
                                            m = 0,
                                            y = [],
                                            g = 0,
                                            v = 0,
                                            b = l.getFontByName(t.f),
                                            _ = 0,
                                            w = getFontProperties(b);
                                        (t.fWeight = w.weight), (t.fStyle = w.style), (t.finalSize = t.s), (t.finalText = this.buildFinalText(t.t)), (r = t.finalText.length), (t.finalLineHeight = t.lh);
                                        var S,
                                            E = (t.tr / 1e3) * t.finalSize;
                                        if (t.sz)
                                            for (var P, x, k = !0, A = t.sz[0], T = t.sz[1]; k; ) {
                                                (P = 0), (g = 0), (r = (x = this.buildFinalText(t.t)).length), (E = (t.tr / 1e3) * t.finalSize);
                                                var C = -1;
                                                for (e = 0; e < r; e += 1)
                                                    (S = x[e].charCodeAt(0)),
                                                        (i = !1),
                                                        " " === x[e] ? (C = e) : (13 !== S && 3 !== S) || ((g = 0), (i = !0), (P += t.finalLineHeight || 1.2 * t.finalSize)),
                                                        l.chars ? ((o = l.getCharData(x[e], b.fStyle, b.fFamily)), (_ = i ? 0 : (o.w * t.finalSize) / 100)) : (_ = l.measureText(x[e], t.f, t.finalSize)),
                                                        g + _ > A && " " !== x[e]
                                                            ? (-1 === C ? (r += 1) : (e = C), (P += t.finalLineHeight || 1.2 * t.finalSize), x.splice(e, C === e ? 1 : 0, "\r"), (C = -1), (g = 0))
                                                            : ((g += _), (g += E));
                                                (P += (b.ascent * t.finalSize) / 100),
                                                    this.canResize && t.finalSize > this.minimumFontSize && T < P
                                                        ? ((t.finalSize -= 1), (t.finalLineHeight = (t.finalSize * t.lh) / t.s))
                                                        : ((t.finalText = x), (r = t.finalText.length), (k = !1));
                                            }
                                        (g = -E), (_ = 0);
                                        var I,
                                            M = 0;
                                        for (e = 0; e < r; e += 1)
                                            if (
                                                ((i = !1),
                                                13 === (S = (I = t.finalText[e]).charCodeAt(0)) || 3 === S ? ((M = 0), y.push(g), (v = g > v ? g : v), (g = -2 * E), (n = ""), (i = !0), (m += 1)) : (n = I),
                                                l.chars ? ((o = l.getCharData(I, b.fStyle, l.getFontByName(t.f).fFamily)), (_ = i ? 0 : (o.w * t.finalSize) / 100)) : (_ = l.measureText(n, t.f, t.finalSize)),
                                                " " === I ? (M += _ + E) : ((g += _ + E + M), (M = 0)),
                                                c.push({ l: _, an: _, add: u, n: i, anIndexes: [], val: n, line: m, animatorJustifyOffset: 0 }),
                                                2 == d)
                                            ) {
                                                if (((u += _), "" === n || " " === n || e === r - 1)) {
                                                    for (("" !== n && " " !== n) || (u -= _); f <= e; ) (c[f].an = u), (c[f].ind = p), (c[f].extra = _), (f += 1);
                                                    (p += 1), (u = 0);
                                                }
                                            } else if (3 == d) {
                                                if (((u += _), "" === n || e === r - 1)) {
                                                    for ("" === n && (u -= _); f <= e; ) (c[f].an = u), (c[f].ind = p), (c[f].extra = _), (f += 1);
                                                    (u = 0), (p += 1);
                                                }
                                            } else (c[p].ind = p), (c[p].extra = 0), (p += 1);
                                        if (((t.l = c), (v = g > v ? g : v), y.push(g), t.sz)) (t.boxWidth = t.sz[0]), (t.justifyOffset = 0);
                                        else
                                            switch (((t.boxWidth = v), t.j)) {
                                                case 1:
                                                    t.justifyOffset = -t.boxWidth;
                                                    break;
                                                case 2:
                                                    t.justifyOffset = -t.boxWidth / 2;
                                                    break;
                                                default:
                                                    t.justifyOffset = 0;
                                            }
                                        t.lineWidths = y;
                                        var D,
                                            F,
                                            L,
                                            O,
                                            z = h.a;
                                        a = z.length;
                                        var R = [];
                                        for (s = 0; s < a; s += 1) {
                                            for ((D = z[s]).a.sc && (t.strokeColorAnim = !0), D.a.sw && (t.strokeWidthAnim = !0), (D.a.fc || D.a.fh || D.a.fs || D.a.fb) && (t.fillColorAnim = !0), O = 0, L = D.s.b, e = 0; e < r; e += 1)
                                                ((F = c[e]).anIndexes[s] = O),
                                                    ((1 == L && "" !== F.val) || (2 == L && "" !== F.val && " " !== F.val) || (3 == L && (F.n || " " == F.val || e == r - 1)) || (4 == L && (F.n || e == r - 1))) &&
                                                        (1 === D.s.rn && R.push(O), (O += 1));
                                            h.a[s].s.totalChars = O;
                                            var B,
                                                $ = -1;
                                            if (1 === D.s.rn) for (e = 0; e < r; e += 1) $ != (F = c[e]).anIndexes[s] && (($ = F.anIndexes[s]), (B = R.splice(Math.floor(Math.random() * R.length), 1)[0])), (F.anIndexes[s] = B);
                                        }
                                        (t.yOffset = t.finalLineHeight || 1.2 * t.finalSize), (t.ls = t.ls || 0), (t.ascent = (b.ascent * t.finalSize) / 100);
                                    }),
                                    (TextProperty.prototype.updateDocumentData = function (t, e) {
                                        e = void 0 === e ? this.keysIndex : e;
                                        var r = this.copyData({}, this.data.d.k[e].s);
                                        (r = this.copyData(r, t)), (this.data.d.k[e].s = r), this.recalculate(e), this.elem.addDynamicProperty(this);
                                    }),
                                    (TextProperty.prototype.recalculate = function (t) {
                                        var e = this.data.d.k[t].s;
                                        (e.__complete = !1), (this.keysIndex = 0), (this._isFirstFrame = !0), this.getValue(e);
                                    }),
                                    (TextProperty.prototype.canResizeFont = function (t) {
                                        (this.canResize = t), this.recalculate(this.keysIndex), this.elem.addDynamicProperty(this);
                                    }),
                                    (TextProperty.prototype.setMinimumFontSize = function (t) {
                                        (this.minimumFontSize = Math.floor(t) || 1), this.recalculate(this.keysIndex), this.elem.addDynamicProperty(this);
                                    });
                                var TextSelectorProp = (function () {
                                    var t = Math.max,
                                        e = Math.min,
                                        r = Math.floor;
                                    function i(t, e) {
                                        (this._currentTextLength = -1),
                                            (this.k = !1),
                                            (this.data = e),
                                            (this.elem = t),
                                            (this.comp = t.comp),
                                            (this.finalS = 0),
                                            (this.finalE = 0),
                                            this.initDynamicPropertyContainer(t),
                                            (this.s = PropertyFactory.getProp(t, e.s || { k: 0 }, 0, 0, this)),
                                            (this.e = "e" in e ? PropertyFactory.getProp(t, e.e, 0, 0, this) : { v: 100 }),
                                            (this.o = PropertyFactory.getProp(t, e.o || { k: 0 }, 0, 0, this)),
                                            (this.xe = PropertyFactory.getProp(t, e.xe || { k: 0 }, 0, 0, this)),
                                            (this.ne = PropertyFactory.getProp(t, e.ne || { k: 0 }, 0, 0, this)),
                                            (this.sm = PropertyFactory.getProp(t, e.sm || { k: 100 }, 0, 0, this)),
                                            (this.a = PropertyFactory.getProp(t, e.a, 0, 0.01, this)),
                                            this.dynamicProperties.length || this.getValue();
                                    }
                                    return (
                                        (i.prototype = {
                                            getMult: function (i) {
                                                this._currentTextLength !== this.elem.textProperty.currentData.l.length && this.getValue();
                                                var n = 0,
                                                    s = 0,
                                                    a = 1,
                                                    o = 1;
                                                this.ne.v > 0 ? (n = this.ne.v / 100) : (s = -this.ne.v / 100), this.xe.v > 0 ? (a = 1 - this.xe.v / 100) : (o = 1 + this.xe.v / 100);
                                                var l = BezierFactory.getBezierEasing(n, s, a, o).get,
                                                    h = 0,
                                                    c = this.finalS,
                                                    p = this.finalE,
                                                    d = this.data.sh;
                                                if (2 === d) h = l((h = p === c ? (i >= p ? 1 : 0) : t(0, e(0.5 / (p - c) + (i - c) / (p - c), 1))));
                                                else if (3 === d) h = l((h = p === c ? (i >= p ? 0 : 1) : 1 - t(0, e(0.5 / (p - c) + (i - c) / (p - c), 1))));
                                                else if (4 === d) p === c ? (h = 0) : (h = t(0, e(0.5 / (p - c) + (i - c) / (p - c), 1))) < 0.5 ? (h *= 2) : (h = 1 - 2 * (h - 0.5)), (h = l(h));
                                                else if (5 === d) {
                                                    if (p === c) h = 0;
                                                    else {
                                                        var u = p - c,
                                                            f = -u / 2 + (i = e(t(0, i + 0.5 - c), p - c)),
                                                            m = u / 2;
                                                        h = Math.sqrt(1 - (f * f) / (m * m));
                                                    }
                                                    h = l(h);
                                                } else
                                                    6 === d
                                                        ? (p === c ? (h = 0) : ((i = e(t(0, i + 0.5 - c), p - c)), (h = (1 + Math.cos(Math.PI + (2 * Math.PI * i) / (p - c))) / 2)), (h = l(h)))
                                                        : (i >= r(c) && (h = t(0, e(i - c < 0 ? e(p, 1) - (c - i) : p - i, 1))), (h = l(h)));
                                                if (100 !== this.sm.v) {
                                                    var y = 0.01 * this.sm.v;
                                                    0 === y && (y = 1e-8);
                                                    var g = 0.5 - 0.5 * y;
                                                    h < g ? (h = 0) : (h = (h - g) / y) > 1 && (h = 1);
                                                }
                                                return h * this.a.v;
                                            },
                                            getValue: function (t) {
                                                this.iterateDynamicProperties(),
                                                    (this._mdf = t || this._mdf),
                                                    (this._currentTextLength = this.elem.textProperty.currentData.l.length || 0),
                                                    t && 2 === this.data.r && (this.e.v = this._currentTextLength);
                                                var e = 2 === this.data.r ? 1 : 100 / this.data.totalChars,
                                                    r = this.o.v / e,
                                                    i = this.s.v / e + r,
                                                    n = this.e.v / e + r;
                                                if (i > n) {
                                                    var s = i;
                                                    (i = n), (n = s);
                                                }
                                                (this.finalS = i), (this.finalE = n);
                                            },
                                        }),
                                        extendPrototype([DynamicPropertyContainer], i),
                                        {
                                            getTextSelectorProp: function (t, e, r) {
                                                return new i(t, e, r);
                                            },
                                        }
                                    );
                                })();
                                function TextAnimatorDataProperty(t, e, r) {
                                    var i = { propType: !1 },
                                        n = PropertyFactory.getProp,
                                        s = e.a;
                                    (this.a = {
                                        r: s.r ? n(t, s.r, 0, degToRads, r) : i,
                                        rx: s.rx ? n(t, s.rx, 0, degToRads, r) : i,
                                        ry: s.ry ? n(t, s.ry, 0, degToRads, r) : i,
                                        sk: s.sk ? n(t, s.sk, 0, degToRads, r) : i,
                                        sa: s.sa ? n(t, s.sa, 0, degToRads, r) : i,
                                        s: s.s ? n(t, s.s, 1, 0.01, r) : i,
                                        a: s.a ? n(t, s.a, 1, 0, r) : i,
                                        o: s.o ? n(t, s.o, 0, 0.01, r) : i,
                                        p: s.p ? n(t, s.p, 1, 0, r) : i,
                                        sw: s.sw ? n(t, s.sw, 0, 0, r) : i,
                                        sc: s.sc ? n(t, s.sc, 1, 0, r) : i,
                                        fc: s.fc ? n(t, s.fc, 1, 0, r) : i,
                                        fh: s.fh ? n(t, s.fh, 0, 0, r) : i,
                                        fs: s.fs ? n(t, s.fs, 0, 0.01, r) : i,
                                        fb: s.fb ? n(t, s.fb, 0, 0.01, r) : i,
                                        t: s.t ? n(t, s.t, 0, 0, r) : i,
                                    }),
                                        (this.s = TextSelectorProp.getTextSelectorProp(t, e.s, r)),
                                        (this.s.t = e.s.t);
                                }
                                function TextAnimatorProperty(t, e, r) {
                                    (this._isFirstFrame = !0),
                                        (this._hasMaskedPath = !1),
                                        (this._frameId = -1),
                                        (this._textData = t),
                                        (this._renderType = e),
                                        (this._elem = r),
                                        (this._animatorsData = createSizedArray(this._textData.a.length)),
                                        (this._pathData = {}),
                                        (this._moreOptions = { alignment: {} }),
                                        (this.renderedLetters = []),
                                        (this.lettersChangedFlag = !1),
                                        this.initDynamicPropertyContainer(r);
                                }
                                function ITextElement() {}
                                (TextAnimatorProperty.prototype.searchProperties = function () {
                                    var t,
                                        e,
                                        r = this._textData.a.length,
                                        i = PropertyFactory.getProp;
                                    for (t = 0; t < r; t += 1) (e = this._textData.a[t]), (this._animatorsData[t] = new TextAnimatorDataProperty(this._elem, e, this));
                                    this._textData.p && "m" in this._textData.p
                                        ? ((this._pathData = {
                                              a: i(this._elem, this._textData.p.a, 0, 0, this),
                                              f: i(this._elem, this._textData.p.f, 0, 0, this),
                                              l: i(this._elem, this._textData.p.l, 0, 0, this),
                                              r: i(this._elem, this._textData.p.r, 0, 0, this),
                                              p: i(this._elem, this._textData.p.p, 0, 0, this),
                                              m: this._elem.maskManager.getMaskProperty(this._textData.p.m),
                                          }),
                                          (this._hasMaskedPath = !0))
                                        : (this._hasMaskedPath = !1),
                                        (this._moreOptions.alignment = i(this._elem, this._textData.m.a, 1, 0, this));
                                }),
                                    (TextAnimatorProperty.prototype.getMeasures = function (t, e) {
                                        if (((this.lettersChangedFlag = e), this._mdf || this._isFirstFrame || e || (this._hasMaskedPath && this._pathData.m._mdf))) {
                                            this._isFirstFrame = !1;
                                            var r,
                                                i,
                                                n,
                                                s,
                                                a,
                                                o,
                                                l,
                                                h,
                                                c,
                                                p,
                                                d,
                                                u,
                                                f,
                                                m,
                                                y,
                                                g,
                                                v,
                                                b,
                                                _,
                                                w = this._moreOptions.alignment.v,
                                                S = this._animatorsData,
                                                E = this._textData,
                                                P = this.mHelper,
                                                x = this._renderType,
                                                k = this.renderedLetters.length,
                                                A = t.l;
                                            if (this._hasMaskedPath) {
                                                if (((_ = this._pathData.m), !this._pathData.n || this._pathData._mdf)) {
                                                    var T,
                                                        C = _.v;
                                                    for (this._pathData.r.v && (C = C.reverse()), a = { tLength: 0, segments: [] }, s = C._length - 1, g = 0, n = 0; n < s; n += 1)
                                                        (T = bez.buildBezierData(C.v[n], C.v[n + 1], [C.o[n][0] - C.v[n][0], C.o[n][1] - C.v[n][1]], [C.i[n + 1][0] - C.v[n + 1][0], C.i[n + 1][1] - C.v[n + 1][1]])),
                                                            (a.tLength += T.segmentLength),
                                                            a.segments.push(T),
                                                            (g += T.segmentLength);
                                                    (n = s),
                                                        _.v.c &&
                                                            ((T = bez.buildBezierData(C.v[n], C.v[0], [C.o[n][0] - C.v[n][0], C.o[n][1] - C.v[n][1]], [C.i[0][0] - C.v[0][0], C.i[0][1] - C.v[0][1]])),
                                                            (a.tLength += T.segmentLength),
                                                            a.segments.push(T),
                                                            (g += T.segmentLength)),
                                                        (this._pathData.pi = a);
                                                }
                                                if (((a = this._pathData.pi), (o = this._pathData.f.v), (d = 0), (p = 1), (h = 0), (c = !0), (m = a.segments), o < 0 && _.v.c))
                                                    for (a.tLength < Math.abs(o) && (o = -Math.abs(o) % a.tLength), p = (f = m[(d = m.length - 1)].points).length - 1; o < 0; )
                                                        (o += f[p].partialLength), (p -= 1) < 0 && (p = (f = m[(d -= 1)].points).length - 1);
                                                (u = (f = m[d].points)[p - 1]), (y = (l = f[p]).partialLength);
                                            }
                                            (s = A.length), (r = 0), (i = 0);
                                            var I,
                                                M,
                                                D,
                                                F,
                                                L,
                                                O = 1.2 * t.finalSize * 0.714,
                                                z = !0;
                                            D = S.length;
                                            var R,
                                                B,
                                                $,
                                                N,
                                                V,
                                                G,
                                                j,
                                                q,
                                                H,
                                                W,
                                                U,
                                                Z,
                                                Y = -1,
                                                X = o,
                                                K = d,
                                                J = p,
                                                Q = -1,
                                                tt = "",
                                                et = this.defaultPropsArray;
                                            if (2 === t.j || 1 === t.j) {
                                                var rt = 0,
                                                    it = 0,
                                                    nt = 2 === t.j ? -0.5 : -1,
                                                    st = 0,
                                                    at = !0;
                                                for (n = 0; n < s; n += 1)
                                                    if (A[n].n) {
                                                        for (rt && (rt += it); st < n; ) (A[st].animatorJustifyOffset = rt), (st += 1);
                                                        (rt = 0), (at = !0);
                                                    } else {
                                                        for (M = 0; M < D; M += 1)
                                                            (I = S[M].a).t.propType &&
                                                                (at && 2 === t.j && (it += I.t.v * nt), (L = S[M].s.getMult(A[n].anIndexes[M], E.a[M].s.totalChars)).length ? (rt += I.t.v * L[0] * nt) : (rt += I.t.v * L * nt));
                                                        at = !1;
                                                    }
                                                for (rt && (rt += it); st < n; ) (A[st].animatorJustifyOffset = rt), (st += 1);
                                            }
                                            for (n = 0; n < s; n += 1) {
                                                if ((P.reset(), (N = 1), A[n].n))
                                                    (r = 0),
                                                        (i += t.yOffset),
                                                        (i += z ? 1 : 0),
                                                        (o = X),
                                                        (z = !1),
                                                        this._hasMaskedPath && ((p = J), (u = (f = m[(d = K)].points)[p - 1]), (y = (l = f[p]).partialLength), (h = 0)),
                                                        (tt = ""),
                                                        (U = ""),
                                                        (H = ""),
                                                        (Z = ""),
                                                        (et = this.defaultPropsArray);
                                                else {
                                                    if (this._hasMaskedPath) {
                                                        if (Q !== A[n].line) {
                                                            switch (t.j) {
                                                                case 1:
                                                                    o += g - t.lineWidths[A[n].line];
                                                                    break;
                                                                case 2:
                                                                    o += (g - t.lineWidths[A[n].line]) / 2;
                                                            }
                                                            Q = A[n].line;
                                                        }
                                                        Y !== A[n].ind && (A[Y] && (o += A[Y].extra), (o += A[n].an / 2), (Y = A[n].ind)), (o += w[0] * A[n].an * 0.005);
                                                        var ot = 0;
                                                        for (M = 0; M < D; M += 1)
                                                            (I = S[M].a).p.propType && ((L = S[M].s.getMult(A[n].anIndexes[M], E.a[M].s.totalChars)).length ? (ot += I.p.v[0] * L[0]) : (ot += I.p.v[0] * L)),
                                                                I.a.propType && ((L = S[M].s.getMult(A[n].anIndexes[M], E.a[M].s.totalChars)).length ? (ot += I.a.v[0] * L[0]) : (ot += I.a.v[0] * L));
                                                        for (c = !0, this._pathData.a.v && ((o = 0.5 * A[0].an + ((g - this._pathData.f.v - 0.5 * A[0].an - 0.5 * A[A.length - 1].an) * Y) / (s - 1)), (o += this._pathData.f.v)); c; )
                                                            h + y >= o + ot || !f
                                                                ? ((v = (o + ot - h) / l.partialLength),
                                                                  (B = u.point[0] + (l.point[0] - u.point[0]) * v),
                                                                  ($ = u.point[1] + (l.point[1] - u.point[1]) * v),
                                                                  P.translate(-w[0] * A[n].an * 0.005, -w[1] * O * 0.01),
                                                                  (c = !1))
                                                                : f &&
                                                                  ((h += l.partialLength),
                                                                  (p += 1) >= f.length && ((p = 0), m[(d += 1)] ? (f = m[d].points) : _.v.c ? ((p = 0), (f = m[(d = 0)].points)) : ((h -= l.partialLength), (f = null))),
                                                                  f && ((u = l), (y = (l = f[p]).partialLength)));
                                                        (R = A[n].an / 2 - A[n].add), P.translate(-R, 0, 0);
                                                    } else (R = A[n].an / 2 - A[n].add), P.translate(-R, 0, 0), P.translate(-w[0] * A[n].an * 0.005, -w[1] * O * 0.01, 0);
                                                    for (M = 0; M < D; M += 1)
                                                        (I = S[M].a).t.propType &&
                                                            ((L = S[M].s.getMult(A[n].anIndexes[M], E.a[M].s.totalChars)),
                                                            (0 === r && 0 === t.j) || (this._hasMaskedPath ? (L.length ? (o += I.t.v * L[0]) : (o += I.t.v * L)) : L.length ? (r += I.t.v * L[0]) : (r += I.t.v * L)));
                                                    for (
                                                        t.strokeWidthAnim && (G = t.sw || 0), t.strokeColorAnim && (V = t.sc ? [t.sc[0], t.sc[1], t.sc[2]] : [0, 0, 0]), t.fillColorAnim && t.fc && (j = [t.fc[0], t.fc[1], t.fc[2]]), M = 0;
                                                        M < D;
                                                        M += 1
                                                    )
                                                        (I = S[M].a).a.propType &&
                                                            ((L = S[M].s.getMult(A[n].anIndexes[M], E.a[M].s.totalChars)).length
                                                                ? P.translate(-I.a.v[0] * L[0], -I.a.v[1] * L[1], I.a.v[2] * L[2])
                                                                : P.translate(-I.a.v[0] * L, -I.a.v[1] * L, I.a.v[2] * L));
                                                    for (M = 0; M < D; M += 1)
                                                        (I = S[M].a).s.propType &&
                                                            ((L = S[M].s.getMult(A[n].anIndexes[M], E.a[M].s.totalChars)).length
                                                                ? P.scale(1 + (I.s.v[0] - 1) * L[0], 1 + (I.s.v[1] - 1) * L[1], 1)
                                                                : P.scale(1 + (I.s.v[0] - 1) * L, 1 + (I.s.v[1] - 1) * L, 1));
                                                    for (M = 0; M < D; M += 1) {
                                                        if (
                                                            ((I = S[M].a),
                                                            (L = S[M].s.getMult(A[n].anIndexes[M], E.a[M].s.totalChars)),
                                                            I.sk.propType && (L.length ? P.skewFromAxis(-I.sk.v * L[0], I.sa.v * L[1]) : P.skewFromAxis(-I.sk.v * L, I.sa.v * L)),
                                                            I.r.propType && (L.length ? P.rotateZ(-I.r.v * L[2]) : P.rotateZ(-I.r.v * L)),
                                                            I.ry.propType && (L.length ? P.rotateY(I.ry.v * L[1]) : P.rotateY(I.ry.v * L)),
                                                            I.rx.propType && (L.length ? P.rotateX(I.rx.v * L[0]) : P.rotateX(I.rx.v * L)),
                                                            I.o.propType && (L.length ? (N += (I.o.v * L[0] - N) * L[0]) : (N += (I.o.v * L - N) * L)),
                                                            t.strokeWidthAnim && I.sw.propType && (L.length ? (G += I.sw.v * L[0]) : (G += I.sw.v * L)),
                                                            t.strokeColorAnim && I.sc.propType)
                                                        )
                                                            for (q = 0; q < 3; q += 1) L.length ? (V[q] += (I.sc.v[q] - V[q]) * L[0]) : (V[q] += (I.sc.v[q] - V[q]) * L);
                                                        if (t.fillColorAnim && t.fc) {
                                                            if (I.fc.propType) for (q = 0; q < 3; q += 1) L.length ? (j[q] += (I.fc.v[q] - j[q]) * L[0]) : (j[q] += (I.fc.v[q] - j[q]) * L);
                                                            I.fh.propType && (j = L.length ? addHueToRGB(j, I.fh.v * L[0]) : addHueToRGB(j, I.fh.v * L)),
                                                                I.fs.propType && (j = L.length ? addSaturationToRGB(j, I.fs.v * L[0]) : addSaturationToRGB(j, I.fs.v * L)),
                                                                I.fb.propType && (j = L.length ? addBrightnessToRGB(j, I.fb.v * L[0]) : addBrightnessToRGB(j, I.fb.v * L));
                                                        }
                                                    }
                                                    for (M = 0; M < D; M += 1)
                                                        (I = S[M].a).p.propType &&
                                                            ((L = S[M].s.getMult(A[n].anIndexes[M], E.a[M].s.totalChars)),
                                                            this._hasMaskedPath
                                                                ? L.length
                                                                    ? P.translate(0, I.p.v[1] * L[0], -I.p.v[2] * L[1])
                                                                    : P.translate(0, I.p.v[1] * L, -I.p.v[2] * L)
                                                                : L.length
                                                                ? P.translate(I.p.v[0] * L[0], I.p.v[1] * L[1], -I.p.v[2] * L[2])
                                                                : P.translate(I.p.v[0] * L, I.p.v[1] * L, -I.p.v[2] * L));
                                                    if (
                                                        (t.strokeWidthAnim && (H = G < 0 ? 0 : G),
                                                        t.strokeColorAnim && (W = "rgb(" + Math.round(255 * V[0]) + "," + Math.round(255 * V[1]) + "," + Math.round(255 * V[2]) + ")"),
                                                        t.fillColorAnim && t.fc && (U = "rgb(" + Math.round(255 * j[0]) + "," + Math.round(255 * j[1]) + "," + Math.round(255 * j[2]) + ")"),
                                                        this._hasMaskedPath)
                                                    ) {
                                                        if ((P.translate(0, -t.ls), P.translate(0, w[1] * O * 0.01 + i, 0), this._pathData.p.v)) {
                                                            b = (l.point[1] - u.point[1]) / (l.point[0] - u.point[0]);
                                                            var lt = (180 * Math.atan(b)) / Math.PI;
                                                            l.point[0] < u.point[0] && (lt += 180), P.rotate((-lt * Math.PI) / 180);
                                                        }
                                                        P.translate(B, $, 0), (o -= w[0] * A[n].an * 0.005), A[n + 1] && Y !== A[n + 1].ind && ((o += A[n].an / 2), (o += 0.001 * t.tr * t.finalSize));
                                                    } else {
                                                        switch ((P.translate(r, i, 0), t.ps && P.translate(t.ps[0], t.ps[1] + t.ascent, 0), t.j)) {
                                                            case 1:
                                                                P.translate(A[n].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[A[n].line]), 0, 0);
                                                                break;
                                                            case 2:
                                                                P.translate(A[n].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[A[n].line]) / 2, 0, 0);
                                                        }
                                                        P.translate(0, -t.ls), P.translate(R, 0, 0), P.translate(w[0] * A[n].an * 0.005, w[1] * O * 0.01, 0), (r += A[n].l + 0.001 * t.tr * t.finalSize);
                                                    }
                                                    "html" === x
                                                        ? (tt = P.toCSS())
                                                        : "svg" === x
                                                        ? (tt = P.to2dCSS())
                                                        : (et = [
                                                              P.props[0],
                                                              P.props[1],
                                                              P.props[2],
                                                              P.props[3],
                                                              P.props[4],
                                                              P.props[5],
                                                              P.props[6],
                                                              P.props[7],
                                                              P.props[8],
                                                              P.props[9],
                                                              P.props[10],
                                                              P.props[11],
                                                              P.props[12],
                                                              P.props[13],
                                                              P.props[14],
                                                              P.props[15],
                                                          ]),
                                                        (Z = N);
                                                }
                                                k <= n
                                                    ? ((F = new LetterProps(Z, H, W, U, tt, et)), this.renderedLetters.push(F), (k += 1), (this.lettersChangedFlag = !0))
                                                    : ((F = this.renderedLetters[n]), (this.lettersChangedFlag = F.update(Z, H, W, U, tt, et) || this.lettersChangedFlag));
                                            }
                                        }
                                    }),
                                    (TextAnimatorProperty.prototype.getValue = function () {
                                        this._elem.globalData.frameId !== this._frameId && ((this._frameId = this._elem.globalData.frameId), this.iterateDynamicProperties());
                                    }),
                                    (TextAnimatorProperty.prototype.mHelper = new Matrix()),
                                    (TextAnimatorProperty.prototype.defaultPropsArray = []),
                                    extendPrototype([DynamicPropertyContainer], TextAnimatorProperty),
                                    (ITextElement.prototype.initElement = function (t, e, r) {
                                        (this.lettersChangedFlag = !0),
                                            this.initFrame(),
                                            this.initBaseData(t, e, r),
                                            (this.textProperty = new TextProperty(this, t.t, this.dynamicProperties)),
                                            (this.textAnimator = new TextAnimatorProperty(t.t, this.renderType, this)),
                                            this.initTransform(t, e, r),
                                            this.initHierarchy(),
                                            this.initRenderable(),
                                            this.initRendererElement(),
                                            this.createContainerElements(),
                                            this.createRenderableComponents(),
                                            this.createContent(),
                                            this.hide(),
                                            this.textAnimator.searchProperties(this.dynamicProperties);
                                    }),
                                    (ITextElement.prototype.prepareFrame = function (t) {
                                        (this._mdf = !1),
                                            this.prepareRenderableFrame(t),
                                            this.prepareProperties(t, this.isInRange),
                                            (this.textProperty._mdf || this.textProperty._isFirstFrame) && (this.buildNewText(), (this.textProperty._isFirstFrame = !1), (this.textProperty._mdf = !1));
                                    }),
                                    (ITextElement.prototype.createPathShape = function (t, e) {
                                        var r,
                                            i,
                                            n = e.length,
                                            s = "";
                                        for (r = 0; r < n; r += 1) "sh" === e[r].ty && ((i = e[r].ks.k), (s += buildShapeString(i, i.i.length, !0, t)));
                                        return s;
                                    }),
                                    (ITextElement.prototype.updateDocumentData = function (t, e) {
                                        this.textProperty.updateDocumentData(t, e);
                                    }),
                                    (ITextElement.prototype.canResizeFont = function (t) {
                                        this.textProperty.canResizeFont(t);
                                    }),
                                    (ITextElement.prototype.setMinimumFontSize = function (t) {
                                        this.textProperty.setMinimumFontSize(t);
                                    }),
                                    (ITextElement.prototype.applyTextPropertiesToMatrix = function (t, e, r, i, n) {
                                        switch ((t.ps && e.translate(t.ps[0], t.ps[1] + t.ascent, 0), e.translate(0, -t.ls, 0), t.j)) {
                                            case 1:
                                                e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[r]), 0, 0);
                                                break;
                                            case 2:
                                                e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[r]) / 2, 0, 0);
                                        }
                                        e.translate(i, n, 0);
                                    }),
                                    (ITextElement.prototype.buildColor = function (t) {
                                        return "rgb(" + Math.round(255 * t[0]) + "," + Math.round(255 * t[1]) + "," + Math.round(255 * t[2]) + ")";
                                    }),
                                    (ITextElement.prototype.emptyProp = new LetterProps()),
                                    (ITextElement.prototype.destroy = function () {});
                                var emptyShapeData = { shapes: [] };
                                function SVGTextLottieElement(t, e, r) {
                                    (this.textSpans = []), (this.renderType = "svg"), this.initElement(t, e, r);
                                }
                                function ISolidElement(t, e, r) {
                                    this.initElement(t, e, r);
                                }
                                function NullElement(t, e, r) {
                                    this.initFrame(), this.initBaseData(t, e, r), this.initFrame(), this.initTransform(t, e, r), this.initHierarchy();
                                }
                                function SVGRendererBase() {}
                                function ICompElement() {}
                                function SVGCompElement(t, e, r) {
                                    (this.layers = t.layers),
                                        (this.supports3d = !0),
                                        (this.completeLayers = !1),
                                        (this.pendingElements = []),
                                        (this.elements = this.layers ? createSizedArray(this.layers.length) : []),
                                        this.initElement(t, e, r),
                                        (this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : { _placeholder: !0 });
                                }
                                function SVGRenderer(t, e) {
                                    (this.animationItem = t), (this.layers = null), (this.renderedFrame = -1), (this.svgElement = createNS("svg"));
                                    var r = "";
                                    if (e && e.title) {
                                        var i = createNS("title"),
                                            n = createElementID();
                                        i.setAttribute("id", n), (i.textContent = e.title), this.svgElement.appendChild(i), (r += n);
                                    }
                                    if (e && e.description) {
                                        var s = createNS("desc"),
                                            a = createElementID();
                                        s.setAttribute("id", a), (s.textContent = e.description), this.svgElement.appendChild(s), (r += " " + a);
                                    }
                                    r && this.svgElement.setAttribute("aria-labelledby", r);
                                    var o = createNS("defs");
                                    this.svgElement.appendChild(o);
                                    var l = createNS("g");
                                    this.svgElement.appendChild(l),
                                        (this.layerElement = l),
                                        (this.renderConfig = {
                                            preserveAspectRatio: (e && e.preserveAspectRatio) || "xMidYMid meet",
                                            imagePreserveAspectRatio: (e && e.imagePreserveAspectRatio) || "xMidYMid slice",
                                            contentVisibility: (e && e.contentVisibility) || "visible",
                                            progressiveLoad: (e && e.progressiveLoad) || !1,
                                            hideOnTransparent: !(e && !1 === e.hideOnTransparent),
                                            viewBoxOnly: (e && e.viewBoxOnly) || !1,
                                            viewBoxSize: (e && e.viewBoxSize) || !1,
                                            className: (e && e.className) || "",
                                            id: (e && e.id) || "",
                                            focusable: e && e.focusable,
                                            filterSize: {
                                                width: (e && e.filterSize && e.filterSize.width) || "100%",
                                                height: (e && e.filterSize && e.filterSize.height) || "100%",
                                                x: (e && e.filterSize && e.filterSize.x) || "0%",
                                                y: (e && e.filterSize && e.filterSize.y) || "0%",
                                            },
                                            width: e && e.width,
                                            height: e && e.height,
                                            runExpressions: !e || void 0 === e.runExpressions || e.runExpressions,
                                        }),
                                        (this.globalData = { _mdf: !1, frameNum: -1, defs: o, renderConfig: this.renderConfig }),
                                        (this.elements = []),
                                        (this.pendingElements = []),
                                        (this.destroyed = !1),
                                        (this.rendererType = "svg");
                                }
                                extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement),
                                    (SVGTextLottieElement.prototype.createContent = function () {
                                        this.data.singleShape && !this.globalData.fontManager.chars && (this.textContainer = createNS("text"));
                                    }),
                                    (SVGTextLottieElement.prototype.buildTextContents = function (t) {
                                        for (var e = 0, r = t.length, i = [], n = ""; e < r; ) t[e] === String.fromCharCode(13) || t[e] === String.fromCharCode(3) ? (i.push(n), (n = "")) : (n += t[e]), (e += 1);
                                        return i.push(n), i;
                                    }),
                                    (SVGTextLottieElement.prototype.buildShapeData = function (t, e) {
                                        if (t.shapes && t.shapes.length) {
                                            var r = t.shapes[0];
                                            if (r.it) {
                                                var i = r.it[r.it.length - 1];
                                                i.s && ((i.s.k[0] = e), (i.s.k[1] = e));
                                            }
                                        }
                                        return t;
                                    }),
                                    (SVGTextLottieElement.prototype.buildNewText = function () {
                                        var t, e;
                                        this.addDynamicProperty(this);
                                        var r = this.textProperty.currentData;
                                        (this.renderedLetters = createSizedArray(r ? r.l.length : 0)),
                                            r.fc ? this.layerElement.setAttribute("fill", this.buildColor(r.fc)) : this.layerElement.setAttribute("fill", "rgba(0,0,0,0)"),
                                            r.sc && (this.layerElement.setAttribute("stroke", this.buildColor(r.sc)), this.layerElement.setAttribute("stroke-width", r.sw)),
                                            this.layerElement.setAttribute("font-size", r.finalSize);
                                        var i = this.globalData.fontManager.getFontByName(r.f);
                                        if (i.fClass) this.layerElement.setAttribute("class", i.fClass);
                                        else {
                                            this.layerElement.setAttribute("font-family", i.fFamily);
                                            var n = r.fWeight,
                                                s = r.fStyle;
                                            this.layerElement.setAttribute("font-style", s), this.layerElement.setAttribute("font-weight", n);
                                        }
                                        this.layerElement.setAttribute("aria-label", r.t);
                                        var a,
                                            o = r.l || [],
                                            l = !!this.globalData.fontManager.chars;
                                        e = o.length;
                                        var h = this.mHelper,
                                            c = this.data.singleShape,
                                            p = 0,
                                            d = 0,
                                            u = !0,
                                            f = 0.001 * r.tr * r.finalSize;
                                        if (!c || l || r.sz) {
                                            var m,
                                                y = this.textSpans.length;
                                            for (t = 0; t < e; t += 1) {
                                                if ((this.textSpans[t] || (this.textSpans[t] = { span: null, childSpan: null, glyph: null }), !l || !c || 0 === t)) {
                                                    if (((a = y > t ? this.textSpans[t].span : createNS(l ? "g" : "text")), y <= t)) {
                                                        if ((a.setAttribute("stroke-linecap", "butt"), a.setAttribute("stroke-linejoin", "round"), a.setAttribute("stroke-miterlimit", "4"), (this.textSpans[t].span = a), l)) {
                                                            var g = createNS("g");
                                                            a.appendChild(g), (this.textSpans[t].childSpan = g);
                                                        }
                                                        (this.textSpans[t].span = a), this.layerElement.appendChild(a);
                                                    }
                                                    a.style.display = "inherit";
                                                }
                                                if ((h.reset(), c && (o[t].n && ((p = -f), (d += r.yOffset), (d += u ? 1 : 0), (u = !1)), this.applyTextPropertiesToMatrix(r, h, o[t].line, p, d), (p += o[t].l || 0), (p += f)), l)) {
                                                    var v;
                                                    if (1 === (m = this.globalData.fontManager.getCharData(r.finalText[t], i.fStyle, this.globalData.fontManager.getFontByName(r.f).fFamily)).t)
                                                        v = new SVGCompElement(m.data, this.globalData, this);
                                                    else {
                                                        var b = emptyShapeData;
                                                        m.data && m.data.shapes && (b = this.buildShapeData(m.data, r.finalSize)), (v = new SVGShapeElement(b, this.globalData, this));
                                                    }
                                                    if (this.textSpans[t].glyph) {
                                                        var _ = this.textSpans[t].glyph;
                                                        this.textSpans[t].childSpan.removeChild(_.layerElement), _.destroy();
                                                    }
                                                    (this.textSpans[t].glyph = v),
                                                        (v._debug = !0),
                                                        v.prepareFrame(0),
                                                        v.renderFrame(),
                                                        this.textSpans[t].childSpan.appendChild(v.layerElement),
                                                        1 === m.t && this.textSpans[t].childSpan.setAttribute("transform", "scale(" + r.finalSize / 100 + "," + r.finalSize / 100 + ")");
                                                } else
                                                    c && a.setAttribute("transform", "translate(" + h.props[12] + "," + h.props[13] + ")"),
                                                        (a.textContent = o[t].val),
                                                        a.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve");
                                            }
                                            c && a && a.setAttribute("d", "");
                                        } else {
                                            var w = this.textContainer,
                                                S = "start";
                                            switch (r.j) {
                                                case 1:
                                                    S = "end";
                                                    break;
                                                case 2:
                                                    S = "middle";
                                                    break;
                                                default:
                                                    S = "start";
                                            }
                                            w.setAttribute("text-anchor", S), w.setAttribute("letter-spacing", f);
                                            var E = this.buildTextContents(r.finalText);
                                            for (e = E.length, d = r.ps ? r.ps[1] + r.ascent : 0, t = 0; t < e; t += 1)
                                                ((a = this.textSpans[t].span || createNS("tspan")).textContent = E[t]),
                                                    a.setAttribute("x", 0),
                                                    a.setAttribute("y", d),
                                                    (a.style.display = "inherit"),
                                                    w.appendChild(a),
                                                    this.textSpans[t] || (this.textSpans[t] = { span: null, glyph: null }),
                                                    (this.textSpans[t].span = a),
                                                    (d += r.finalLineHeight);
                                            this.layerElement.appendChild(w);
                                        }
                                        for (; t < this.textSpans.length; ) (this.textSpans[t].span.style.display = "none"), (t += 1);
                                        this._sizeChanged = !0;
                                    }),
                                    (SVGTextLottieElement.prototype.sourceRectAtTime = function () {
                                        if ((this.prepareFrame(this.comp.renderedFrame - this.data.st), this.renderInnerContent(), this._sizeChanged)) {
                                            this._sizeChanged = !1;
                                            var t = this.layerElement.getBBox();
                                            this.bbox = { top: t.y, left: t.x, width: t.width, height: t.height };
                                        }
                                        return this.bbox;
                                    }),
                                    (SVGTextLottieElement.prototype.getValue = function () {
                                        var t,
                                            e,
                                            r = this.textSpans.length;
                                        for (this.renderedFrame = this.comp.renderedFrame, t = 0; t < r; t += 1) (e = this.textSpans[t].glyph) && (e.prepareFrame(this.comp.renderedFrame - this.data.st), e._mdf && (this._mdf = !0));
                                    }),
                                    (SVGTextLottieElement.prototype.renderInnerContent = function () {
                                        if ((!this.data.singleShape || this._mdf) && (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag), this.lettersChangedFlag || this.textAnimator.lettersChangedFlag)) {
                                            var t, e;
                                            this._sizeChanged = !0;
                                            var r,
                                                i,
                                                n,
                                                s = this.textAnimator.renderedLetters,
                                                a = this.textProperty.currentData.l;
                                            for (e = a.length, t = 0; t < e; t += 1)
                                                a[t].n ||
                                                    ((r = s[t]),
                                                    (i = this.textSpans[t].span),
                                                    (n = this.textSpans[t].glyph) && n.renderFrame(),
                                                    r._mdf.m && i.setAttribute("transform", r.m),
                                                    r._mdf.o && i.setAttribute("opacity", r.o),
                                                    r._mdf.sw && i.setAttribute("stroke-width", r.sw),
                                                    r._mdf.sc && i.setAttribute("stroke", r.sc),
                                                    r._mdf.fc && i.setAttribute("fill", r.fc));
                                        }
                                    }),
                                    extendPrototype([IImageElement], ISolidElement),
                                    (ISolidElement.prototype.createContent = function () {
                                        var t = createNS("rect");
                                        t.setAttribute("width", this.data.sw), t.setAttribute("height", this.data.sh), t.setAttribute("fill", this.data.sc), this.layerElement.appendChild(t);
                                    }),
                                    (NullElement.prototype.prepareFrame = function (t) {
                                        this.prepareProperties(t, !0);
                                    }),
                                    (NullElement.prototype.renderFrame = function () {}),
                                    (NullElement.prototype.getBaseElement = function () {
                                        return null;
                                    }),
                                    (NullElement.prototype.destroy = function () {}),
                                    (NullElement.prototype.sourceRectAtTime = function () {}),
                                    (NullElement.prototype.hide = function () {}),
                                    extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement),
                                    extendPrototype([BaseRenderer], SVGRendererBase),
                                    (SVGRendererBase.prototype.createNull = function (t) {
                                        return new NullElement(t, this.globalData, this);
                                    }),
                                    (SVGRendererBase.prototype.createShape = function (t) {
                                        return new SVGShapeElement(t, this.globalData, this);
                                    }),
                                    (SVGRendererBase.prototype.createText = function (t) {
                                        return new SVGTextLottieElement(t, this.globalData, this);
                                    }),
                                    (SVGRendererBase.prototype.createImage = function (t) {
                                        return new IImageElement(t, this.globalData, this);
                                    }),
                                    (SVGRendererBase.prototype.createSolid = function (t) {
                                        return new ISolidElement(t, this.globalData, this);
                                    }),
                                    (SVGRendererBase.prototype.configAnimation = function (t) {
                                        this.svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg"),
                                            this.svgElement.setAttribute("xmlns:xlink", "http://www.w3.org/1999/xlink"),
                                            this.renderConfig.viewBoxSize ? this.svgElement.setAttribute("viewBox", this.renderConfig.viewBoxSize) : this.svgElement.setAttribute("viewBox", "0 0 " + t.w + " " + t.h),
                                            this.renderConfig.viewBoxOnly ||
                                                (this.svgElement.setAttribute("width", t.w),
                                                this.svgElement.setAttribute("height", t.h),
                                                (this.svgElement.style.width = "100%"),
                                                (this.svgElement.style.height = "100%"),
                                                (this.svgElement.style.transform = "translate3d(0,0,0)"),
                                                (this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility)),
                                            this.renderConfig.width && this.svgElement.setAttribute("width", this.renderConfig.width),
                                            this.renderConfig.height && this.svgElement.setAttribute("height", this.renderConfig.height),
                                            this.renderConfig.className && this.svgElement.setAttribute("class", this.renderConfig.className),
                                            this.renderConfig.id && this.svgElement.setAttribute("id", this.renderConfig.id),
                                            void 0 !== this.renderConfig.focusable && this.svgElement.setAttribute("focusable", this.renderConfig.focusable),
                                            this.svgElement.setAttribute("preserveAspectRatio", this.renderConfig.preserveAspectRatio),
                                            this.animationItem.wrapper.appendChild(this.svgElement);
                                        var e = this.globalData.defs;
                                        this.setupGlobalData(t, e), (this.globalData.progressiveLoad = this.renderConfig.progressiveLoad), (this.data = t);
                                        var r = createNS("clipPath"),
                                            i = createNS("rect");
                                        i.setAttribute("width", t.w), i.setAttribute("height", t.h), i.setAttribute("x", 0), i.setAttribute("y", 0);
                                        var n = createElementID();
                                        r.setAttribute("id", n),
                                            r.appendChild(i),
                                            this.layerElement.setAttribute("clip-path", "url(" + getLocationHref() + "#" + n + ")"),
                                            e.appendChild(r),
                                            (this.layers = t.layers),
                                            (this.elements = createSizedArray(t.layers.length));
                                    }),
                                    (SVGRendererBase.prototype.destroy = function () {
                                        var t;
                                        this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""), (this.layerElement = null), (this.globalData.defs = null);
                                        var e = this.layers ? this.layers.length : 0;
                                        for (t = 0; t < e; t += 1) this.elements[t] && this.elements[t].destroy();
                                        (this.elements.length = 0), (this.destroyed = !0), (this.animationItem = null);
                                    }),
                                    (SVGRendererBase.prototype.updateContainerSize = function () {}),
                                    (SVGRendererBase.prototype.findIndexByInd = function (t) {
                                        var e = 0,
                                            r = this.layers.length;
                                        for (e = 0; e < r; e += 1) if (this.layers[e].ind === t) return e;
                                        return -1;
                                    }),
                                    (SVGRendererBase.prototype.buildItem = function (t) {
                                        var e = this.elements;
                                        if (!e[t] && 99 !== this.layers[t].ty) {
                                            e[t] = !0;
                                            var r = this.createItem(this.layers[t]);
                                            if (
                                                ((e[t] = r),
                                                getExpressionsPlugin() && (0 === this.layers[t].ty && this.globalData.projectInterface.registerComposition(r), r.initExpressions()),
                                                this.appendElementInPos(r, t),
                                                this.layers[t].tt)
                                            ) {
                                                var i = "tp" in this.layers[t] ? this.findIndexByInd(this.layers[t].tp) : t - 1;
                                                if (-1 === i) return;
                                                if (this.elements[i] && !0 !== this.elements[i]) {
                                                    var n = e[i].getMatte(this.layers[t].tt);
                                                    r.setMatte(n);
                                                } else this.buildItem(i), this.addPendingElement(r);
                                            }
                                        }
                                    }),
                                    (SVGRendererBase.prototype.checkPendingElements = function () {
                                        for (; this.pendingElements.length; ) {
                                            var t = this.pendingElements.pop();
                                            if ((t.checkParenting(), t.data.tt))
                                                for (var e = 0, r = this.elements.length; e < r; ) {
                                                    if (this.elements[e] === t) {
                                                        var i = "tp" in t.data ? this.findIndexByInd(t.data.tp) : e - 1,
                                                            n = this.elements[i].getMatte(this.layers[e].tt);
                                                        t.setMatte(n);
                                                        break;
                                                    }
                                                    e += 1;
                                                }
                                        }
                                    }),
                                    (SVGRendererBase.prototype.renderFrame = function (t) {
                                        if (this.renderedFrame !== t && !this.destroyed) {
                                            var e;
                                            null === t ? (t = this.renderedFrame) : (this.renderedFrame = t),
                                                (this.globalData.frameNum = t),
                                                (this.globalData.frameId += 1),
                                                (this.globalData.projectInterface.currentFrame = t),
                                                (this.globalData._mdf = !1);
                                            var r = this.layers.length;
                                            for (this.completeLayers || this.checkLayers(t), e = r - 1; e >= 0; e -= 1) (this.completeLayers || this.elements[e]) && this.elements[e].prepareFrame(t - this.layers[e].st);
                                            if (this.globalData._mdf) for (e = 0; e < r; e += 1) (this.completeLayers || this.elements[e]) && this.elements[e].renderFrame();
                                        }
                                    }),
                                    (SVGRendererBase.prototype.appendElementInPos = function (t, e) {
                                        var r = t.getBaseElement();
                                        if (r) {
                                            for (var i, n = 0; n < e; ) this.elements[n] && !0 !== this.elements[n] && this.elements[n].getBaseElement() && (i = this.elements[n].getBaseElement()), (n += 1);
                                            i ? this.layerElement.insertBefore(r, i) : this.layerElement.appendChild(r);
                                        }
                                    }),
                                    (SVGRendererBase.prototype.hide = function () {
                                        this.layerElement.style.display = "none";
                                    }),
                                    (SVGRendererBase.prototype.show = function () {
                                        this.layerElement.style.display = "block";
                                    }),
                                    extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement),
                                    (ICompElement.prototype.initElement = function (t, e, r) {
                                        this.initFrame(),
                                            this.initBaseData(t, e, r),
                                            this.initTransform(t, e, r),
                                            this.initRenderable(),
                                            this.initHierarchy(),
                                            this.initRendererElement(),
                                            this.createContainerElements(),
                                            this.createRenderableComponents(),
                                            (!this.data.xt && e.progressiveLoad) || this.buildAllItems(),
                                            this.hide();
                                    }),
                                    (ICompElement.prototype.prepareFrame = function (t) {
                                        if (((this._mdf = !1), this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), this.isInRange || this.data.xt)) {
                                            if (this.tm._placeholder) this.renderedFrame = t / this.data.sr;
                                            else {
                                                var e = this.tm.v;
                                                e === this.data.op && (e = this.data.op - 1), (this.renderedFrame = e);
                                            }
                                            var r,
                                                i = this.elements.length;
                                            for (this.completeLayers || this.checkLayers(this.renderedFrame), r = i - 1; r >= 0; r -= 1)
                                                (this.completeLayers || this.elements[r]) && (this.elements[r].prepareFrame(this.renderedFrame - this.layers[r].st), this.elements[r]._mdf && (this._mdf = !0));
                                        }
                                    }),
                                    (ICompElement.prototype.renderInnerContent = function () {
                                        var t,
                                            e = this.layers.length;
                                        for (t = 0; t < e; t += 1) (this.completeLayers || this.elements[t]) && this.elements[t].renderFrame();
                                    }),
                                    (ICompElement.prototype.setElements = function (t) {
                                        this.elements = t;
                                    }),
                                    (ICompElement.prototype.getElements = function () {
                                        return this.elements;
                                    }),
                                    (ICompElement.prototype.destroyElements = function () {
                                        var t,
                                            e = this.layers.length;
                                        for (t = 0; t < e; t += 1) this.elements[t] && this.elements[t].destroy();
                                    }),
                                    (ICompElement.prototype.destroy = function () {
                                        this.destroyElements(), this.destroyBaseElement();
                                    }),
                                    extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement),
                                    (SVGCompElement.prototype.createComp = function (t) {
                                        return new SVGCompElement(t, this.globalData, this);
                                    }),
                                    extendPrototype([SVGRendererBase], SVGRenderer),
                                    (SVGRenderer.prototype.createComp = function (t) {
                                        return new SVGCompElement(t, this.globalData, this);
                                    }),
                                    registerRenderer("svg", SVGRenderer),
                                    ShapeModifiers.registerModifier("tm", TrimModifier),
                                    ShapeModifiers.registerModifier("pb", PuckerAndBloatModifier),
                                    ShapeModifiers.registerModifier("rp", RepeaterModifier),
                                    ShapeModifiers.registerModifier("rd", RoundCornersModifier),
                                    ShapeModifiers.registerModifier("zz", ZigZagModifier),
                                    ShapeModifiers.registerModifier("op", OffsetPathModifier);
                                var CompExpressionInterface = function (t) {
                                        function e(e) {
                                            for (var r = 0, i = t.layers.length; r < i; ) {
                                                if (t.layers[r].nm === e || t.layers[r].ind === e) return t.elements[r].layerInterface;
                                                r += 1;
                                            }
                                            return null;
                                        }
                                        return (
                                            Object.defineProperty(e, "_name", { value: t.data.nm }),
                                            (e.layer = e),
                                            (e.pixelAspect = 1),
                                            (e.height = t.data.h || t.globalData.compSize.h),
                                            (e.width = t.data.w || t.globalData.compSize.w),
                                            (e.pixelAspect = 1),
                                            (e.frameDuration = 1 / t.globalData.frameRate),
                                            (e.displayStartTime = 0),
                                            (e.numLayers = t.layers.length),
                                            e
                                        );
                                    },
                                    Expressions = (function () {
                                        var t = {
                                            initExpressions: function (t) {
                                                var e = 0,
                                                    r = [];
                                                (t.renderer.compInterface = CompExpressionInterface(t.renderer)),
                                                    t.renderer.globalData.projectInterface.registerComposition(t.renderer),
                                                    (t.renderer.globalData.pushExpression = function () {
                                                        e += 1;
                                                    }),
                                                    (t.renderer.globalData.popExpression = function () {
                                                        0 == (e -= 1) &&
                                                            (function () {
                                                                var t,
                                                                    e = r.length;
                                                                for (t = 0; t < e; t += 1) r[t].release();
                                                                r.length = 0;
                                                            })();
                                                    }),
                                                    (t.renderer.globalData.registerExpressionProperty = function (t) {
                                                        -1 === r.indexOf(t) && r.push(t);
                                                    });
                                            },
                                        };
                                        return t;
                                    })(),
                                    MaskManagerInterface = (function () {
                                        function t(t, e) {
                                            (this._mask = t), (this._data = e);
                                        }
                                        return (
                                            Object.defineProperty(t.prototype, "maskPath", {
                                                get: function () {
                                                    return this._mask.prop.k && this._mask.prop.getValue(), this._mask.prop;
                                                },
                                            }),
                                            Object.defineProperty(t.prototype, "maskOpacity", {
                                                get: function () {
                                                    return this._mask.op.k && this._mask.op.getValue(), 100 * this._mask.op.v;
                                                },
                                            }),
                                            function (e) {
                                                var r,
                                                    i = createSizedArray(e.viewData.length),
                                                    n = e.viewData.length;
                                                for (r = 0; r < n; r += 1) i[r] = new t(e.viewData[r], e.masksProperties[r]);
                                                return function (t) {
                                                    for (r = 0; r < n; ) {
                                                        if (e.masksProperties[r].nm === t) return i[r];
                                                        r += 1;
                                                    }
                                                    return null;
                                                };
                                            }
                                        );
                                    })(),
                                    ExpressionPropertyInterface = (function () {
                                        var t = { pv: 0, v: 0, mult: 1 },
                                            e = { pv: [0, 0, 0], v: [0, 0, 0], mult: 1 };
                                        function r(t, e, r) {
                                            Object.defineProperty(t, "velocity", {
                                                get: function () {
                                                    return e.getVelocityAtTime(e.comp.currentFrame);
                                                },
                                            }),
                                                (t.numKeys = e.keyframes ? e.keyframes.length : 0),
                                                (t.key = function (i) {
                                                    if (!t.numKeys) return 0;
                                                    var n;
                                                    n = "s" in e.keyframes[i - 1] ? e.keyframes[i - 1].s : "e" in e.keyframes[i - 2] ? e.keyframes[i - 2].e : e.keyframes[i - 2].s;
                                                    var s = "unidimensional" === r ? new Number(n) : Object.assign({}, n);
                                                    return (s.time = e.keyframes[i - 1].t / e.elem.comp.globalData.frameRate), (s.value = "unidimensional" === r ? n[0] : n), s;
                                                }),
                                                (t.valueAtTime = e.getValueAtTime),
                                                (t.speedAtTime = e.getSpeedAtTime),
                                                (t.velocityAtTime = e.getVelocityAtTime),
                                                (t.propertyGroup = e.propertyGroup);
                                        }
                                        function i() {
                                            return t;
                                        }
                                        return function (n) {
                                            return n
                                                ? "unidimensional" === n.propType
                                                    ? (function (e) {
                                                          (e && "pv" in e) || (e = t);
                                                          var i = 1 / e.mult,
                                                              n = e.pv * i,
                                                              s = new Number(n);
                                                          return (
                                                              (s.value = n),
                                                              r(s, e, "unidimensional"),
                                                              function () {
                                                                  return e.k && e.getValue(), (n = e.v * i), s.value !== n && (((s = new Number(n)).value = n), r(s, e, "unidimensional")), s;
                                                              }
                                                          );
                                                      })(n)
                                                    : (function (t) {
                                                          (t && "pv" in t) || (t = e);
                                                          var i = 1 / t.mult,
                                                              n = (t.data && t.data.l) || t.pv.length,
                                                              s = createTypedArray("float32", n),
                                                              a = createTypedArray("float32", n);
                                                          return (
                                                              (s.value = a),
                                                              r(s, t, "multidimensional"),
                                                              function () {
                                                                  t.k && t.getValue();
                                                                  for (var e = 0; e < n; e += 1) (a[e] = t.v[e] * i), (s[e] = a[e]);
                                                                  return s;
                                                              }
                                                          );
                                                      })(n)
                                                : i;
                                        };
                                    })(),
                                    TransformExpressionInterface = function (t) {
                                        function e(t) {
                                            switch (t) {
                                                case "scale":
                                                case "Scale":
                                                case "ADBE Scale":
                                                case 6:
                                                    return e.scale;
                                                case "rotation":
                                                case "Rotation":
                                                case "ADBE Rotation":
                                                case "ADBE Rotate Z":
                                                case 10:
                                                    return e.rotation;
                                                case "ADBE Rotate X":
                                                    return e.xRotation;
                                                case "ADBE Rotate Y":
                                                    return e.yRotation;
                                                case "position":
                                                case "Position":
                                                case "ADBE Position":
                                                case 2:
                                                    return e.position;
                                                case "ADBE Position_0":
                                                    return e.xPosition;
                                                case "ADBE Position_1":
                                                    return e.yPosition;
                                                case "ADBE Position_2":
                                                    return e.zPosition;
                                                case "anchorPoint":
                                                case "AnchorPoint":
                                                case "Anchor Point":
                                                case "ADBE AnchorPoint":
                                                case 1:
                                                    return e.anchorPoint;
                                                case "opacity":
                                                case "Opacity":
                                                case 11:
                                                    return e.opacity;
                                                default:
                                                    return null;
                                            }
                                        }
                                        var r, i, n, s;
                                        return (
                                            Object.defineProperty(e, "rotation", { get: ExpressionPropertyInterface(t.r || t.rz) }),
                                            Object.defineProperty(e, "zRotation", { get: ExpressionPropertyInterface(t.rz || t.r) }),
                                            Object.defineProperty(e, "xRotation", { get: ExpressionPropertyInterface(t.rx) }),
                                            Object.defineProperty(e, "yRotation", { get: ExpressionPropertyInterface(t.ry) }),
                                            Object.defineProperty(e, "scale", { get: ExpressionPropertyInterface(t.s) }),
                                            t.p ? (s = ExpressionPropertyInterface(t.p)) : ((r = ExpressionPropertyInterface(t.px)), (i = ExpressionPropertyInterface(t.py)), t.pz && (n = ExpressionPropertyInterface(t.pz))),
                                            Object.defineProperty(e, "position", {
                                                get: function () {
                                                    return t.p ? s() : [r(), i(), n ? n() : 0];
                                                },
                                            }),
                                            Object.defineProperty(e, "xPosition", { get: ExpressionPropertyInterface(t.px) }),
                                            Object.defineProperty(e, "yPosition", { get: ExpressionPropertyInterface(t.py) }),
                                            Object.defineProperty(e, "zPosition", { get: ExpressionPropertyInterface(t.pz) }),
                                            Object.defineProperty(e, "anchorPoint", { get: ExpressionPropertyInterface(t.a) }),
                                            Object.defineProperty(e, "opacity", { get: ExpressionPropertyInterface(t.o) }),
                                            Object.defineProperty(e, "skew", { get: ExpressionPropertyInterface(t.sk) }),
                                            Object.defineProperty(e, "skewAxis", { get: ExpressionPropertyInterface(t.sa) }),
                                            Object.defineProperty(e, "orientation", { get: ExpressionPropertyInterface(t.or) }),
                                            e
                                        );
                                    },
                                    LayerExpressionInterface = (function () {
                                        function t(t) {
                                            var e = new Matrix();
                                            return void 0 !== t ? this._elem.finalTransform.mProp.getValueAtTime(t).clone(e) : this._elem.finalTransform.mProp.applyToMatrix(e), e;
                                        }
                                        function e(t, e) {
                                            var r = this.getMatrix(e);
                                            return (r.props[12] = 0), (r.props[13] = 0), (r.props[14] = 0), this.applyPoint(r, t);
                                        }
                                        function r(t, e) {
                                            var r = this.getMatrix(e);
                                            return this.applyPoint(r, t);
                                        }
                                        function i(t, e) {
                                            var r = this.getMatrix(e);
                                            return (r.props[12] = 0), (r.props[13] = 0), (r.props[14] = 0), this.invertPoint(r, t);
                                        }
                                        function n(t, e) {
                                            var r = this.getMatrix(e);
                                            return this.invertPoint(r, t);
                                        }
                                        function s(t, e) {
                                            if (this._elem.hierarchy && this._elem.hierarchy.length) {
                                                var r,
                                                    i = this._elem.hierarchy.length;
                                                for (r = 0; r < i; r += 1) this._elem.hierarchy[r].finalTransform.mProp.applyToMatrix(t);
                                            }
                                            return t.applyToPointArray(e[0], e[1], e[2] || 0);
                                        }
                                        function a(t, e) {
                                            if (this._elem.hierarchy && this._elem.hierarchy.length) {
                                                var r,
                                                    i = this._elem.hierarchy.length;
                                                for (r = 0; r < i; r += 1) this._elem.hierarchy[r].finalTransform.mProp.applyToMatrix(t);
                                            }
                                            return t.inversePoint(e);
                                        }
                                        function o(t) {
                                            var e = new Matrix();
                                            if ((e.reset(), this._elem.finalTransform.mProp.applyToMatrix(e), this._elem.hierarchy && this._elem.hierarchy.length)) {
                                                var r,
                                                    i = this._elem.hierarchy.length;
                                                for (r = 0; r < i; r += 1) this._elem.hierarchy[r].finalTransform.mProp.applyToMatrix(e);
                                                return e.inversePoint(t);
                                            }
                                            return e.inversePoint(t);
                                        }
                                        function l() {
                                            return [1, 1, 1, 1];
                                        }
                                        return function (h) {
                                            var c;
                                            function p(t) {
                                                switch (t) {
                                                    case "ADBE Root Vectors Group":
                                                    case "Contents":
                                                    case 2:
                                                        return p.shapeInterface;
                                                    case 1:
                                                    case 6:
                                                    case "Transform":
                                                    case "transform":
                                                    case "ADBE Transform Group":
                                                        return c;
                                                    case 4:
                                                    case "ADBE Effect Parade":
                                                    case "effects":
                                                    case "Effects":
                                                        return p.effect;
                                                    case "ADBE Text Properties":
                                                        return p.textInterface;
                                                    default:
                                                        return null;
                                                }
                                            }
                                            (p.getMatrix = t),
                                                (p.invertPoint = a),
                                                (p.applyPoint = s),
                                                (p.toWorld = r),
                                                (p.toWorldVec = e),
                                                (p.fromWorld = n),
                                                (p.fromWorldVec = i),
                                                (p.toComp = r),
                                                (p.fromComp = o),
                                                (p.sampleImage = l),
                                                (p.sourceRectAtTime = h.sourceRectAtTime.bind(h)),
                                                (p._elem = h);
                                            var d = getDescriptor((c = TransformExpressionInterface(h.finalTransform.mProp)), "anchorPoint");
                                            return (
                                                Object.defineProperties(p, {
                                                    hasParent: {
                                                        get: function () {
                                                            return h.hierarchy.length;
                                                        },
                                                    },
                                                    parent: {
                                                        get: function () {
                                                            return h.hierarchy[0].layerInterface;
                                                        },
                                                    },
                                                    rotation: getDescriptor(c, "rotation"),
                                                    scale: getDescriptor(c, "scale"),
                                                    position: getDescriptor(c, "position"),
                                                    opacity: getDescriptor(c, "opacity"),
                                                    anchorPoint: d,
                                                    anchor_point: d,
                                                    transform: {
                                                        get: function () {
                                                            return c;
                                                        },
                                                    },
                                                    active: {
                                                        get: function () {
                                                            return h.isInRange;
                                                        },
                                                    },
                                                }),
                                                (p.startTime = h.data.st),
                                                (p.index = h.data.ind),
                                                (p.source = h.data.refId),
                                                (p.height = 0 === h.data.ty ? h.data.h : 100),
                                                (p.width = 0 === h.data.ty ? h.data.w : 100),
                                                (p.inPoint = h.data.ip / h.comp.globalData.frameRate),
                                                (p.outPoint = h.data.op / h.comp.globalData.frameRate),
                                                (p._name = h.data.nm),
                                                (p.registerMaskInterface = function (t) {
                                                    p.mask = new MaskManagerInterface(t, h);
                                                }),
                                                (p.registerEffectsInterface = function (t) {
                                                    p.effect = t;
                                                }),
                                                p
                                            );
                                        };
                                    })(),
                                    propertyGroupFactory = function (t, e) {
                                        return function (r) {
                                            return (r = void 0 === r ? 1 : r) <= 0 ? t : e(r - 1);
                                        };
                                    },
                                    PropertyInterface = function (t, e) {
                                        var r = { _name: t };
                                        return function (t) {
                                            return (t = void 0 === t ? 1 : t) <= 0 ? r : e(t - 1);
                                        };
                                    },
                                    EffectsExpressionInterface = (function () {
                                        function t(r, i, n, s) {
                                            function a(t) {
                                                for (var e = r.ef, i = 0, n = e.length; i < n; ) {
                                                    if (t === e[i].nm || t === e[i].mn || t === e[i].ix) return 5 === e[i].ty ? h[i] : h[i]();
                                                    i += 1;
                                                }
                                                throw new Error();
                                            }
                                            var o,
                                                l = propertyGroupFactory(a, n),
                                                h = [],
                                                c = r.ef.length;
                                            for (o = 0; o < c; o += 1) 5 === r.ef[o].ty ? h.push(t(r.ef[o], i.effectElements[o], i.effectElements[o].propertyGroup, s)) : h.push(e(i.effectElements[o], r.ef[o].ty, s, l));
                                            return (
                                                "ADBE Color Control" === r.mn &&
                                                    Object.defineProperty(a, "color", {
                                                        get: function () {
                                                            return h[0]();
                                                        },
                                                    }),
                                                Object.defineProperties(a, {
                                                    numProperties: {
                                                        get: function () {
                                                            return r.np;
                                                        },
                                                    },
                                                    _name: { value: r.nm },
                                                    propertyGroup: { value: l },
                                                }),
                                                (a.enabled = 0 !== r.en),
                                                (a.active = a.enabled),
                                                a
                                            );
                                        }
                                        function e(t, e, r, i) {
                                            var n = ExpressionPropertyInterface(t.p);
                                            return (
                                                t.p.setGroupProperty && t.p.setGroupProperty(PropertyInterface("", i)),
                                                function () {
                                                    return 10 === e ? r.comp.compInterface(t.p.v) : n();
                                                }
                                            );
                                        }
                                        return {
                                            createEffectsInterface: function (e, r) {
                                                if (e.effectsManager) {
                                                    var i,
                                                        n = [],
                                                        s = e.data.ef,
                                                        a = e.effectsManager.effectElements.length;
                                                    for (i = 0; i < a; i += 1) n.push(t(s[i], e.effectsManager.effectElements[i], r, e));
                                                    var o = e.data.ef || [],
                                                        l = function (t) {
                                                            for (i = 0, a = o.length; i < a; ) {
                                                                if (t === o[i].nm || t === o[i].mn || t === o[i].ix) return n[i];
                                                                i += 1;
                                                            }
                                                            return null;
                                                        };
                                                    return (
                                                        Object.defineProperty(l, "numProperties", {
                                                            get: function () {
                                                                return o.length;
                                                            },
                                                        }),
                                                        l
                                                    );
                                                }
                                                return null;
                                            },
                                        };
                                    })(),
                                    ShapePathInterface = function (t, e, r) {
                                        var i = e.sh;
                                        function n(t) {
                                            return "Shape" === t || "shape" === t || "Path" === t || "path" === t || "ADBE Vector Shape" === t || 2 === t ? n.path : null;
                                        }
                                        var s = propertyGroupFactory(n, r);
                                        return (
                                            i.setGroupProperty(PropertyInterface("Path", s)),
                                            Object.defineProperties(n, {
                                                path: {
                                                    get: function () {
                                                        return i.k && i.getValue(), i;
                                                    },
                                                },
                                                shape: {
                                                    get: function () {
                                                        return i.k && i.getValue(), i;
                                                    },
                                                },
                                                _name: { value: t.nm },
                                                ix: { value: t.ix },
                                                propertyIndex: { value: t.ix },
                                                mn: { value: t.mn },
                                                propertyGroup: { value: r },
                                            }),
                                            n
                                        );
                                    },
                                    ShapeExpressionInterface = (function () {
                                        function t(t, a, d) {
                                            var u,
                                                f = [],
                                                m = t ? t.length : 0;
                                            for (u = 0; u < m; u += 1)
                                                "gr" === t[u].ty
                                                    ? f.push(e(t[u], a[u], d))
                                                    : "fl" === t[u].ty
                                                    ? f.push(r(t[u], a[u], d))
                                                    : "st" === t[u].ty
                                                    ? f.push(n(t[u], a[u], d))
                                                    : "tm" === t[u].ty
                                                    ? f.push(s(t[u], a[u], d))
                                                    : "tr" === t[u].ty ||
                                                      ("el" === t[u].ty
                                                          ? f.push(o(t[u], a[u], d))
                                                          : "sr" === t[u].ty
                                                          ? f.push(l(t[u], a[u], d))
                                                          : "sh" === t[u].ty
                                                          ? f.push(ShapePathInterface(t[u], a[u], d))
                                                          : "rc" === t[u].ty
                                                          ? f.push(h(t[u], a[u], d))
                                                          : "rd" === t[u].ty
                                                          ? f.push(c(t[u], a[u], d))
                                                          : "rp" === t[u].ty
                                                          ? f.push(p(t[u], a[u], d))
                                                          : "gf" === t[u].ty
                                                          ? f.push(i(t[u], a[u], d))
                                                          : f.push(
                                                                (t[u],
                                                                a[u],
                                                                function () {
                                                                    return null;
                                                                })
                                                            ));
                                            return f;
                                        }
                                        function e(e, r, i) {
                                            var n = function (t) {
                                                switch (t) {
                                                    case "ADBE Vectors Group":
                                                    case "Contents":
                                                    case 2:
                                                        return n.content;
                                                    default:
                                                        return n.transform;
                                                }
                                            };
                                            n.propertyGroup = propertyGroupFactory(n, i);
                                            var s = (function (e, r, i) {
                                                    var n,
                                                        s = function (t) {
                                                            for (var e = 0, r = n.length; e < r; ) {
                                                                if (n[e]._name === t || n[e].mn === t || n[e].propertyIndex === t || n[e].ix === t || n[e].ind === t) return n[e];
                                                                e += 1;
                                                            }
                                                            return "number" == typeof t ? n[t - 1] : null;
                                                        };
                                                    (s.propertyGroup = propertyGroupFactory(s, i)), (n = t(e.it, r.it, s.propertyGroup)), (s.numProperties = n.length);
                                                    var o = a(e.it[e.it.length - 1], r.it[r.it.length - 1], s.propertyGroup);
                                                    return (s.transform = o), (s.propertyIndex = e.cix), (s._name = e.nm), s;
                                                })(e, r, n.propertyGroup),
                                                o = a(e.it[e.it.length - 1], r.it[r.it.length - 1], n.propertyGroup);
                                            return (
                                                (n.content = s),
                                                (n.transform = o),
                                                Object.defineProperty(n, "_name", {
                                                    get: function () {
                                                        return e.nm;
                                                    },
                                                }),
                                                (n.numProperties = e.np),
                                                (n.propertyIndex = e.ix),
                                                (n.nm = e.nm),
                                                (n.mn = e.mn),
                                                n
                                            );
                                        }
                                        function r(t, e, r) {
                                            function i(t) {
                                                return "Color" === t || "color" === t ? i.color : "Opacity" === t || "opacity" === t ? i.opacity : null;
                                            }
                                            return (
                                                Object.defineProperties(i, { color: { get: ExpressionPropertyInterface(e.c) }, opacity: { get: ExpressionPropertyInterface(e.o) }, _name: { value: t.nm }, mn: { value: t.mn } }),
                                                e.c.setGroupProperty(PropertyInterface("Color", r)),
                                                e.o.setGroupProperty(PropertyInterface("Opacity", r)),
                                                i
                                            );
                                        }
                                        function i(t, e, r) {
                                            function i(t) {
                                                return "Start Point" === t || "start point" === t ? i.startPoint : "End Point" === t || "end point" === t ? i.endPoint : "Opacity" === t || "opacity" === t ? i.opacity : null;
                                            }
                                            return (
                                                Object.defineProperties(i, {
                                                    startPoint: { get: ExpressionPropertyInterface(e.s) },
                                                    endPoint: { get: ExpressionPropertyInterface(e.e) },
                                                    opacity: { get: ExpressionPropertyInterface(e.o) },
                                                    type: {
                                                        get: function () {
                                                            return "a";
                                                        },
                                                    },
                                                    _name: { value: t.nm },
                                                    mn: { value: t.mn },
                                                }),
                                                e.s.setGroupProperty(PropertyInterface("Start Point", r)),
                                                e.e.setGroupProperty(PropertyInterface("End Point", r)),
                                                e.o.setGroupProperty(PropertyInterface("Opacity", r)),
                                                i
                                            );
                                        }
                                        function n(t, e, r) {
                                            var i,
                                                n = propertyGroupFactory(h, r),
                                                s = propertyGroupFactory(l, n);
                                            function a(r) {
                                                Object.defineProperty(l, t.d[r].nm, { get: ExpressionPropertyInterface(e.d.dataProps[r].p) });
                                            }
                                            var o = t.d ? t.d.length : 0,
                                                l = {};
                                            for (i = 0; i < o; i += 1) a(i), e.d.dataProps[i].p.setGroupProperty(s);
                                            function h(t) {
                                                return "Color" === t || "color" === t ? h.color : "Opacity" === t || "opacity" === t ? h.opacity : "Stroke Width" === t || "stroke width" === t ? h.strokeWidth : null;
                                            }
                                            return (
                                                Object.defineProperties(h, {
                                                    color: { get: ExpressionPropertyInterface(e.c) },
                                                    opacity: { get: ExpressionPropertyInterface(e.o) },
                                                    strokeWidth: { get: ExpressionPropertyInterface(e.w) },
                                                    dash: {
                                                        get: function () {
                                                            return l;
                                                        },
                                                    },
                                                    _name: { value: t.nm },
                                                    mn: { value: t.mn },
                                                }),
                                                e.c.setGroupProperty(PropertyInterface("Color", n)),
                                                e.o.setGroupProperty(PropertyInterface("Opacity", n)),
                                                e.w.setGroupProperty(PropertyInterface("Stroke Width", n)),
                                                h
                                            );
                                        }
                                        function s(t, e, r) {
                                            function i(e) {
                                                return e === t.e.ix || "End" === e || "end" === e ? i.end : e === t.s.ix ? i.start : e === t.o.ix ? i.offset : null;
                                            }
                                            var n = propertyGroupFactory(i, r);
                                            return (
                                                (i.propertyIndex = t.ix),
                                                e.s.setGroupProperty(PropertyInterface("Start", n)),
                                                e.e.setGroupProperty(PropertyInterface("End", n)),
                                                e.o.setGroupProperty(PropertyInterface("Offset", n)),
                                                (i.propertyIndex = t.ix),
                                                (i.propertyGroup = r),
                                                Object.defineProperties(i, {
                                                    start: { get: ExpressionPropertyInterface(e.s) },
                                                    end: { get: ExpressionPropertyInterface(e.e) },
                                                    offset: { get: ExpressionPropertyInterface(e.o) },
                                                    _name: { value: t.nm },
                                                }),
                                                (i.mn = t.mn),
                                                i
                                            );
                                        }
                                        function a(t, e, r) {
                                            function i(e) {
                                                return t.a.ix === e || "Anchor Point" === e
                                                    ? i.anchorPoint
                                                    : t.o.ix === e || "Opacity" === e
                                                    ? i.opacity
                                                    : t.p.ix === e || "Position" === e
                                                    ? i.position
                                                    : t.r.ix === e || "Rotation" === e || "ADBE Vector Rotation" === e
                                                    ? i.rotation
                                                    : t.s.ix === e || "Scale" === e
                                                    ? i.scale
                                                    : (t.sk && t.sk.ix === e) || "Skew" === e
                                                    ? i.skew
                                                    : (t.sa && t.sa.ix === e) || "Skew Axis" === e
                                                    ? i.skewAxis
                                                    : null;
                                            }
                                            var n = propertyGroupFactory(i, r);
                                            return (
                                                e.transform.mProps.o.setGroupProperty(PropertyInterface("Opacity", n)),
                                                e.transform.mProps.p.setGroupProperty(PropertyInterface("Position", n)),
                                                e.transform.mProps.a.setGroupProperty(PropertyInterface("Anchor Point", n)),
                                                e.transform.mProps.s.setGroupProperty(PropertyInterface("Scale", n)),
                                                e.transform.mProps.r.setGroupProperty(PropertyInterface("Rotation", n)),
                                                e.transform.mProps.sk && (e.transform.mProps.sk.setGroupProperty(PropertyInterface("Skew", n)), e.transform.mProps.sa.setGroupProperty(PropertyInterface("Skew Angle", n))),
                                                e.transform.op.setGroupProperty(PropertyInterface("Opacity", n)),
                                                Object.defineProperties(i, {
                                                    opacity: { get: ExpressionPropertyInterface(e.transform.mProps.o) },
                                                    position: { get: ExpressionPropertyInterface(e.transform.mProps.p) },
                                                    anchorPoint: { get: ExpressionPropertyInterface(e.transform.mProps.a) },
                                                    scale: { get: ExpressionPropertyInterface(e.transform.mProps.s) },
                                                    rotation: { get: ExpressionPropertyInterface(e.transform.mProps.r) },
                                                    skew: { get: ExpressionPropertyInterface(e.transform.mProps.sk) },
                                                    skewAxis: { get: ExpressionPropertyInterface(e.transform.mProps.sa) },
                                                    _name: { value: t.nm },
                                                }),
                                                (i.ty = "tr"),
                                                (i.mn = t.mn),
                                                (i.propertyGroup = r),
                                                i
                                            );
                                        }
                                        function o(t, e, r) {
                                            function i(e) {
                                                return t.p.ix === e ? i.position : t.s.ix === e ? i.size : null;
                                            }
                                            var n = propertyGroupFactory(i, r);
                                            i.propertyIndex = t.ix;
                                            var s = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                                            return (
                                                s.s.setGroupProperty(PropertyInterface("Size", n)),
                                                s.p.setGroupProperty(PropertyInterface("Position", n)),
                                                Object.defineProperties(i, { size: { get: ExpressionPropertyInterface(s.s) }, position: { get: ExpressionPropertyInterface(s.p) }, _name: { value: t.nm } }),
                                                (i.mn = t.mn),
                                                i
                                            );
                                        }
                                        function l(t, e, r) {
                                            function i(e) {
                                                return t.p.ix === e
                                                    ? i.position
                                                    : t.r.ix === e
                                                    ? i.rotation
                                                    : t.pt.ix === e
                                                    ? i.points
                                                    : t.or.ix === e || "ADBE Vector Star Outer Radius" === e
                                                    ? i.outerRadius
                                                    : t.os.ix === e
                                                    ? i.outerRoundness
                                                    : !t.ir || (t.ir.ix !== e && "ADBE Vector Star Inner Radius" !== e)
                                                    ? t.is && t.is.ix === e
                                                        ? i.innerRoundness
                                                        : null
                                                    : i.innerRadius;
                                            }
                                            var n = propertyGroupFactory(i, r),
                                                s = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                                            return (
                                                (i.propertyIndex = t.ix),
                                                s.or.setGroupProperty(PropertyInterface("Outer Radius", n)),
                                                s.os.setGroupProperty(PropertyInterface("Outer Roundness", n)),
                                                s.pt.setGroupProperty(PropertyInterface("Points", n)),
                                                s.p.setGroupProperty(PropertyInterface("Position", n)),
                                                s.r.setGroupProperty(PropertyInterface("Rotation", n)),
                                                t.ir && (s.ir.setGroupProperty(PropertyInterface("Inner Radius", n)), s.is.setGroupProperty(PropertyInterface("Inner Roundness", n))),
                                                Object.defineProperties(i, {
                                                    position: { get: ExpressionPropertyInterface(s.p) },
                                                    rotation: { get: ExpressionPropertyInterface(s.r) },
                                                    points: { get: ExpressionPropertyInterface(s.pt) },
                                                    outerRadius: { get: ExpressionPropertyInterface(s.or) },
                                                    outerRoundness: { get: ExpressionPropertyInterface(s.os) },
                                                    innerRadius: { get: ExpressionPropertyInterface(s.ir) },
                                                    innerRoundness: { get: ExpressionPropertyInterface(s.is) },
                                                    _name: { value: t.nm },
                                                }),
                                                (i.mn = t.mn),
                                                i
                                            );
                                        }
                                        function h(t, e, r) {
                                            function i(e) {
                                                return t.p.ix === e ? i.position : t.r.ix === e ? i.roundness : t.s.ix === e || "Size" === e || "ADBE Vector Rect Size" === e ? i.size : null;
                                            }
                                            var n = propertyGroupFactory(i, r),
                                                s = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                                            return (
                                                (i.propertyIndex = t.ix),
                                                s.p.setGroupProperty(PropertyInterface("Position", n)),
                                                s.s.setGroupProperty(PropertyInterface("Size", n)),
                                                s.r.setGroupProperty(PropertyInterface("Rotation", n)),
                                                Object.defineProperties(i, {
                                                    position: { get: ExpressionPropertyInterface(s.p) },
                                                    roundness: { get: ExpressionPropertyInterface(s.r) },
                                                    size: { get: ExpressionPropertyInterface(s.s) },
                                                    _name: { value: t.nm },
                                                }),
                                                (i.mn = t.mn),
                                                i
                                            );
                                        }
                                        function c(t, e, r) {
                                            function i(e) {
                                                return t.r.ix === e || "Round Corners 1" === e ? i.radius : null;
                                            }
                                            var n = propertyGroupFactory(i, r),
                                                s = e;
                                            return (
                                                (i.propertyIndex = t.ix),
                                                s.rd.setGroupProperty(PropertyInterface("Radius", n)),
                                                Object.defineProperties(i, { radius: { get: ExpressionPropertyInterface(s.rd) }, _name: { value: t.nm } }),
                                                (i.mn = t.mn),
                                                i
                                            );
                                        }
                                        function p(t, e, r) {
                                            function i(e) {
                                                return t.c.ix === e || "Copies" === e ? i.copies : t.o.ix === e || "Offset" === e ? i.offset : null;
                                            }
                                            var n = propertyGroupFactory(i, r),
                                                s = e;
                                            return (
                                                (i.propertyIndex = t.ix),
                                                s.c.setGroupProperty(PropertyInterface("Copies", n)),
                                                s.o.setGroupProperty(PropertyInterface("Offset", n)),
                                                Object.defineProperties(i, { copies: { get: ExpressionPropertyInterface(s.c) }, offset: { get: ExpressionPropertyInterface(s.o) }, _name: { value: t.nm } }),
                                                (i.mn = t.mn),
                                                i
                                            );
                                        }
                                        return function (e, r, i) {
                                            var n;
                                            function s(t) {
                                                if ("number" == typeof t) return 0 === (t = void 0 === t ? 1 : t) ? i : n[t - 1];
                                                for (var e = 0, r = n.length; e < r; ) {
                                                    if (n[e]._name === t) return n[e];
                                                    e += 1;
                                                }
                                                return null;
                                            }
                                            return (
                                                (s.propertyGroup = propertyGroupFactory(s, function () {
                                                    return i;
                                                })),
                                                (n = t(e, r, s.propertyGroup)),
                                                (s.numProperties = n.length),
                                                (s._name = "Contents"),
                                                s
                                            );
                                        };
                                    })(),
                                    TextExpressionInterface = function (t) {
                                        var e;
                                        function r(t) {
                                            return "ADBE Text Document" === t ? r.sourceText : null;
                                        }
                                        return (
                                            Object.defineProperty(r, "sourceText", {
                                                get: function () {
                                                    t.textProperty.getValue();
                                                    var r = t.textProperty.currentData.t;
                                                    return void 0 !== r && ((t.textProperty.currentData.t = void 0), ((e = new String(r)).value = r || new String(r))), e;
                                                },
                                            }),
                                            r
                                        );
                                    };
                                function _typeof$2(t) {
                                    return (_typeof$2 =
                                        "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                                            ? function (t) {
                                                  return typeof t;
                                              }
                                            : function (t) {
                                                  return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                                              })(t);
                                }
                                var FootageInterface =
                                        ((dataInterfaceFactory = function (t) {
                                            function e(t) {
                                                return "Outline" === t ? e.outlineInterface() : null;
                                            }
                                            return (
                                                (e._name = "Outline"),
                                                (e.outlineInterface = (function (t) {
                                                    var e = "",
                                                        r = t.getFootageData();
                                                    function i(t) {
                                                        if (r[t]) return (e = t), "object" === _typeof$2((r = r[t])) ? i : r;
                                                        var n = t.indexOf(e);
                                                        if (-1 !== n) {
                                                            var s = parseInt(t.substr(n + e.length), 10);
                                                            return "object" === _typeof$2((r = r[s])) ? i : r;
                                                        }
                                                        return "";
                                                    }
                                                    return function () {
                                                        return (e = ""), (r = t.getFootageData()), i;
                                                    };
                                                })(t)),
                                                e
                                            );
                                        }),
                                        function (t) {
                                            function e(t) {
                                                return "Data" === t ? e.dataInterface : null;
                                            }
                                            return (e._name = "Data"), (e.dataInterface = dataInterfaceFactory(t)), e;
                                        }),
                                    dataInterfaceFactory,
                                    interfaces = {
                                        layer: LayerExpressionInterface,
                                        effects: EffectsExpressionInterface,
                                        comp: CompExpressionInterface,
                                        shape: ShapeExpressionInterface,
                                        text: TextExpressionInterface,
                                        footage: FootageInterface,
                                    };
                                function getInterface(t) {
                                    return interfaces[t] || null;
                                }
                                function _typeof$1(t) {
                                    return (_typeof$1 =
                                        "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                                            ? function (t) {
                                                  return typeof t;
                                              }
                                            : function (t) {
                                                  return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                                              })(t);
                                }
                                function seedRandom(t, e) {
                                    var r = this,
                                        i = e.pow(256, 6),
                                        n = e.pow(2, 52),
                                        s = 2 * n;
                                    function a(t) {
                                        var e,
                                            r = t.length,
                                            i = this,
                                            n = 0,
                                            s = (i.i = i.j = 0),
                                            a = (i.S = []);
                                        for (r || (t = [r++]); n < 256; ) a[n] = n++;
                                        for (n = 0; n < 256; n++) (a[n] = a[(s = 255 & (s + t[n % r] + (e = a[n])))]), (a[s] = e);
                                        i.g = function (t) {
                                            for (var e, r = 0, n = i.i, s = i.j, a = i.S; t--; ) (e = a[(n = 255 & (n + 1))]), (r = 256 * r + a[255 & ((a[n] = a[(s = 255 & (s + e))]) + (a[s] = e))]);
                                            return (i.i = n), (i.j = s), r;
                                        };
                                    }
                                    function o(t, e) {
                                        return (e.i = t.i), (e.j = t.j), (e.S = t.S.slice()), e;
                                    }
                                    function l(t, e) {
                                        for (var r, i = t + "", n = 0; n < i.length; ) e[255 & n] = 255 & ((r ^= 19 * e[255 & n]) + i.charCodeAt(n++));
                                        return h(e);
                                    }
                                    function h(t) {
                                        return String.fromCharCode.apply(0, t);
                                    }
                                    (e.seedrandom = function (c, p, d) {
                                        var u = [],
                                            f = l(
                                                (function t(e, r) {
                                                    var i,
                                                        n = [],
                                                        s = _typeof$1(e);
                                                    if (r && "object" == s)
                                                        for (i in e)
                                                            try {
                                                                n.push(t(e[i], r - 1));
                                                            } catch (t) {}
                                                    return n.length ? n : "string" == s ? e : e + "\0";
                                                })(
                                                    (p = !0 === p ? { entropy: !0 } : p || {}).entropy
                                                        ? [c, h(t)]
                                                        : null === c
                                                        ? (function () {
                                                              try {
                                                                  var e = new Uint8Array(256);
                                                                  return (r.crypto || r.msCrypto).getRandomValues(e), h(e);
                                                              } catch (e) {
                                                                  var i = r.navigator,
                                                                      n = i && i.plugins;
                                                                  return [+new Date(), r, n, r.screen, h(t)];
                                                              }
                                                          })()
                                                        : c,
                                                    3
                                                ),
                                                u
                                            ),
                                            m = new a(u),
                                            y = function () {
                                                for (var t = m.g(6), e = i, r = 0; t < n; ) (t = 256 * (t + r)), (e *= 256), (r = m.g(1));
                                                for (; t >= s; ) (t /= 2), (e /= 2), (r >>>= 1);
                                                return (t + r) / e;
                                            };
                                        return (
                                            (y.int32 = function () {
                                                return 0 | m.g(4);
                                            }),
                                            (y.quick = function () {
                                                return m.g(4) / 4294967296;
                                            }),
                                            (y.double = y),
                                            l(h(m.S), t),
                                            (
                                                p.pass ||
                                                d ||
                                                function (t, r, i, n) {
                                                    return (
                                                        n &&
                                                            (n.S && o(n, m),
                                                            (t.state = function () {
                                                                return o(m, {});
                                                            })),
                                                        i ? ((e.random = t), r) : t
                                                    );
                                                }
                                            )(y, f, "global" in p ? p.global : this == e, p.state)
                                        );
                                    }),
                                        l(e.random(), t);
                                }
                                function initialize$2(t) {
                                    seedRandom([], t);
                                }
                                var propTypes = { SHAPE: "shape" };
                                function _typeof(t) {
                                    return (_typeof =
                                        "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                                            ? function (t) {
                                                  return typeof t;
                                              }
                                            : function (t) {
                                                  return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
                                              })(t);
                                }
                                var ExpressionManager = (function () {
                                        var ob = {},
                                            Math = BMMath,
                                            window = null,
                                            document = null,
                                            XMLHttpRequest = null,
                                            fetch = null,
                                            frames = null;
                                        function $bm_isInstanceOfArray(t) {
                                            return t.constructor === Array || t.constructor === Float32Array;
                                        }
                                        function isNumerable(t, e) {
                                            return "number" === t || "boolean" === t || "string" === t || e instanceof Number;
                                        }
                                        function $bm_neg(t) {
                                            var e = _typeof(t);
                                            if ("number" === e || "boolean" === e || t instanceof Number) return -t;
                                            if ($bm_isInstanceOfArray(t)) {
                                                var r,
                                                    i = t.length,
                                                    n = [];
                                                for (r = 0; r < i; r += 1) n[r] = -t[r];
                                                return n;
                                            }
                                            return t.propType ? t.v : -t;
                                        }
                                        initialize$2(BMMath);
                                        var easeInBez = BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, "easeIn").get,
                                            easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, "easeOut").get,
                                            easeInOutBez = BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, "easeInOut").get;
                                        function sum(t, e) {
                                            var r = _typeof(t),
                                                i = _typeof(e);
                                            if ("string" === r || "string" === i) return t + e;
                                            if (isNumerable(r, t) && isNumerable(i, e)) return t + e;
                                            if ($bm_isInstanceOfArray(t) && isNumerable(i, e)) return ((t = t.slice(0))[0] += e), t;
                                            if (isNumerable(r, t) && $bm_isInstanceOfArray(e)) return ((e = e.slice(0))[0] = t + e[0]), e;
                                            if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {
                                                for (var n = 0, s = t.length, a = e.length, o = []; n < s || n < a; )
                                                    ("number" == typeof t[n] || t[n] instanceof Number) && ("number" == typeof e[n] || e[n] instanceof Number) ? (o[n] = t[n] + e[n]) : (o[n] = void 0 === e[n] ? t[n] : t[n] || e[n]),
                                                        (n += 1);
                                                return o;
                                            }
                                            return 0;
                                        }
                                        var add = sum;
                                        function sub(t, e) {
                                            var r = _typeof(t),
                                                i = _typeof(e);
                                            if (isNumerable(r, t) && isNumerable(i, e)) return "string" === r && (t = parseInt(t, 10)), "string" === i && (e = parseInt(e, 10)), t - e;
                                            if ($bm_isInstanceOfArray(t) && isNumerable(i, e)) return ((t = t.slice(0))[0] -= e), t;
                                            if (isNumerable(r, t) && $bm_isInstanceOfArray(e)) return ((e = e.slice(0))[0] = t - e[0]), e;
                                            if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {
                                                for (var n = 0, s = t.length, a = e.length, o = []; n < s || n < a; )
                                                    ("number" == typeof t[n] || t[n] instanceof Number) && ("number" == typeof e[n] || e[n] instanceof Number) ? (o[n] = t[n] - e[n]) : (o[n] = void 0 === e[n] ? t[n] : t[n] || e[n]),
                                                        (n += 1);
                                                return o;
                                            }
                                            return 0;
                                        }
                                        function mul(t, e) {
                                            var r,
                                                i,
                                                n,
                                                s = _typeof(t),
                                                a = _typeof(e);
                                            if (isNumerable(s, t) && isNumerable(a, e)) return t * e;
                                            if ($bm_isInstanceOfArray(t) && isNumerable(a, e)) {
                                                for (n = t.length, r = createTypedArray("float32", n), i = 0; i < n; i += 1) r[i] = t[i] * e;
                                                return r;
                                            }
                                            if (isNumerable(s, t) && $bm_isInstanceOfArray(e)) {
                                                for (n = e.length, r = createTypedArray("float32", n), i = 0; i < n; i += 1) r[i] = t * e[i];
                                                return r;
                                            }
                                            return 0;
                                        }
                                        function div(t, e) {
                                            var r,
                                                i,
                                                n,
                                                s = _typeof(t),
                                                a = _typeof(e);
                                            if (isNumerable(s, t) && isNumerable(a, e)) return t / e;
                                            if ($bm_isInstanceOfArray(t) && isNumerable(a, e)) {
                                                for (n = t.length, r = createTypedArray("float32", n), i = 0; i < n; i += 1) r[i] = t[i] / e;
                                                return r;
                                            }
                                            if (isNumerable(s, t) && $bm_isInstanceOfArray(e)) {
                                                for (n = e.length, r = createTypedArray("float32", n), i = 0; i < n; i += 1) r[i] = t / e[i];
                                                return r;
                                            }
                                            return 0;
                                        }
                                        function mod(t, e) {
                                            return "string" == typeof t && (t = parseInt(t, 10)), "string" == typeof e && (e = parseInt(e, 10)), t % e;
                                        }
                                        var $bm_sum = sum,
                                            $bm_sub = sub,
                                            $bm_mul = mul,
                                            $bm_div = div,
                                            $bm_mod = mod;
                                        function clamp(t, e, r) {
                                            if (e > r) {
                                                var i = r;
                                                (r = e), (e = i);
                                            }
                                            return Math.min(Math.max(t, e), r);
                                        }
                                        function radiansToDegrees(t) {
                                            return t / degToRads;
                                        }
                                        var radians_to_degrees = radiansToDegrees;
                                        function degreesToRadians(t) {
                                            return t * degToRads;
                                        }
                                        var degrees_to_radians = radiansToDegrees,
                                            helperLengthArray = [0, 0, 0, 0, 0, 0];
                                        function length(t, e) {
                                            if ("number" == typeof t || t instanceof Number) return (e = e || 0), Math.abs(t - e);
                                            var r;
                                            e || (e = helperLengthArray);
                                            var i = Math.min(t.length, e.length),
                                                n = 0;
                                            for (r = 0; r < i; r += 1) n += Math.pow(e[r] - t[r], 2);
                                            return Math.sqrt(n);
                                        }
                                        function normalize(t) {
                                            return div(t, length(t));
                                        }
                                        function rgbToHsl(t) {
                                            var e,
                                                r,
                                                i = t[0],
                                                n = t[1],
                                                s = t[2],
                                                a = Math.max(i, n, s),
                                                o = Math.min(i, n, s),
                                                l = (a + o) / 2;
                                            if (a === o) (e = 0), (r = 0);
                                            else {
                                                var h = a - o;
                                                switch (((r = l > 0.5 ? h / (2 - a - o) : h / (a + o)), a)) {
                                                    case i:
                                                        e = (n - s) / h + (n < s ? 6 : 0);
                                                        break;
                                                    case n:
                                                        e = (s - i) / h + 2;
                                                        break;
                                                    case s:
                                                        e = (i - n) / h + 4;
                                                }
                                                e /= 6;
                                            }
                                            return [e, r, l, t[3]];
                                        }
                                        function hue2rgb(t, e, r) {
                                            return r < 0 && (r += 1), r > 1 && (r -= 1), r < 1 / 6 ? t + 6 * (e - t) * r : r < 0.5 ? e : r < 2 / 3 ? t + (e - t) * (2 / 3 - r) * 6 : t;
                                        }
                                        function hslToRgb(t) {
                                            var e,
                                                r,
                                                i,
                                                n = t[0],
                                                s = t[1],
                                                a = t[2];
                                            if (0 === s) (e = a), (i = a), (r = a);
                                            else {
                                                var o = a < 0.5 ? a * (1 + s) : a + s - a * s,
                                                    l = 2 * a - o;
                                                (e = hue2rgb(l, o, n + 1 / 3)), (r = hue2rgb(l, o, n)), (i = hue2rgb(l, o, n - 1 / 3));
                                            }
                                            return [e, r, i, t[3]];
                                        }
                                        function linear(t, e, r, i, n) {
                                            if (((void 0 !== i && void 0 !== n) || ((i = e), (n = r), (e = 0), (r = 1)), r < e)) {
                                                var s = r;
                                                (r = e), (e = s);
                                            }
                                            if (t <= e) return i;
                                            if (t >= r) return n;
                                            var a,
                                                o = r === e ? 0 : (t - e) / (r - e);
                                            if (!i.length) return i + (n - i) * o;
                                            var l = i.length,
                                                h = createTypedArray("float32", l);
                                            for (a = 0; a < l; a += 1) h[a] = i[a] + (n[a] - i[a]) * o;
                                            return h;
                                        }
                                        function random(t, e) {
                                            if ((void 0 === e && (void 0 === t ? ((t = 0), (e = 1)) : ((e = t), (t = void 0))), e.length)) {
                                                var r,
                                                    i = e.length;
                                                t || (t = createTypedArray("float32", i));
                                                var n = createTypedArray("float32", i),
                                                    s = BMMath.random();
                                                for (r = 0; r < i; r += 1) n[r] = t[r] + s * (e[r] - t[r]);
                                                return n;
                                            }
                                            return void 0 === t && (t = 0), t + BMMath.random() * (e - t);
                                        }
                                        function createPath(t, e, r, i) {
                                            var n,
                                                s = t.length,
                                                a = shapePool.newElement();
                                            a.setPathData(!!i, s);
                                            var o,
                                                l,
                                                h = [0, 0];
                                            for (n = 0; n < s; n += 1) (o = e && e[n] ? e[n] : h), (l = r && r[n] ? r[n] : h), a.setTripleAt(t[n][0], t[n][1], l[0] + t[n][0], l[1] + t[n][1], o[0] + t[n][0], o[1] + t[n][1], n, !0);
                                            return a;
                                        }
                                        function initiateExpression(elem, data, property) {
                                            function noOp(t) {
                                                return t;
                                            }
                                            if (!elem.globalData.renderConfig.runExpressions) return noOp;
                                            var val = data.x,
                                                needsVelocity = /velocity(?![\w\d])/.test(val),
                                                _needsRandom = -1 !== val.indexOf("random"),
                                                elemType = elem.data.ty,
                                                transform,
                                                $bm_transform,
                                                content,
                                                effect,
                                                thisProperty = property;
                                            (thisProperty.valueAtTime = thisProperty.getValueAtTime),
                                                Object.defineProperty(thisProperty, "value", {
                                                    get: function () {
                                                        return thisProperty.v;
                                                    },
                                                }),
                                                (elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate),
                                                (elem.comp.displayStartTime = 0);
                                            var inPoint = elem.data.ip / elem.comp.globalData.frameRate,
                                                outPoint = elem.data.op / elem.comp.globalData.frameRate,
                                                width = elem.data.sw ? elem.data.sw : 0,
                                                height = elem.data.sh ? elem.data.sh : 0,
                                                name = elem.data.nm,
                                                loopIn,
                                                loop_in,
                                                loopOut,
                                                loop_out,
                                                smooth,
                                                toWorld,
                                                fromWorld,
                                                fromComp,
                                                toComp,
                                                fromCompToSurface,
                                                position,
                                                rotation,
                                                anchorPoint,
                                                scale,
                                                thisLayer,
                                                thisComp,
                                                mask,
                                                valueAtTime,
                                                velocityAtTime,
                                                scoped_bm_rt,
                                                expression_function = eval("[function _expression_function(){" + val + ";scoped_bm_rt=$bm_rt}]")[0],
                                                numKeys = property.kf ? data.k.length : 0,
                                                active = !this.data || !0 !== this.data.hd,
                                                wiggle = function (t, e) {
                                                    var r,
                                                        i,
                                                        n = this.pv.length ? this.pv.length : 1,
                                                        s = createTypedArray("float32", n),
                                                        a = Math.floor(5 * time);
                                                    for (r = 0, i = 0; r < a; ) {
                                                        for (i = 0; i < n; i += 1) s[i] += -e + 2 * e * BMMath.random();
                                                        r += 1;
                                                    }
                                                    var o = 5 * time,
                                                        l = o - Math.floor(o),
                                                        h = createTypedArray("float32", n);
                                                    if (n > 1) {
                                                        for (i = 0; i < n; i += 1) h[i] = this.pv[i] + s[i] + (-e + 2 * e * BMMath.random()) * l;
                                                        return h;
                                                    }
                                                    return this.pv + s[0] + (-e + 2 * e * BMMath.random()) * l;
                                                }.bind(this);
                                            function loopInDuration(t, e) {
                                                return loopIn(t, e, !0);
                                            }
                                            function loopOutDuration(t, e) {
                                                return loopOut(t, e, !0);
                                            }
                                            thisProperty.loopIn && ((loopIn = thisProperty.loopIn.bind(thisProperty)), (loop_in = loopIn)),
                                                thisProperty.loopOut && ((loopOut = thisProperty.loopOut.bind(thisProperty)), (loop_out = loopOut)),
                                                thisProperty.smooth && (smooth = thisProperty.smooth.bind(thisProperty)),
                                                this.getValueAtTime && (valueAtTime = this.getValueAtTime.bind(this)),
                                                this.getVelocityAtTime && (velocityAtTime = this.getVelocityAtTime.bind(this));
                                            var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface),
                                                time,
                                                velocity,
                                                value,
                                                text,
                                                textIndex,
                                                textTotal,
                                                selectorValue;
                                            function lookAt(t, e) {
                                                var r = [e[0] - t[0], e[1] - t[1], e[2] - t[2]],
                                                    i = Math.atan2(r[0], Math.sqrt(r[1] * r[1] + r[2] * r[2])) / degToRads;
                                                return [-Math.atan2(r[1], r[2]) / degToRads, i, 0];
                                            }
                                            function easeOut(t, e, r, i, n) {
                                                return applyEase(easeOutBez, t, e, r, i, n);
                                            }
                                            function easeIn(t, e, r, i, n) {
                                                return applyEase(easeInBez, t, e, r, i, n);
                                            }
                                            function ease(t, e, r, i, n) {
                                                return applyEase(easeInOutBez, t, e, r, i, n);
                                            }
                                            function applyEase(t, e, r, i, n, s) {
                                                void 0 === n ? ((n = r), (s = i)) : (e = (e - r) / (i - r)), e > 1 ? (e = 1) : e < 0 && (e = 0);
                                                var a = t(e);
                                                if ($bm_isInstanceOfArray(n)) {
                                                    var o,
                                                        l = n.length,
                                                        h = createTypedArray("float32", l);
                                                    for (o = 0; o < l; o += 1) h[o] = (s[o] - n[o]) * a + n[o];
                                                    return h;
                                                }
                                                return (s - n) * a + n;
                                            }
                                            function nearestKey(t) {
                                                var e,
                                                    r,
                                                    i,
                                                    n = data.k.length;
                                                if (data.k.length && "number" != typeof data.k[0])
                                                    if (((r = -1), (t *= elem.comp.globalData.frameRate) < data.k[0].t)) (r = 1), (i = data.k[0].t);
                                                    else {
                                                        for (e = 0; e < n - 1; e += 1) {
                                                            if (t === data.k[e].t) {
                                                                (r = e + 1), (i = data.k[e].t);
                                                                break;
                                                            }
                                                            if (t > data.k[e].t && t < data.k[e + 1].t) {
                                                                t - data.k[e].t > data.k[e + 1].t - t ? ((r = e + 2), (i = data.k[e + 1].t)) : ((r = e + 1), (i = data.k[e].t));
                                                                break;
                                                            }
                                                        }
                                                        -1 === r && ((r = e + 1), (i = data.k[e].t));
                                                    }
                                                else (r = 0), (i = 0);
                                                var s = {};
                                                return (s.index = r), (s.time = i / elem.comp.globalData.frameRate), s;
                                            }
                                            function key(t) {
                                                var e, r, i;
                                                if (!data.k.length || "number" == typeof data.k[0]) throw new Error("The property has no keyframe at index " + t);
                                                (t -= 1), (e = { time: data.k[t].t / elem.comp.globalData.frameRate, value: [] });
                                                var n = Object.prototype.hasOwnProperty.call(data.k[t], "s") ? data.k[t].s : data.k[t - 1].e;
                                                for (i = n.length, r = 0; r < i; r += 1) (e[r] = n[r]), (e.value[r] = n[r]);
                                                return e;
                                            }
                                            function framesToTime(t, e) {
                                                return e || (e = elem.comp.globalData.frameRate), t / e;
                                            }
                                            function timeToFrames(t, e) {
                                                return t || 0 === t || (t = time), e || (e = elem.comp.globalData.frameRate), t * e;
                                            }
                                            function seedRandom(t) {
                                                BMMath.seedrandom(randSeed + t);
                                            }
                                            function sourceRectAtTime() {
                                                return elem.sourceRectAtTime();
                                            }
                                            function substring(t, e) {
                                                return "string" == typeof value ? (void 0 === e ? value.substring(t) : value.substring(t, e)) : "";
                                            }
                                            function substr(t, e) {
                                                return "string" == typeof value ? (void 0 === e ? value.substr(t) : value.substr(t, e)) : "";
                                            }
                                            function posterizeTime(t) {
                                                (time = 0 === t ? 0 : Math.floor(time * t) / t), (value = valueAtTime(time));
                                            }
                                            var index = elem.data.ind,
                                                hasParent = !(!elem.hierarchy || !elem.hierarchy.length),
                                                parent,
                                                randSeed = Math.floor(1e6 * Math.random()),
                                                globalData = elem.globalData;
                                            function executeExpression(t) {
                                                return (
                                                    (value = t),
                                                    this.frameExpressionId === elem.globalData.frameId && "textSelector" !== this.propType
                                                        ? value
                                                        : ("textSelector" === this.propType && ((textIndex = this.textIndex), (textTotal = this.textTotal), (selectorValue = this.selectorValue)),
                                                          thisLayer ||
                                                              ((text = elem.layerInterface.text),
                                                              (thisLayer = elem.layerInterface),
                                                              (thisComp = elem.comp.compInterface),
                                                              (toWorld = thisLayer.toWorld.bind(thisLayer)),
                                                              (fromWorld = thisLayer.fromWorld.bind(thisLayer)),
                                                              (fromComp = thisLayer.fromComp.bind(thisLayer)),
                                                              (toComp = thisLayer.toComp.bind(thisLayer)),
                                                              (mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null),
                                                              (fromCompToSurface = fromComp)),
                                                          transform || ((transform = elem.layerInterface("ADBE Transform Group")), ($bm_transform = transform), transform && (anchorPoint = transform.anchorPoint)),
                                                          4 !== elemType || content || (content = thisLayer("ADBE Root Vectors Group")),
                                                          effect || (effect = thisLayer(4)),
                                                          (hasParent = !(!elem.hierarchy || !elem.hierarchy.length)) && !parent && (parent = elem.hierarchy[0].layerInterface),
                                                          (time = this.comp.renderedFrame / this.comp.globalData.frameRate),
                                                          _needsRandom && seedRandom(randSeed + time),
                                                          needsVelocity && (velocity = velocityAtTime(time)),
                                                          expression_function(),
                                                          (this.frameExpressionId = elem.globalData.frameId),
                                                          (scoped_bm_rt = scoped_bm_rt.propType === propTypes.SHAPE ? scoped_bm_rt.v : scoped_bm_rt))
                                                );
                                            }
                                            return (
                                                (executeExpression.__preventDeadCodeRemoval = [
                                                    $bm_transform,
                                                    anchorPoint,
                                                    time,
                                                    velocity,
                                                    inPoint,
                                                    outPoint,
                                                    width,
                                                    height,
                                                    name,
                                                    loop_in,
                                                    loop_out,
                                                    smooth,
                                                    toComp,
                                                    fromCompToSurface,
                                                    toWorld,
                                                    fromWorld,
                                                    mask,
                                                    position,
                                                    rotation,
                                                    scale,
                                                    thisComp,
                                                    numKeys,
                                                    active,
                                                    wiggle,
                                                    loopInDuration,
                                                    loopOutDuration,
                                                    comp,
                                                    lookAt,
                                                    easeOut,
                                                    easeIn,
                                                    ease,
                                                    nearestKey,
                                                    key,
                                                    text,
                                                    textIndex,
                                                    textTotal,
                                                    selectorValue,
                                                    framesToTime,
                                                    timeToFrames,
                                                    sourceRectAtTime,
                                                    substring,
                                                    substr,
                                                    posterizeTime,
                                                    index,
                                                    globalData,
                                                ]),
                                                executeExpression
                                            );
                                        }
                                        return (
                                            (ob.initiateExpression = initiateExpression),
                                            (ob.__preventDeadCodeRemoval = [
                                                window,
                                                document,
                                                XMLHttpRequest,
                                                fetch,
                                                frames,
                                                $bm_neg,
                                                add,
                                                $bm_sum,
                                                $bm_sub,
                                                $bm_mul,
                                                $bm_div,
                                                $bm_mod,
                                                clamp,
                                                radians_to_degrees,
                                                degreesToRadians,
                                                degrees_to_radians,
                                                normalize,
                                                rgbToHsl,
                                                hslToRgb,
                                                linear,
                                                random,
                                                createPath,
                                            ]),
                                            ob
                                        );
                                    })(),
                                    expressionHelpers = {
                                        searchExpressions: function (t, e, r) {
                                            e.x && ((r.k = !0), (r.x = !0), (r.initiateExpression = ExpressionManager.initiateExpression), r.effectsSequence.push(r.initiateExpression(t, e, r).bind(r)));
                                        },
                                        getSpeedAtTime: function (t) {
                                            var e = this.getValueAtTime(t),
                                                r = this.getValueAtTime(t + -0.01),
                                                i = 0;
                                            if (e.length) {
                                                var n;
                                                for (n = 0; n < e.length; n += 1) i += Math.pow(r[n] - e[n], 2);
                                                i = 100 * Math.sqrt(i);
                                            } else i = 0;
                                            return i;
                                        },
                                        getVelocityAtTime: function (t) {
                                            if (void 0 !== this.vel) return this.vel;
                                            var e,
                                                r,
                                                i = this.getValueAtTime(t),
                                                n = this.getValueAtTime(t + -0.001);
                                            if (i.length) for (e = createTypedArray("float32", i.length), r = 0; r < i.length; r += 1) e[r] = (n[r] - i[r]) / -0.001;
                                            else e = (n - i) / -0.001;
                                            return e;
                                        },
                                        getValueAtTime: function (t) {
                                            return (
                                                (t *= this.elem.globalData.frameRate),
                                                (t -= this.offsetTime) !== this._cachingAtTime.lastFrame &&
                                                    ((this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < t ? this._cachingAtTime.lastIndex : 0),
                                                    (this._cachingAtTime.value = this.interpolateValue(t, this._cachingAtTime)),
                                                    (this._cachingAtTime.lastFrame = t)),
                                                this._cachingAtTime.value
                                            );
                                        },
                                        getStaticValueAtTime: function () {
                                            return this.pv;
                                        },
                                        setGroupProperty: function (t) {
                                            this.propertyGroup = t;
                                        },
                                    };
                                function addPropertyDecorator() {
                                    function t(t, e, r) {
                                        if (!this.k || !this.keyframes) return this.pv;
                                        t = t ? t.toLowerCase() : "";
                                        var i,
                                            n,
                                            s,
                                            a,
                                            o,
                                            l = this.comp.renderedFrame,
                                            h = this.keyframes,
                                            c = h[h.length - 1].t;
                                        if (l <= c) return this.pv;
                                        if (
                                            (r
                                                ? (n = c - (i = e ? Math.abs(c - this.elem.comp.globalData.frameRate * e) : Math.max(0, c - this.elem.data.ip)))
                                                : ((!e || e > h.length - 1) && (e = h.length - 1), (i = c - (n = h[h.length - 1 - e].t))),
                                            "pingpong" === t)
                                        ) {
                                            if (Math.floor((l - n) / i) % 2 != 0) return this.getValueAtTime((i - ((l - n) % i) + n) / this.comp.globalData.frameRate, 0);
                                        } else {
                                            if ("offset" === t) {
                                                var p = this.getValueAtTime(n / this.comp.globalData.frameRate, 0),
                                                    d = this.getValueAtTime(c / this.comp.globalData.frameRate, 0),
                                                    u = this.getValueAtTime((((l - n) % i) + n) / this.comp.globalData.frameRate, 0),
                                                    f = Math.floor((l - n) / i);
                                                if (this.pv.length) {
                                                    for (a = (o = new Array(p.length)).length, s = 0; s < a; s += 1) o[s] = (d[s] - p[s]) * f + u[s];
                                                    return o;
                                                }
                                                return (d - p) * f + u;
                                            }
                                            if ("continue" === t) {
                                                var m = this.getValueAtTime(c / this.comp.globalData.frameRate, 0),
                                                    y = this.getValueAtTime((c - 0.001) / this.comp.globalData.frameRate, 0);
                                                if (this.pv.length) {
                                                    for (a = (o = new Array(m.length)).length, s = 0; s < a; s += 1) o[s] = m[s] + ((m[s] - y[s]) * ((l - c) / this.comp.globalData.frameRate)) / 5e-4;
                                                    return o;
                                                }
                                                return m + ((l - c) / 0.001) * (m - y);
                                            }
                                        }
                                        return this.getValueAtTime((((l - n) % i) + n) / this.comp.globalData.frameRate, 0);
                                    }
                                    function e(t, e, r) {
                                        if (!this.k) return this.pv;
                                        t = t ? t.toLowerCase() : "";
                                        var i,
                                            n,
                                            s,
                                            a,
                                            o,
                                            l = this.comp.renderedFrame,
                                            h = this.keyframes,
                                            c = h[0].t;
                                        if (l >= c) return this.pv;
                                        if (
                                            (r ? (n = c + (i = e ? Math.abs(this.elem.comp.globalData.frameRate * e) : Math.max(0, this.elem.data.op - c))) : ((!e || e > h.length - 1) && (e = h.length - 1), (i = (n = h[e].t) - c)),
                                            "pingpong" === t)
                                        ) {
                                            if (Math.floor((c - l) / i) % 2 == 0) return this.getValueAtTime((((c - l) % i) + c) / this.comp.globalData.frameRate, 0);
                                        } else {
                                            if ("offset" === t) {
                                                var p = this.getValueAtTime(c / this.comp.globalData.frameRate, 0),
                                                    d = this.getValueAtTime(n / this.comp.globalData.frameRate, 0),
                                                    u = this.getValueAtTime((i - ((c - l) % i) + c) / this.comp.globalData.frameRate, 0),
                                                    f = Math.floor((c - l) / i) + 1;
                                                if (this.pv.length) {
                                                    for (a = (o = new Array(p.length)).length, s = 0; s < a; s += 1) o[s] = u[s] - (d[s] - p[s]) * f;
                                                    return o;
                                                }
                                                return u - (d - p) * f;
                                            }
                                            if ("continue" === t) {
                                                var m = this.getValueAtTime(c / this.comp.globalData.frameRate, 0),
                                                    y = this.getValueAtTime((c + 0.001) / this.comp.globalData.frameRate, 0);
                                                if (this.pv.length) {
                                                    for (a = (o = new Array(m.length)).length, s = 0; s < a; s += 1) o[s] = m[s] + ((m[s] - y[s]) * (c - l)) / 0.001;
                                                    return o;
                                                }
                                                return m + ((m - y) * (c - l)) / 0.001;
                                            }
                                        }
                                        return this.getValueAtTime((i - (((c - l) % i) + c)) / this.comp.globalData.frameRate, 0);
                                    }
                                    function r(t, e) {
                                        if (!this.k) return this.pv;
                                        if (((t = 0.5 * (t || 0.4)), (e = Math.floor(e || 5)) <= 1)) return this.pv;
                                        var r,
                                            i,
                                            n = this.comp.renderedFrame / this.comp.globalData.frameRate,
                                            s = n - t,
                                            a = e > 1 ? (n + t - s) / (e - 1) : 1,
                                            o = 0,
                                            l = 0;
                                        for (r = this.pv.length ? createTypedArray("float32", this.pv.length) : 0; o < e; ) {
                                            if (((i = this.getValueAtTime(s + o * a)), this.pv.length)) for (l = 0; l < this.pv.length; l += 1) r[l] += i[l];
                                            else r += i;
                                            o += 1;
                                        }
                                        if (this.pv.length) for (l = 0; l < this.pv.length; l += 1) r[l] /= e;
                                        else r /= e;
                                        return r;
                                    }
                                    function i(t) {
                                        this._transformCachingAtTime || (this._transformCachingAtTime = { v: new Matrix() });
                                        var e = this._transformCachingAtTime.v;
                                        if ((e.cloneFromProps(this.pre.props), this.appliedTransformations < 1)) {
                                            var r = this.a.getValueAtTime(t);
                                            e.translate(-r[0] * this.a.mult, -r[1] * this.a.mult, r[2] * this.a.mult);
                                        }
                                        if (this.appliedTransformations < 2) {
                                            var i = this.s.getValueAtTime(t);
                                            e.scale(i[0] * this.s.mult, i[1] * this.s.mult, i[2] * this.s.mult);
                                        }
                                        if (this.sk && this.appliedTransformations < 3) {
                                            var n = this.sk.getValueAtTime(t),
                                                s = this.sa.getValueAtTime(t);
                                            e.skewFromAxis(-n * this.sk.mult, s * this.sa.mult);
                                        }
                                        if (this.r && this.appliedTransformations < 4) {
                                            var a = this.r.getValueAtTime(t);
                                            e.rotate(-a * this.r.mult);
                                        } else if (!this.r && this.appliedTransformations < 4) {
                                            var o = this.rz.getValueAtTime(t),
                                                l = this.ry.getValueAtTime(t),
                                                h = this.rx.getValueAtTime(t),
                                                c = this.or.getValueAtTime(t);
                                            e.rotateZ(-o * this.rz.mult)
                                                .rotateY(l * this.ry.mult)
                                                .rotateX(h * this.rx.mult)
                                                .rotateZ(-c[2] * this.or.mult)
                                                .rotateY(c[1] * this.or.mult)
                                                .rotateX(c[0] * this.or.mult);
                                        }
                                        if (this.data.p && this.data.p.s) {
                                            var p = this.px.getValueAtTime(t),
                                                d = this.py.getValueAtTime(t);
                                            if (this.data.p.z) {
                                                var u = this.pz.getValueAtTime(t);
                                                e.translate(p * this.px.mult, d * this.py.mult, -u * this.pz.mult);
                                            } else e.translate(p * this.px.mult, d * this.py.mult, 0);
                                        } else {
                                            var f = this.p.getValueAtTime(t);
                                            e.translate(f[0] * this.p.mult, f[1] * this.p.mult, -f[2] * this.p.mult);
                                        }
                                        return e;
                                    }
                                    function n() {
                                        return this.v.clone(new Matrix());
                                    }
                                    var s = TransformPropertyFactory.getTransformProperty;
                                    TransformPropertyFactory.getTransformProperty = function (t, e, r) {
                                        var a = s(t, e, r);
                                        return a.dynamicProperties.length ? (a.getValueAtTime = i.bind(a)) : (a.getValueAtTime = n.bind(a)), (a.setGroupProperty = expressionHelpers.setGroupProperty), a;
                                    };
                                    var a = PropertyFactory.getProp;
                                    PropertyFactory.getProp = function (i, n, s, o, l) {
                                        var h = a(i, n, s, o, l);
                                        h.kf ? (h.getValueAtTime = expressionHelpers.getValueAtTime.bind(h)) : (h.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(h)),
                                            (h.setGroupProperty = expressionHelpers.setGroupProperty),
                                            (h.loopOut = t),
                                            (h.loopIn = e),
                                            (h.smooth = r),
                                            (h.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(h)),
                                            (h.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(h)),
                                            (h.numKeys = 1 === n.a ? n.k.length : 0),
                                            (h.propertyIndex = n.ix);
                                        var c = 0;
                                        return (
                                            0 !== s && (c = createTypedArray("float32", 1 === n.a ? n.k[0].s.length : n.k.length)),
                                            (h._cachingAtTime = { lastFrame: initialDefaultFrame, lastIndex: 0, value: c }),
                                            expressionHelpers.searchExpressions(i, n, h),
                                            h.k && l.addDynamicProperty(h),
                                            h
                                        );
                                    };
                                    var o = ShapePropertyFactory.getConstructorFunction(),
                                        l = ShapePropertyFactory.getKeyframedConstructorFunction();
                                    function h() {}
                                    (h.prototype = {
                                        vertices: function (t, e) {
                                            this.k && this.getValue();
                                            var r,
                                                i = this.v;
                                            void 0 !== e && (i = this.getValueAtTime(e, 0));
                                            var n = i._length,
                                                s = i[t],
                                                a = i.v,
                                                o = createSizedArray(n);
                                            for (r = 0; r < n; r += 1) o[r] = "i" === t || "o" === t ? [s[r][0] - a[r][0], s[r][1] - a[r][1]] : [s[r][0], s[r][1]];
                                            return o;
                                        },
                                        points: function (t) {
                                            return this.vertices("v", t);
                                        },
                                        inTangents: function (t) {
                                            return this.vertices("i", t);
                                        },
                                        outTangents: function (t) {
                                            return this.vertices("o", t);
                                        },
                                        isClosed: function () {
                                            return this.v.c;
                                        },
                                        pointOnPath: function (t, e) {
                                            var r = this.v;
                                            void 0 !== e && (r = this.getValueAtTime(e, 0)), this._segmentsLength || (this._segmentsLength = bez.getSegmentsLength(r));
                                            for (var i, n = this._segmentsLength, s = n.lengths, a = n.totalLength * t, o = 0, l = s.length, h = 0; o < l; ) {
                                                if (h + s[o].addedLength > a) {
                                                    var c = o,
                                                        p = r.c && o === l - 1 ? 0 : o + 1,
                                                        d = (a - h) / s[o].addedLength;
                                                    i = bez.getPointInSegment(r.v[c], r.v[p], r.o[c], r.i[p], d, s[o]);
                                                    break;
                                                }
                                                (h += s[o].addedLength), (o += 1);
                                            }
                                            return i || (i = r.c ? [r.v[0][0], r.v[0][1]] : [r.v[r._length - 1][0], r.v[r._length - 1][1]]), i;
                                        },
                                        vectorOnPath: function (t, e, r) {
                                            1 == t ? (t = this.v.c) : 0 == t && (t = 0.999);
                                            var i = this.pointOnPath(t, e),
                                                n = this.pointOnPath(t + 0.001, e),
                                                s = n[0] - i[0],
                                                a = n[1] - i[1],
                                                o = Math.sqrt(Math.pow(s, 2) + Math.pow(a, 2));
                                            return 0 === o ? [0, 0] : "tangent" === r ? [s / o, a / o] : [-a / o, s / o];
                                        },
                                        tangentOnPath: function (t, e) {
                                            return this.vectorOnPath(t, e, "tangent");
                                        },
                                        normalOnPath: function (t, e) {
                                            return this.vectorOnPath(t, e, "normal");
                                        },
                                        setGroupProperty: expressionHelpers.setGroupProperty,
                                        getValueAtTime: expressionHelpers.getStaticValueAtTime,
                                    }),
                                        extendPrototype([h], o),
                                        extendPrototype([h], l),
                                        (l.prototype.getValueAtTime = function (t) {
                                            return (
                                                this._cachingAtTime || (this._cachingAtTime = { shapeValue: shapePool.clone(this.pv), lastIndex: 0, lastTime: initialDefaultFrame }),
                                                (t *= this.elem.globalData.frameRate),
                                                (t -= this.offsetTime) !== this._cachingAtTime.lastTime &&
                                                    ((this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < t ? this._caching.lastIndex : 0),
                                                    (this._cachingAtTime.lastTime = t),
                                                    this.interpolateShape(t, this._cachingAtTime.shapeValue, this._cachingAtTime)),
                                                this._cachingAtTime.shapeValue
                                            );
                                        }),
                                        (l.prototype.initiateExpression = ExpressionManager.initiateExpression);
                                    var c = ShapePropertyFactory.getShapeProp;
                                    ShapePropertyFactory.getShapeProp = function (t, e, r, i, n) {
                                        var s = c(t, e, r, i, n);
                                        return (
                                            (s.propertyIndex = e.ix), (s.lock = !1), 3 === r ? expressionHelpers.searchExpressions(t, e.pt, s) : 4 === r && expressionHelpers.searchExpressions(t, e.ks, s), s.k && t.addDynamicProperty(s), s
                                        );
                                    };
                                }
                                function initialize$1() {
                                    addPropertyDecorator();
                                }
                                function addDecorator() {
                                    (TextProperty.prototype.getExpressionValue = function (t, e) {
                                        var r = this.calculateExpression(e);
                                        if (t.t !== r) {
                                            var i = {};
                                            return this.copyData(i, t), (i.t = r.toString()), (i.__complete = !1), i;
                                        }
                                        return t;
                                    }),
                                        (TextProperty.prototype.searchProperty = function () {
                                            var t = this.searchKeyframes(),
                                                e = this.searchExpressions();
                                            return (this.kf = t || e), this.kf;
                                        }),
                                        (TextProperty.prototype.searchExpressions = function () {
                                            return this.data.d.x ? ((this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this)), this.addEffect(this.getExpressionValue.bind(this)), !0) : null;
                                        });
                                }
                                function initialize() {
                                    addDecorator();
                                }
                                function SVGComposableEffect() {}
                                function SVGTintFilter(t, e, r, i, n) {
                                    this.filterManager = e;
                                    var s = createNS("feColorMatrix");
                                    s.setAttribute("type", "matrix"),
                                        s.setAttribute("color-interpolation-filters", "linearRGB"),
                                        s.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"),
                                        s.setAttribute("result", i + "_tint_1"),
                                        t.appendChild(s),
                                        (s = createNS("feColorMatrix")).setAttribute("type", "matrix"),
                                        s.setAttribute("color-interpolation-filters", "sRGB"),
                                        s.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),
                                        s.setAttribute("result", i + "_tint_2"),
                                        t.appendChild(s),
                                        (this.matrixFilter = s);
                                    var a = this.createMergeNode(i, [n, i + "_tint_1", i + "_tint_2"]);
                                    t.appendChild(a);
                                }
                                function SVGFillFilter(t, e, r, i) {
                                    this.filterManager = e;
                                    var n = createNS("feColorMatrix");
                                    n.setAttribute("type", "matrix"),
                                        n.setAttribute("color-interpolation-filters", "sRGB"),
                                        n.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),
                                        n.setAttribute("result", i),
                                        t.appendChild(n),
                                        (this.matrixFilter = n);
                                }
                                function SVGStrokeEffect(t, e, r) {
                                    (this.initialized = !1), (this.filterManager = e), (this.elem = r), (this.paths = []);
                                }
                                function SVGTritoneFilter(t, e, r, i) {
                                    this.filterManager = e;
                                    var n = createNS("feColorMatrix");
                                    n.setAttribute("type", "matrix"),
                                        n.setAttribute("color-interpolation-filters", "linearRGB"),
                                        n.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"),
                                        t.appendChild(n);
                                    var s = createNS("feComponentTransfer");
                                    s.setAttribute("color-interpolation-filters", "sRGB"), s.setAttribute("result", i), (this.matrixFilter = s);
                                    var a = createNS("feFuncR");
                                    a.setAttribute("type", "table"), s.appendChild(a), (this.feFuncR = a);
                                    var o = createNS("feFuncG");
                                    o.setAttribute("type", "table"), s.appendChild(o), (this.feFuncG = o);
                                    var l = createNS("feFuncB");
                                    l.setAttribute("type", "table"), s.appendChild(l), (this.feFuncB = l), t.appendChild(s);
                                }
                                function SVGProLevelsFilter(t, e, r, i) {
                                    this.filterManager = e;
                                    var n = this.filterManager.effectElements,
                                        s = createNS("feComponentTransfer");
                                    (n[10].p.k || 0 !== n[10].p.v || n[11].p.k || 1 !== n[11].p.v || n[12].p.k || 1 !== n[12].p.v || n[13].p.k || 0 !== n[13].p.v || n[14].p.k || 1 !== n[14].p.v) &&
                                        (this.feFuncR = this.createFeFunc("feFuncR", s)),
                                        (n[17].p.k || 0 !== n[17].p.v || n[18].p.k || 1 !== n[18].p.v || n[19].p.k || 1 !== n[19].p.v || n[20].p.k || 0 !== n[20].p.v || n[21].p.k || 1 !== n[21].p.v) &&
                                            (this.feFuncG = this.createFeFunc("feFuncG", s)),
                                        (n[24].p.k || 0 !== n[24].p.v || n[25].p.k || 1 !== n[25].p.v || n[26].p.k || 1 !== n[26].p.v || n[27].p.k || 0 !== n[27].p.v || n[28].p.k || 1 !== n[28].p.v) &&
                                            (this.feFuncB = this.createFeFunc("feFuncB", s)),
                                        (n[31].p.k || 0 !== n[31].p.v || n[32].p.k || 1 !== n[32].p.v || n[33].p.k || 1 !== n[33].p.v || n[34].p.k || 0 !== n[34].p.v || n[35].p.k || 1 !== n[35].p.v) &&
                                            (this.feFuncA = this.createFeFunc("feFuncA", s)),
                                        (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) && (s.setAttribute("color-interpolation-filters", "sRGB"), t.appendChild(s)),
                                        (n[3].p.k || 0 !== n[3].p.v || n[4].p.k || 1 !== n[4].p.v || n[5].p.k || 1 !== n[5].p.v || n[6].p.k || 0 !== n[6].p.v || n[7].p.k || 1 !== n[7].p.v) &&
                                            ((s = createNS("feComponentTransfer")).setAttribute("color-interpolation-filters", "sRGB"),
                                            s.setAttribute("result", i),
                                            t.appendChild(s),
                                            (this.feFuncRComposed = this.createFeFunc("feFuncR", s)),
                                            (this.feFuncGComposed = this.createFeFunc("feFuncG", s)),
                                            (this.feFuncBComposed = this.createFeFunc("feFuncB", s)));
                                }
                                function SVGDropShadowEffect(t, e, r, i, n) {
                                    var s = e.container.globalData.renderConfig.filterSize,
                                        a = e.data.fs || s;
                                    t.setAttribute("x", a.x || s.x), t.setAttribute("y", a.y || s.y), t.setAttribute("width", a.width || s.width), t.setAttribute("height", a.height || s.height), (this.filterManager = e);
                                    var o = createNS("feGaussianBlur");
                                    o.setAttribute("in", "SourceAlpha"), o.setAttribute("result", i + "_drop_shadow_1"), o.setAttribute("stdDeviation", "0"), (this.feGaussianBlur = o), t.appendChild(o);
                                    var l = createNS("feOffset");
                                    l.setAttribute("dx", "25"), l.setAttribute("dy", "0"), l.setAttribute("in", i + "_drop_shadow_1"), l.setAttribute("result", i + "_drop_shadow_2"), (this.feOffset = l), t.appendChild(l);
                                    var h = createNS("feFlood");
                                    h.setAttribute("flood-color", "#00ff00"), h.setAttribute("flood-opacity", "1"), h.setAttribute("result", i + "_drop_shadow_3"), (this.feFlood = h), t.appendChild(h);
                                    var c = createNS("feComposite");
                                    c.setAttribute("in", i + "_drop_shadow_3"), c.setAttribute("in2", i + "_drop_shadow_2"), c.setAttribute("operator", "in"), c.setAttribute("result", i + "_drop_shadow_4"), t.appendChild(c);
                                    var p = this.createMergeNode(i, [i + "_drop_shadow_4", n]);
                                    t.appendChild(p);
                                }
                                (SVGComposableEffect.prototype = {
                                    createMergeNode: function (t, e) {
                                        var r,
                                            i,
                                            n = createNS("feMerge");
                                        for (n.setAttribute("result", t), i = 0; i < e.length; i += 1) (r = createNS("feMergeNode")).setAttribute("in", e[i]), n.appendChild(r), n.appendChild(r);
                                        return n;
                                    },
                                }),
                                    extendPrototype([SVGComposableEffect], SVGTintFilter),
                                    (SVGTintFilter.prototype.renderFrame = function (t) {
                                        if (t || this.filterManager._mdf) {
                                            var e = this.filterManager.effectElements[0].p.v,
                                                r = this.filterManager.effectElements[1].p.v,
                                                i = this.filterManager.effectElements[2].p.v / 100;
                                            this.matrixFilter.setAttribute("values", r[0] - e[0] + " 0 0 0 " + e[0] + " " + (r[1] - e[1]) + " 0 0 0 " + e[1] + " " + (r[2] - e[2]) + " 0 0 0 " + e[2] + " 0 0 0 " + i + " 0");
                                        }
                                    }),
                                    (SVGFillFilter.prototype.renderFrame = function (t) {
                                        if (t || this.filterManager._mdf) {
                                            var e = this.filterManager.effectElements[2].p.v,
                                                r = this.filterManager.effectElements[6].p.v;
                                            this.matrixFilter.setAttribute("values", "0 0 0 0 " + e[0] + " 0 0 0 0 " + e[1] + " 0 0 0 0 " + e[2] + " 0 0 0 " + r + " 0");
                                        }
                                    }),
                                    (SVGStrokeEffect.prototype.initialize = function () {
                                        var t,
                                            e,
                                            r,
                                            i,
                                            n = this.elem.layerElement.children || this.elem.layerElement.childNodes;
                                        for (
                                            1 === this.filterManager.effectElements[1].p.v ? ((i = this.elem.maskManager.masksProperties.length), (r = 0)) : (i = 1 + (r = this.filterManager.effectElements[0].p.v - 1)),
                                                (e = createNS("g")).setAttribute("fill", "none"),
                                                e.setAttribute("stroke-linecap", "round"),
                                                e.setAttribute("stroke-dashoffset", 1);
                                            r < i;
                                            r += 1
                                        )
                                            (t = createNS("path")), e.appendChild(t), this.paths.push({ p: t, m: r });
                                        if (3 === this.filterManager.effectElements[10].p.v) {
                                            var s = createNS("mask"),
                                                a = createElementID();
                                            s.setAttribute("id", a), s.setAttribute("mask-type", "alpha"), s.appendChild(e), this.elem.globalData.defs.appendChild(s);
                                            var o = createNS("g");
                                            for (o.setAttribute("mask", "url(" + getLocationHref() + "#" + a + ")"); n[0]; ) o.appendChild(n[0]);
                                            this.elem.layerElement.appendChild(o), (this.masker = s), e.setAttribute("stroke", "#fff");
                                        } else if (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) {
                                            if (2 === this.filterManager.effectElements[10].p.v) for (n = this.elem.layerElement.children || this.elem.layerElement.childNodes; n.length; ) this.elem.layerElement.removeChild(n[0]);
                                            this.elem.layerElement.appendChild(e), this.elem.layerElement.removeAttribute("mask"), e.setAttribute("stroke", "#fff");
                                        }
                                        (this.initialized = !0), (this.pathMasker = e);
                                    }),
                                    (SVGStrokeEffect.prototype.renderFrame = function (t) {
                                        var e;
                                        this.initialized || this.initialize();
                                        var r,
                                            i,
                                            n = this.paths.length;
                                        for (e = 0; e < n; e += 1)
                                            if (
                                                -1 !== this.paths[e].m &&
                                                ((r = this.elem.maskManager.viewData[this.paths[e].m]),
                                                (i = this.paths[e].p),
                                                (t || this.filterManager._mdf || r.prop._mdf) && i.setAttribute("d", r.lastPath),
                                                t ||
                                                    this.filterManager.effectElements[9].p._mdf ||
                                                    this.filterManager.effectElements[4].p._mdf ||
                                                    this.filterManager.effectElements[7].p._mdf ||
                                                    this.filterManager.effectElements[8].p._mdf ||
                                                    r.prop._mdf)
                                            ) {
                                                var s;
                                                if (0 !== this.filterManager.effectElements[7].p.v || 100 !== this.filterManager.effectElements[8].p.v) {
                                                    var a = 0.01 * Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v),
                                                        o = 0.01 * Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v),
                                                        l = i.getTotalLength();
                                                    s = "0 0 0 " + l * a + " ";
                                                    var h,
                                                        c = l * (o - a),
                                                        p = 1 + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * 0.01,
                                                        d = Math.floor(c / p);
                                                    for (h = 0; h < d; h += 1) s += "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * 0.01 + " ";
                                                    s += "0 " + 10 * l + " 0 0";
                                                } else s = "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * 0.01;
                                                i.setAttribute("stroke-dasharray", s);
                                            }
                                        if (
                                            ((t || this.filterManager.effectElements[4].p._mdf) && this.pathMasker.setAttribute("stroke-width", 2 * this.filterManager.effectElements[4].p.v),
                                            (t || this.filterManager.effectElements[6].p._mdf) && this.pathMasker.setAttribute("opacity", this.filterManager.effectElements[6].p.v),
                                            (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) && (t || this.filterManager.effectElements[3].p._mdf))
                                        ) {
                                            var u = this.filterManager.effectElements[3].p.v;
                                            this.pathMasker.setAttribute("stroke", "rgb(" + bmFloor(255 * u[0]) + "," + bmFloor(255 * u[1]) + "," + bmFloor(255 * u[2]) + ")");
                                        }
                                    }),
                                    (SVGTritoneFilter.prototype.renderFrame = function (t) {
                                        if (t || this.filterManager._mdf) {
                                            var e = this.filterManager.effectElements[0].p.v,
                                                r = this.filterManager.effectElements[1].p.v,
                                                i = this.filterManager.effectElements[2].p.v,
                                                n = i[0] + " " + r[0] + " " + e[0],
                                                s = i[1] + " " + r[1] + " " + e[1],
                                                a = i[2] + " " + r[2] + " " + e[2];
                                            this.feFuncR.setAttribute("tableValues", n), this.feFuncG.setAttribute("tableValues", s), this.feFuncB.setAttribute("tableValues", a);
                                        }
                                    }),
                                    (SVGProLevelsFilter.prototype.createFeFunc = function (t, e) {
                                        var r = createNS(t);
                                        return r.setAttribute("type", "table"), e.appendChild(r), r;
                                    }),
                                    (SVGProLevelsFilter.prototype.getTableValue = function (t, e, r, i, n) {
                                        for (var s, a, o = 0, l = Math.min(t, e), h = Math.max(t, e), c = Array.call(null, { length: 256 }), p = 0, d = n - i, u = e - t; o <= 256; )
                                            (a = (s = o / 256) <= l ? (u < 0 ? n : i) : s >= h ? (u < 0 ? i : n) : i + d * Math.pow((s - t) / u, 1 / r)), (c[p] = a), (p += 1), (o += 256 / 255);
                                        return c.join(" ");
                                    }),
                                    (SVGProLevelsFilter.prototype.renderFrame = function (t) {
                                        if (t || this.filterManager._mdf) {
                                            var e,
                                                r = this.filterManager.effectElements;
                                            this.feFuncRComposed &&
                                                (t || r[3].p._mdf || r[4].p._mdf || r[5].p._mdf || r[6].p._mdf || r[7].p._mdf) &&
                                                ((e = this.getTableValue(r[3].p.v, r[4].p.v, r[5].p.v, r[6].p.v, r[7].p.v)),
                                                this.feFuncRComposed.setAttribute("tableValues", e),
                                                this.feFuncGComposed.setAttribute("tableValues", e),
                                                this.feFuncBComposed.setAttribute("tableValues", e)),
                                                this.feFuncR &&
                                                    (t || r[10].p._mdf || r[11].p._mdf || r[12].p._mdf || r[13].p._mdf || r[14].p._mdf) &&
                                                    ((e = this.getTableValue(r[10].p.v, r[11].p.v, r[12].p.v, r[13].p.v, r[14].p.v)), this.feFuncR.setAttribute("tableValues", e)),
                                                this.feFuncG &&
                                                    (t || r[17].p._mdf || r[18].p._mdf || r[19].p._mdf || r[20].p._mdf || r[21].p._mdf) &&
                                                    ((e = this.getTableValue(r[17].p.v, r[18].p.v, r[19].p.v, r[20].p.v, r[21].p.v)), this.feFuncG.setAttribute("tableValues", e)),
                                                this.feFuncB &&
                                                    (t || r[24].p._mdf || r[25].p._mdf || r[26].p._mdf || r[27].p._mdf || r[28].p._mdf) &&
                                                    ((e = this.getTableValue(r[24].p.v, r[25].p.v, r[26].p.v, r[27].p.v, r[28].p.v)), this.feFuncB.setAttribute("tableValues", e)),
                                                this.feFuncA &&
                                                    (t || r[31].p._mdf || r[32].p._mdf || r[33].p._mdf || r[34].p._mdf || r[35].p._mdf) &&
                                                    ((e = this.getTableValue(r[31].p.v, r[32].p.v, r[33].p.v, r[34].p.v, r[35].p.v)), this.feFuncA.setAttribute("tableValues", e));
                                        }
                                    }),
                                    extendPrototype([SVGComposableEffect], SVGDropShadowEffect),
                                    (SVGDropShadowEffect.prototype.renderFrame = function (t) {
                                        if (t || this.filterManager._mdf) {
                                            if (
                                                ((t || this.filterManager.effectElements[4].p._mdf) && this.feGaussianBlur.setAttribute("stdDeviation", this.filterManager.effectElements[4].p.v / 4),
                                                t || this.filterManager.effectElements[0].p._mdf)
                                            ) {
                                                var e = this.filterManager.effectElements[0].p.v;
                                                this.feFlood.setAttribute("flood-color", rgbToHex(Math.round(255 * e[0]), Math.round(255 * e[1]), Math.round(255 * e[2])));
                                            }
                                            if (
                                                ((t || this.filterManager.effectElements[1].p._mdf) && this.feFlood.setAttribute("flood-opacity", this.filterManager.effectElements[1].p.v / 255),
                                                t || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf)
                                            ) {
                                                var r = this.filterManager.effectElements[3].p.v,
                                                    i = (this.filterManager.effectElements[2].p.v - 90) * degToRads,
                                                    n = r * Math.cos(i),
                                                    s = r * Math.sin(i);
                                                this.feOffset.setAttribute("dx", n), this.feOffset.setAttribute("dy", s);
                                            }
                                        }
                                    });
                                var _svgMatteSymbols = [];
                                function SVGMatte3Effect(t, e, r) {
                                    (this.initialized = !1),
                                        (this.filterManager = e),
                                        (this.filterElem = t),
                                        (this.elem = r),
                                        (r.matteElement = createNS("g")),
                                        r.matteElement.appendChild(r.layerElement),
                                        r.matteElement.appendChild(r.transformedElement),
                                        (r.baseElement = r.matteElement);
                                }
                                function SVGGaussianBlurEffect(t, e, r, i) {
                                    t.setAttribute("x", "-100%"), t.setAttribute("y", "-100%"), t.setAttribute("width", "300%"), t.setAttribute("height", "300%"), (this.filterManager = e);
                                    var n = createNS("feGaussianBlur");
                                    n.setAttribute("result", i), t.appendChild(n), (this.feGaussianBlur = n);
                                }
                                return (
                                    (SVGMatte3Effect.prototype.findSymbol = function (t) {
                                        for (var e = 0, r = _svgMatteSymbols.length; e < r; ) {
                                            if (_svgMatteSymbols[e] === t) return _svgMatteSymbols[e];
                                            e += 1;
                                        }
                                        return null;
                                    }),
                                    (SVGMatte3Effect.prototype.replaceInParent = function (t, e) {
                                        var r = t.layerElement.parentNode;
                                        if (r) {
                                            for (var i, n = r.children, s = 0, a = n.length; s < a && n[s] !== t.layerElement; ) s += 1;
                                            s <= a - 2 && (i = n[s + 1]);
                                            var o = createNS("use");
                                            o.setAttribute("href", "#" + e), i ? r.insertBefore(o, i) : r.appendChild(o);
                                        }
                                    }),
                                    (SVGMatte3Effect.prototype.setElementAsMask = function (t, e) {
                                        if (!this.findSymbol(e)) {
                                            var r = createElementID(),
                                                i = createNS("mask");
                                            i.setAttribute("id", e.layerId), i.setAttribute("mask-type", "alpha"), _svgMatteSymbols.push(e);
                                            var n = t.globalData.defs;
                                            n.appendChild(i);
                                            var s = createNS("symbol");
                                            s.setAttribute("id", r), this.replaceInParent(e, r), s.appendChild(e.layerElement), n.appendChild(s);
                                            var a = createNS("use");
                                            a.setAttribute("href", "#" + r), i.appendChild(a), (e.data.hd = !1), e.show();
                                        }
                                        t.setMatte(e.layerId);
                                    }),
                                    (SVGMatte3Effect.prototype.initialize = function () {
                                        for (var t = this.filterManager.effectElements[0].p.v, e = this.elem.comp.elements, r = 0, i = e.length; r < i; ) e[r] && e[r].data.ind === t && this.setElementAsMask(this.elem, e[r]), (r += 1);
                                        this.initialized = !0;
                                    }),
                                    (SVGMatte3Effect.prototype.renderFrame = function () {
                                        this.initialized || this.initialize();
                                    }),
                                    (SVGGaussianBlurEffect.prototype.renderFrame = function (t) {
                                        if (t || this.filterManager._mdf) {
                                            var e = 0.3 * this.filterManager.effectElements[0].p.v,
                                                r = this.filterManager.effectElements[1].p.v,
                                                i = 3 == r ? 0 : e,
                                                n = 2 == r ? 0 : e;
                                            this.feGaussianBlur.setAttribute("stdDeviation", i + " " + n);
                                            var s = 1 == this.filterManager.effectElements[2].p.v ? "wrap" : "duplicate";
                                            this.feGaussianBlur.setAttribute("edgeMode", s);
                                        }
                                    }),
                                    setExpressionsPlugin(Expressions),
                                    setExpressionInterfaces(getInterface),
                                    initialize$1(),
                                    initialize(),
                                    registerEffect(20, SVGTintFilter, !0),
                                    registerEffect(21, SVGFillFilter, !0),
                                    registerEffect(22, SVGStrokeEffect, !1),
                                    registerEffect(23, SVGTritoneFilter, !0),
                                    registerEffect(24, SVGProLevelsFilter, !0),
                                    registerEffect(25, SVGDropShadowEffect, !0),
                                    registerEffect(28, SVGMatte3Effect, !1),
                                    registerEffect(29, SVGGaussianBlurEffect, !0),
                                    lottie
                                );
                            });
                    }),
                    jszip = createCommonjsModule(function (t, e) {
                        t.exports = (function t(e, r, i) {
                            function n(a, o) {
                                if (!r[a]) {
                                    if (!e[a]) {
                                        var l = "function" == typeof commonjsRequire && commonjsRequire;
                                        if (!o && l) return l(a, !0);
                                        if (s) return s(a, !0);
                                        var h = new Error("Cannot find module '" + a + "'");
                                        throw ((h.code = "MODULE_NOT_FOUND"), h);
                                    }
                                    var c = (r[a] = { exports: {} });
                                    e[a][0].call(
                                        c.exports,
                                        function (t) {
                                            return n(e[a][1][t] || t);
                                        },
                                        c,
                                        c.exports,
                                        t,
                                        e,
                                        r,
                                        i
                                    );
                                }
                                return r[a].exports;
                            }
                            for (var s = "function" == typeof commonjsRequire && commonjsRequire, a = 0; a < i.length; a++) n(i[a]);
                            return n;
                        })(
                            {
                                1: [
                                    function (t, e, r) {
                                        (function (i) {
                                            !(function (t) {
                                                "object" == typeof r && void 0 !== e ? (e.exports = t()) : (("undefined" != typeof window ? window : void 0 !== i ? i : "undefined" != typeof self ? self : this).JSZip = t());
                                            })(function () {
                                                return (function e(r, i, n) {
                                                    function s(o, l) {
                                                        if (!i[o]) {
                                                            if (!r[o]) {
                                                                var h = "function" == typeof t && t;
                                                                if (!l && h) return h(o, !0);
                                                                if (a) return a(o, !0);
                                                                var c = new Error("Cannot find module '" + o + "'");
                                                                throw ((c.code = "MODULE_NOT_FOUND"), c);
                                                            }
                                                            var p = (i[o] = { exports: {} });
                                                            r[o][0].call(
                                                                p.exports,
                                                                function (t) {
                                                                    return s(r[o][1][t] || t);
                                                                },
                                                                p,
                                                                p.exports,
                                                                e,
                                                                r,
                                                                i,
                                                                n
                                                            );
                                                        }
                                                        return i[o].exports;
                                                    }
                                                    for (var a = "function" == typeof t && t, o = 0; o < n.length; o++) s(n[o]);
                                                    return s;
                                                })(
                                                    {
                                                        1: [
                                                            function (t, e, r) {
                                                                (function (i) {
                                                                    !(function (t) {
                                                                        "object" == typeof r && void 0 !== e
                                                                            ? (e.exports = t())
                                                                            : (("undefined" != typeof window ? window : void 0 !== i ? i : "undefined" != typeof self ? self : this).JSZip = t());
                                                                    })(function () {
                                                                        return (function e(r, i, n) {
                                                                            function s(o, l) {
                                                                                if (!i[o]) {
                                                                                    if (!r[o]) {
                                                                                        var h = "function" == typeof t && t;
                                                                                        if (!l && h) return h(o, !0);
                                                                                        if (a) return a(o, !0);
                                                                                        var c = new Error("Cannot find module '" + o + "'");
                                                                                        throw ((c.code = "MODULE_NOT_FOUND"), c);
                                                                                    }
                                                                                    var p = (i[o] = { exports: {} });
                                                                                    r[o][0].call(
                                                                                        p.exports,
                                                                                        function (t) {
                                                                                            return s(r[o][1][t] || t);
                                                                                        },
                                                                                        p,
                                                                                        p.exports,
                                                                                        e,
                                                                                        r,
                                                                                        i,
                                                                                        n
                                                                                    );
                                                                                }
                                                                                return i[o].exports;
                                                                            }
                                                                            for (var a = "function" == typeof t && t, o = 0; o < n.length; o++) s(n[o]);
                                                                            return s;
                                                                        })(
                                                                            {
                                                                                1: [
                                                                                    function (t, e, r) {
                                                                                        (function (i) {
                                                                                            !(function (t) {
                                                                                                "object" == typeof r && void 0 !== e
                                                                                                    ? (e.exports = t())
                                                                                                    : (("undefined" != typeof window ? window : void 0 !== i ? i : "undefined" != typeof self ? self : this).JSZip = t());
                                                                                            })(function () {
                                                                                                return (function e(r, i, n) {
                                                                                                    function s(o, l) {
                                                                                                        if (!i[o]) {
                                                                                                            if (!r[o]) {
                                                                                                                var h = "function" == typeof t && t;
                                                                                                                if (!l && h) return h(o, !0);
                                                                                                                if (a) return a(o, !0);
                                                                                                                var c = new Error("Cannot find module '" + o + "'");
                                                                                                                throw ((c.code = "MODULE_NOT_FOUND"), c);
                                                                                                            }
                                                                                                            var p = (i[o] = { exports: {} });
                                                                                                            r[o][0].call(
                                                                                                                p.exports,
                                                                                                                function (t) {
                                                                                                                    return s(r[o][1][t] || t);
                                                                                                                },
                                                                                                                p,
                                                                                                                p.exports,
                                                                                                                e,
                                                                                                                r,
                                                                                                                i,
                                                                                                                n
                                                                                                            );
                                                                                                        }
                                                                                                        return i[o].exports;
                                                                                                    }
                                                                                                    for (var a = "function" == typeof t && t, o = 0; o < n.length; o++) s(n[o]);
                                                                                                    return s;
                                                                                                })(
                                                                                                    {
                                                                                                        1: [
                                                                                                            function (t, e, r) {
                                                                                                                (function (i) {
                                                                                                                    !(function (t) {
                                                                                                                        "object" == typeof r && void 0 !== e
                                                                                                                            ? (e.exports = t())
                                                                                                                            : (("undefined" != typeof window
                                                                                                                                  ? window
                                                                                                                                  : void 0 !== i
                                                                                                                                  ? i
                                                                                                                                  : "undefined" != typeof self
                                                                                                                                  ? self
                                                                                                                                  : this
                                                                                                                              ).JSZip = t());
                                                                                                                    })(function () {
                                                                                                                        return (function e(r, i, n) {
                                                                                                                            function s(o, l) {
                                                                                                                                if (!i[o]) {
                                                                                                                                    if (!r[o]) {
                                                                                                                                        var h = "function" == typeof t && t;
                                                                                                                                        if (!l && h) return h(o, !0);
                                                                                                                                        if (a) return a(o, !0);
                                                                                                                                        var c = new Error("Cannot find module '" + o + "'");
                                                                                                                                        throw ((c.code = "MODULE_NOT_FOUND"), c);
                                                                                                                                    }
                                                                                                                                    var p = (i[o] = { exports: {} });
                                                                                                                                    r[o][0].call(
                                                                                                                                        p.exports,
                                                                                                                                        function (t) {
                                                                                                                                            return s(r[o][1][t] || t);
                                                                                                                                        },
                                                                                                                                        p,
                                                                                                                                        p.exports,
                                                                                                                                        e,
                                                                                                                                        r,
                                                                                                                                        i,
                                                                                                                                        n
                                                                                                                                    );
                                                                                                                                }
                                                                                                                                return i[o].exports;
                                                                                                                            }
                                                                                                                            for (var a = "function" == typeof t && t, o = 0; o < n.length; o++) s(n[o]);
                                                                                                                            return s;
                                                                                                                        })(
                                                                                                                            {
                                                                                                                                1: [
                                                                                                                                    function (t, e, r) {
                                                                                                                                        (function (i) {
                                                                                                                                            !(function (t) {
                                                                                                                                                "object" == typeof r && void 0 !== e
                                                                                                                                                    ? (e.exports = t())
                                                                                                                                                    : (("undefined" != typeof window
                                                                                                                                                          ? window
                                                                                                                                                          : void 0 !== i
                                                                                                                                                          ? i
                                                                                                                                                          : "undefined" != typeof self
                                                                                                                                                          ? self
                                                                                                                                                          : this
                                                                                                                                                      ).JSZip = t());
                                                                                                                                            })(function () {
                                                                                                                                                return (function e(r, i, n) {
                                                                                                                                                    function s(o, l) {
                                                                                                                                                        if (!i[o]) {
                                                                                                                                                            if (!r[o]) {
                                                                                                                                                                var h = "function" == typeof t && t;
                                                                                                                                                                if (!l && h) return h(o, !0);
                                                                                                                                                                if (a) return a(o, !0);
                                                                                                                                                                var c = new Error("Cannot find module '" + o + "'");
                                                                                                                                                                throw ((c.code = "MODULE_NOT_FOUND"), c);
                                                                                                                                                            }
                                                                                                                                                            var p = (i[o] = { exports: {} });
                                                                                                                                                            r[o][0].call(
                                                                                                                                                                p.exports,
                                                                                                                                                                function (t) {
                                                                                                                                                                    return s(r[o][1][t] || t);
                                                                                                                                                                },
                                                                                                                                                                p,
                                                                                                                                                                p.exports,
                                                                                                                                                                e,
                                                                                                                                                                r,
                                                                                                                                                                i,
                                                                                                                                                                n
                                                                                                                                                            );
                                                                                                                                                        }
                                                                                                                                                        return i[o].exports;
                                                                                                                                                    }
                                                                                                                                                    for (var a = "function" == typeof t && t, o = 0; o < n.length; o++) s(n[o]);
                                                                                                                                                    return s;
                                                                                                                                                })(
                                                                                                                                                    {
                                                                                                                                                        1: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("./utils"),
                                                                                                                                                                    n = t("./support"),
                                                                                                                                                                    s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
                                                                                                                                                                (r.encode = function (t) {
                                                                                                                                                                    for (
                                                                                                                                                                        var e,
                                                                                                                                                                            r,
                                                                                                                                                                            n,
                                                                                                                                                                            a,
                                                                                                                                                                            o,
                                                                                                                                                                            l,
                                                                                                                                                                            h,
                                                                                                                                                                            c = [],
                                                                                                                                                                            p = 0,
                                                                                                                                                                            d = t.length,
                                                                                                                                                                            u = d,
                                                                                                                                                                            f = "string" !== i.getTypeOf(t);
                                                                                                                                                                        p < t.length;

                                                                                                                                                                    )
                                                                                                                                                                        (u = d - p),
                                                                                                                                                                            (n = f
                                                                                                                                                                                ? ((e = t[p++]), (r = p < d ? t[p++] : 0), p < d ? t[p++] : 0)
                                                                                                                                                                                : ((e = t.charCodeAt(p++)),
                                                                                                                                                                                  (r = p < d ? t.charCodeAt(p++) : 0),
                                                                                                                                                                                  p < d ? t.charCodeAt(p++) : 0)),
                                                                                                                                                                            (a = e >> 2),
                                                                                                                                                                            (o = ((3 & e) << 4) | (r >> 4)),
                                                                                                                                                                            (l = 1 < u ? ((15 & r) << 2) | (n >> 6) : 64),
                                                                                                                                                                            (h = 2 < u ? 63 & n : 64),
                                                                                                                                                                            c.push(s.charAt(a) + s.charAt(o) + s.charAt(l) + s.charAt(h));
                                                                                                                                                                    return c.join("");
                                                                                                                                                                }),
                                                                                                                                                                    (r.decode = function (t) {
                                                                                                                                                                        var e,
                                                                                                                                                                            r,
                                                                                                                                                                            i,
                                                                                                                                                                            a,
                                                                                                                                                                            o,
                                                                                                                                                                            l,
                                                                                                                                                                            h = 0,
                                                                                                                                                                            c = 0;
                                                                                                                                                                        if ("data:" === t.substr(0, "data:".length))
                                                                                                                                                                            throw new Error("Invalid base64 input, it looks like a data url.");
                                                                                                                                                                        var p,
                                                                                                                                                                            d = (3 * (t = t.replace(/[^A-Za-z0-9\+\/\=]/g, "")).length) / 4;
                                                                                                                                                                        if (
                                                                                                                                                                            (t.charAt(t.length - 1) === s.charAt(64) && d--,
                                                                                                                                                                            t.charAt(t.length - 2) === s.charAt(64) && d--,
                                                                                                                                                                            d % 1 != 0)
                                                                                                                                                                        )
                                                                                                                                                                            throw new Error("Invalid base64 input, bad content length.");
                                                                                                                                                                        for (
                                                                                                                                                                            p = n.uint8array ? new Uint8Array(0 | d) : new Array(0 | d);
                                                                                                                                                                            h < t.length;

                                                                                                                                                                        )
                                                                                                                                                                            (e =
                                                                                                                                                                                (s.indexOf(t.charAt(h++)) << 2) |
                                                                                                                                                                                ((a = s.indexOf(t.charAt(h++))) >> 4)),
                                                                                                                                                                                (r = ((15 & a) << 4) | ((o = s.indexOf(t.charAt(h++))) >> 2)),
                                                                                                                                                                                (i = ((3 & o) << 6) | (l = s.indexOf(t.charAt(h++)))),
                                                                                                                                                                                (p[c++] = e),
                                                                                                                                                                                64 !== o && (p[c++] = r),
                                                                                                                                                                                64 !== l && (p[c++] = i);
                                                                                                                                                                        return p;
                                                                                                                                                                    });
                                                                                                                                                            },
                                                                                                                                                            { "./support": 30, "./utils": 32 },
                                                                                                                                                        ],
                                                                                                                                                        2: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("./external"),
                                                                                                                                                                    n = t("./stream/DataWorker"),
                                                                                                                                                                    s = t("./stream/Crc32Probe"),
                                                                                                                                                                    a = t("./stream/DataLengthProbe");
                                                                                                                                                                function o(t, e, r, i, n) {
                                                                                                                                                                    (this.compressedSize = t),
                                                                                                                                                                        (this.uncompressedSize = e),
                                                                                                                                                                        (this.crc32 = r),
                                                                                                                                                                        (this.compression = i),
                                                                                                                                                                        (this.compressedContent = n);
                                                                                                                                                                }
                                                                                                                                                                (o.prototype = {
                                                                                                                                                                    getContentWorker: function () {
                                                                                                                                                                        var t = new n(i.Promise.resolve(this.compressedContent))
                                                                                                                                                                                .pipe(this.compression.uncompressWorker())
                                                                                                                                                                                .pipe(new a("data_length")),
                                                                                                                                                                            e = this;
                                                                                                                                                                        return (
                                                                                                                                                                            t.on("end", function () {
                                                                                                                                                                                if (this.streamInfo.data_length !== e.uncompressedSize)
                                                                                                                                                                                    throw new Error("Bug : uncompressed data size mismatch");
                                                                                                                                                                            }),
                                                                                                                                                                            t
                                                                                                                                                                        );
                                                                                                                                                                    },
                                                                                                                                                                    getCompressedWorker: function () {
                                                                                                                                                                        return new n(i.Promise.resolve(this.compressedContent))
                                                                                                                                                                            .withStreamInfo("compressedSize", this.compressedSize)
                                                                                                                                                                            .withStreamInfo("uncompressedSize", this.uncompressedSize)
                                                                                                                                                                            .withStreamInfo("crc32", this.crc32)
                                                                                                                                                                            .withStreamInfo("compression", this.compression);
                                                                                                                                                                    },
                                                                                                                                                                }),
                                                                                                                                                                    (o.createWorkerFrom = function (t, e, r) {
                                                                                                                                                                        return t
                                                                                                                                                                            .pipe(new s())
                                                                                                                                                                            .pipe(new a("uncompressedSize"))
                                                                                                                                                                            .pipe(e.compressWorker(r))
                                                                                                                                                                            .pipe(new a("compressedSize"))
                                                                                                                                                                            .withStreamInfo("compression", e);
                                                                                                                                                                    }),
                                                                                                                                                                    (e.exports = o);
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "./external": 6,
                                                                                                                                                                "./stream/Crc32Probe": 25,
                                                                                                                                                                "./stream/DataLengthProbe": 26,
                                                                                                                                                                "./stream/DataWorker": 27,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                        3: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("./stream/GenericWorker");
                                                                                                                                                                (r.STORE = {
                                                                                                                                                                    magic: "\0\0",
                                                                                                                                                                    compressWorker: function (t) {
                                                                                                                                                                        return new i("STORE compression");
                                                                                                                                                                    },
                                                                                                                                                                    uncompressWorker: function () {
                                                                                                                                                                        return new i("STORE decompression");
                                                                                                                                                                    },
                                                                                                                                                                }),
                                                                                                                                                                    (r.DEFLATE = t("./flate"));
                                                                                                                                                            },
                                                                                                                                                            { "./flate": 7, "./stream/GenericWorker": 28 },
                                                                                                                                                        ],
                                                                                                                                                        4: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("./utils"),
                                                                                                                                                                    n = (function () {
                                                                                                                                                                        for (var t, e = [], r = 0; r < 256; r++) {
                                                                                                                                                                            t = r;
                                                                                                                                                                            for (var i = 0; i < 8; i++)
                                                                                                                                                                                t = 1 & t ? 3988292384 ^ (t >>> 1) : t >>> 1;
                                                                                                                                                                            e[r] = t;
                                                                                                                                                                        }
                                                                                                                                                                        return e;
                                                                                                                                                                    })();
                                                                                                                                                                e.exports = function (t, e) {
                                                                                                                                                                    return void 0 !== t && t.length
                                                                                                                                                                        ? "string" !== i.getTypeOf(t)
                                                                                                                                                                            ? (function (t, e, r) {
                                                                                                                                                                                  var i = n,
                                                                                                                                                                                      s = 0 + r;
                                                                                                                                                                                  t ^= -1;
                                                                                                                                                                                  for (var a = 0; a < s; a++)
                                                                                                                                                                                      t = (t >>> 8) ^ i[255 & (t ^ e[a])];
                                                                                                                                                                                  return -1 ^ t;
                                                                                                                                                                              })(0 | e, t, t.length)
                                                                                                                                                                            : (function (t, e, r) {
                                                                                                                                                                                  var i = n,
                                                                                                                                                                                      s = 0 + r;
                                                                                                                                                                                  t ^= -1;
                                                                                                                                                                                  for (var a = 0; a < s; a++)
                                                                                                                                                                                      t = (t >>> 8) ^ i[255 & (t ^ e.charCodeAt(a))];
                                                                                                                                                                                  return -1 ^ t;
                                                                                                                                                                              })(0 | e, t, t.length)
                                                                                                                                                                        : 0;
                                                                                                                                                                };
                                                                                                                                                            },
                                                                                                                                                            { "./utils": 32 },
                                                                                                                                                        ],
                                                                                                                                                        5: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                (r.base64 = !1),
                                                                                                                                                                    (r.binary = !1),
                                                                                                                                                                    (r.dir = !1),
                                                                                                                                                                    (r.createFolders = !0),
                                                                                                                                                                    (r.date = null),
                                                                                                                                                                    (r.compression = null),
                                                                                                                                                                    (r.compressionOptions = null),
                                                                                                                                                                    (r.comment = null),
                                                                                                                                                                    (r.unixPermissions = null),
                                                                                                                                                                    (r.dosPermissions = null);
                                                                                                                                                            },
                                                                                                                                                            {},
                                                                                                                                                        ],
                                                                                                                                                        6: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i;
                                                                                                                                                                (i = "undefined" != typeof Promise ? Promise : t("lie")),
                                                                                                                                                                    (e.exports = { Promise: i });
                                                                                                                                                            },
                                                                                                                                                            { lie: 37 },
                                                                                                                                                        ],
                                                                                                                                                        7: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i =
                                                                                                                                                                        "undefined" != typeof Uint8Array &&
                                                                                                                                                                        "undefined" != typeof Uint16Array &&
                                                                                                                                                                        "undefined" != typeof Uint32Array,
                                                                                                                                                                    n = t("pako"),
                                                                                                                                                                    s = t("./utils"),
                                                                                                                                                                    a = t("./stream/GenericWorker"),
                                                                                                                                                                    o = i ? "uint8array" : "array";
                                                                                                                                                                function l(t, e) {
                                                                                                                                                                    a.call(this, "FlateWorker/" + t),
                                                                                                                                                                        (this._pako = null),
                                                                                                                                                                        (this._pakoAction = t),
                                                                                                                                                                        (this._pakoOptions = e),
                                                                                                                                                                        (this.meta = {});
                                                                                                                                                                }
                                                                                                                                                                (r.magic = "\b\0"),
                                                                                                                                                                    s.inherits(l, a),
                                                                                                                                                                    (l.prototype.processChunk = function (t) {
                                                                                                                                                                        (this.meta = t.meta),
                                                                                                                                                                            null === this._pako && this._createPako(),
                                                                                                                                                                            this._pako.push(s.transformTo(o, t.data), !1);
                                                                                                                                                                    }),
                                                                                                                                                                    (l.prototype.flush = function () {
                                                                                                                                                                        a.prototype.flush.call(this),
                                                                                                                                                                            null === this._pako && this._createPako(),
                                                                                                                                                                            this._pako.push([], !0);
                                                                                                                                                                    }),
                                                                                                                                                                    (l.prototype.cleanUp = function () {
                                                                                                                                                                        a.prototype.cleanUp.call(this), (this._pako = null);
                                                                                                                                                                    }),
                                                                                                                                                                    (l.prototype._createPako = function () {
                                                                                                                                                                        this._pako = new n[this._pakoAction]({
                                                                                                                                                                            raw: !0,
                                                                                                                                                                            level: this._pakoOptions.level || -1,
                                                                                                                                                                        });
                                                                                                                                                                        var t = this;
                                                                                                                                                                        this._pako.onData = function (e) {
                                                                                                                                                                            t.push({ data: e, meta: t.meta });
                                                                                                                                                                        };
                                                                                                                                                                    }),
                                                                                                                                                                    (r.compressWorker = function (t) {
                                                                                                                                                                        return new l("Deflate", t);
                                                                                                                                                                    }),
                                                                                                                                                                    (r.uncompressWorker = function () {
                                                                                                                                                                        return new l("Inflate", {});
                                                                                                                                                                    });
                                                                                                                                                            },
                                                                                                                                                            { "./stream/GenericWorker": 28, "./utils": 32, pako: 38 },
                                                                                                                                                        ],
                                                                                                                                                        8: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                function i(t, e) {
                                                                                                                                                                    var r,
                                                                                                                                                                        i = "";
                                                                                                                                                                    for (r = 0; r < e; r++) (i += String.fromCharCode(255 & t)), (t >>>= 8);
                                                                                                                                                                    return i;
                                                                                                                                                                }
                                                                                                                                                                function n(t, e, r, n, a, c) {
                                                                                                                                                                    var p,
                                                                                                                                                                        d,
                                                                                                                                                                        u = t.file,
                                                                                                                                                                        f = t.compression,
                                                                                                                                                                        m = c !== o.utf8encode,
                                                                                                                                                                        y = s.transformTo("string", c(u.name)),
                                                                                                                                                                        g = s.transformTo("string", o.utf8encode(u.name)),
                                                                                                                                                                        v = u.comment,
                                                                                                                                                                        b = s.transformTo("string", c(v)),
                                                                                                                                                                        _ = s.transformTo("string", o.utf8encode(v)),
                                                                                                                                                                        w = g.length !== u.name.length,
                                                                                                                                                                        S = _.length !== v.length,
                                                                                                                                                                        E = "",
                                                                                                                                                                        P = "",
                                                                                                                                                                        x = "",
                                                                                                                                                                        k = u.dir,
                                                                                                                                                                        A = u.date,
                                                                                                                                                                        T = { crc32: 0, compressedSize: 0, uncompressedSize: 0 };
                                                                                                                                                                    (e && !r) ||
                                                                                                                                                                        ((T.crc32 = t.crc32),
                                                                                                                                                                        (T.compressedSize = t.compressedSize),
                                                                                                                                                                        (T.uncompressedSize = t.uncompressedSize));
                                                                                                                                                                    var C = 0;
                                                                                                                                                                    e && (C |= 8), m || (!w && !S) || (C |= 2048);
                                                                                                                                                                    var I,
                                                                                                                                                                        M = 0,
                                                                                                                                                                        D = 0;
                                                                                                                                                                    k && (M |= 16),
                                                                                                                                                                        "UNIX" === a
                                                                                                                                                                            ? ((D = 798),
                                                                                                                                                                              (M |=
                                                                                                                                                                                  ((I = u.unixPermissions) || (I = k ? 16893 : 33204),
                                                                                                                                                                                  (65535 & I) << 16)))
                                                                                                                                                                            : ((D = 20), (M |= 63 & (u.dosPermissions || 0))),
                                                                                                                                                                        (p = A.getUTCHours()),
                                                                                                                                                                        (p <<= 6),
                                                                                                                                                                        (p |= A.getUTCMinutes()),
                                                                                                                                                                        (p <<= 5),
                                                                                                                                                                        (p |= A.getUTCSeconds() / 2),
                                                                                                                                                                        (d = A.getUTCFullYear() - 1980),
                                                                                                                                                                        (d <<= 4),
                                                                                                                                                                        (d |= A.getUTCMonth() + 1),
                                                                                                                                                                        (d <<= 5),
                                                                                                                                                                        (d |= A.getUTCDate()),
                                                                                                                                                                        w && (E += "up" + i((P = i(1, 1) + i(l(y), 4) + g).length, 2) + P),
                                                                                                                                                                        S && (E += "uc" + i((x = i(1, 1) + i(l(b), 4) + _).length, 2) + x);
                                                                                                                                                                    var F = "";
                                                                                                                                                                    return (
                                                                                                                                                                        (F += "\n\0"),
                                                                                                                                                                        (F += i(C, 2)),
                                                                                                                                                                        (F += f.magic),
                                                                                                                                                                        (F += i(p, 2)),
                                                                                                                                                                        (F += i(d, 2)),
                                                                                                                                                                        (F += i(T.crc32, 4)),
                                                                                                                                                                        (F += i(T.compressedSize, 4)),
                                                                                                                                                                        (F += i(T.uncompressedSize, 4)),
                                                                                                                                                                        (F += i(y.length, 2)),
                                                                                                                                                                        (F += i(E.length, 2)),
                                                                                                                                                                        {
                                                                                                                                                                            fileRecord: h.LOCAL_FILE_HEADER + F + y + E,
                                                                                                                                                                            dirRecord:
                                                                                                                                                                                h.CENTRAL_FILE_HEADER +
                                                                                                                                                                                i(D, 2) +
                                                                                                                                                                                F +
                                                                                                                                                                                i(b.length, 2) +
                                                                                                                                                                                "\0\0\0\0" +
                                                                                                                                                                                i(M, 4) +
                                                                                                                                                                                i(n, 4) +
                                                                                                                                                                                y +
                                                                                                                                                                                E +
                                                                                                                                                                                b,
                                                                                                                                                                        }
                                                                                                                                                                    );
                                                                                                                                                                }
                                                                                                                                                                var s = t("../utils"),
                                                                                                                                                                    a = t("../stream/GenericWorker"),
                                                                                                                                                                    o = t("../utf8"),
                                                                                                                                                                    l = t("../crc32"),
                                                                                                                                                                    h = t("../signature");
                                                                                                                                                                function c(t, e, r, i) {
                                                                                                                                                                    a.call(this, "ZipFileWorker"),
                                                                                                                                                                        (this.bytesWritten = 0),
                                                                                                                                                                        (this.zipComment = e),
                                                                                                                                                                        (this.zipPlatform = r),
                                                                                                                                                                        (this.encodeFileName = i),
                                                                                                                                                                        (this.streamFiles = t),
                                                                                                                                                                        (this.accumulate = !1),
                                                                                                                                                                        (this.contentBuffer = []),
                                                                                                                                                                        (this.dirRecords = []),
                                                                                                                                                                        (this.currentSourceOffset = 0),
                                                                                                                                                                        (this.entriesCount = 0),
                                                                                                                                                                        (this.currentFile = null),
                                                                                                                                                                        (this._sources = []);
                                                                                                                                                                }
                                                                                                                                                                s.inherits(c, a),
                                                                                                                                                                    (c.prototype.push = function (t) {
                                                                                                                                                                        var e = t.meta.percent || 0,
                                                                                                                                                                            r = this.entriesCount,
                                                                                                                                                                            i = this._sources.length;
                                                                                                                                                                        this.accumulate
                                                                                                                                                                            ? this.contentBuffer.push(t)
                                                                                                                                                                            : ((this.bytesWritten += t.data.length),
                                                                                                                                                                              a.prototype.push.call(this, {
                                                                                                                                                                                  data: t.data,
                                                                                                                                                                                  meta: {
                                                                                                                                                                                      currentFile: this.currentFile,
                                                                                                                                                                                      percent: r ? (e + 100 * (r - i - 1)) / r : 100,
                                                                                                                                                                                  },
                                                                                                                                                                              }));
                                                                                                                                                                    }),
                                                                                                                                                                    (c.prototype.openedSource = function (t) {
                                                                                                                                                                        (this.currentSourceOffset = this.bytesWritten),
                                                                                                                                                                            (this.currentFile = t.file.name);
                                                                                                                                                                        var e = this.streamFiles && !t.file.dir;
                                                                                                                                                                        if (e) {
                                                                                                                                                                            var r = n(
                                                                                                                                                                                t,
                                                                                                                                                                                e,
                                                                                                                                                                                !1,
                                                                                                                                                                                this.currentSourceOffset,
                                                                                                                                                                                this.zipPlatform,
                                                                                                                                                                                this.encodeFileName
                                                                                                                                                                            );
                                                                                                                                                                            this.push({ data: r.fileRecord, meta: { percent: 0 } });
                                                                                                                                                                        } else this.accumulate = !0;
                                                                                                                                                                    }),
                                                                                                                                                                    (c.prototype.closedSource = function (t) {
                                                                                                                                                                        this.accumulate = !1;
                                                                                                                                                                        var e,
                                                                                                                                                                            r = this.streamFiles && !t.file.dir,
                                                                                                                                                                            s = n(
                                                                                                                                                                                t,
                                                                                                                                                                                r,
                                                                                                                                                                                !0,
                                                                                                                                                                                this.currentSourceOffset,
                                                                                                                                                                                this.zipPlatform,
                                                                                                                                                                                this.encodeFileName
                                                                                                                                                                            );
                                                                                                                                                                        if ((this.dirRecords.push(s.dirRecord), r))
                                                                                                                                                                            this.push({
                                                                                                                                                                                data:
                                                                                                                                                                                    ((e = t),
                                                                                                                                                                                    h.DATA_DESCRIPTOR +
                                                                                                                                                                                        i(e.crc32, 4) +
                                                                                                                                                                                        i(e.compressedSize, 4) +
                                                                                                                                                                                        i(e.uncompressedSize, 4)),
                                                                                                                                                                                meta: { percent: 100 },
                                                                                                                                                                            });
                                                                                                                                                                        else
                                                                                                                                                                            for (
                                                                                                                                                                                this.push({ data: s.fileRecord, meta: { percent: 0 } });
                                                                                                                                                                                this.contentBuffer.length;

                                                                                                                                                                            )
                                                                                                                                                                                this.push(this.contentBuffer.shift());
                                                                                                                                                                        this.currentFile = null;
                                                                                                                                                                    }),
                                                                                                                                                                    (c.prototype.flush = function () {
                                                                                                                                                                        for (var t = this.bytesWritten, e = 0; e < this.dirRecords.length; e++)
                                                                                                                                                                            this.push({ data: this.dirRecords[e], meta: { percent: 100 } });
                                                                                                                                                                        var r,
                                                                                                                                                                            n,
                                                                                                                                                                            a,
                                                                                                                                                                            o,
                                                                                                                                                                            l,
                                                                                                                                                                            c,
                                                                                                                                                                            p = this.bytesWritten - t,
                                                                                                                                                                            d =
                                                                                                                                                                                ((r = this.dirRecords.length),
                                                                                                                                                                                (n = p),
                                                                                                                                                                                (a = t),
                                                                                                                                                                                (o = this.zipComment),
                                                                                                                                                                                (l = this.encodeFileName),
                                                                                                                                                                                (c = s.transformTo("string", l(o))),
                                                                                                                                                                                h.CENTRAL_DIRECTORY_END +
                                                                                                                                                                                    "\0\0\0\0" +
                                                                                                                                                                                    i(r, 2) +
                                                                                                                                                                                    i(r, 2) +
                                                                                                                                                                                    i(n, 4) +
                                                                                                                                                                                    i(a, 4) +
                                                                                                                                                                                    i(c.length, 2) +
                                                                                                                                                                                    c);
                                                                                                                                                                        this.push({ data: d, meta: { percent: 100 } });
                                                                                                                                                                    }),
                                                                                                                                                                    (c.prototype.prepareNextSource = function () {
                                                                                                                                                                        (this.previous = this._sources.shift()),
                                                                                                                                                                            this.openedSource(this.previous.streamInfo),
                                                                                                                                                                            this.isPaused ? this.previous.pause() : this.previous.resume();
                                                                                                                                                                    }),
                                                                                                                                                                    (c.prototype.registerPrevious = function (t) {
                                                                                                                                                                        this._sources.push(t);
                                                                                                                                                                        var e = this;
                                                                                                                                                                        return (
                                                                                                                                                                            t.on("data", function (t) {
                                                                                                                                                                                e.processChunk(t);
                                                                                                                                                                            }),
                                                                                                                                                                            t.on("end", function () {
                                                                                                                                                                                e.closedSource(e.previous.streamInfo),
                                                                                                                                                                                    e._sources.length ? e.prepareNextSource() : e.end();
                                                                                                                                                                            }),
                                                                                                                                                                            t.on("error", function (t) {
                                                                                                                                                                                e.error(t);
                                                                                                                                                                            }),
                                                                                                                                                                            this
                                                                                                                                                                        );
                                                                                                                                                                    }),
                                                                                                                                                                    (c.prototype.resume = function () {
                                                                                                                                                                        return (
                                                                                                                                                                            !!a.prototype.resume.call(this) &&
                                                                                                                                                                            (!this.previous && this._sources.length
                                                                                                                                                                                ? (this.prepareNextSource(), !0)
                                                                                                                                                                                : this.previous || this._sources.length || this.generatedError
                                                                                                                                                                                ? void 0
                                                                                                                                                                                : (this.end(), !0))
                                                                                                                                                                        );
                                                                                                                                                                    }),
                                                                                                                                                                    (c.prototype.error = function (t) {
                                                                                                                                                                        var e = this._sources;
                                                                                                                                                                        if (!a.prototype.error.call(this, t)) return !1;
                                                                                                                                                                        for (var r = 0; r < e.length; r++)
                                                                                                                                                                            try {
                                                                                                                                                                                e[r].error(t);
                                                                                                                                                                            } catch (t) {}
                                                                                                                                                                        return !0;
                                                                                                                                                                    }),
                                                                                                                                                                    (c.prototype.lock = function () {
                                                                                                                                                                        a.prototype.lock.call(this);
                                                                                                                                                                        for (var t = this._sources, e = 0; e < t.length; e++) t[e].lock();
                                                                                                                                                                    }),
                                                                                                                                                                    (e.exports = c);
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "../crc32": 4,
                                                                                                                                                                "../signature": 23,
                                                                                                                                                                "../stream/GenericWorker": 28,
                                                                                                                                                                "../utf8": 31,
                                                                                                                                                                "../utils": 32,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                        9: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("../compressions"),
                                                                                                                                                                    n = t("./ZipFileWorker");
                                                                                                                                                                r.generateWorker = function (t, e, r) {
                                                                                                                                                                    var s = new n(e.streamFiles, r, e.platform, e.encodeFileName),
                                                                                                                                                                        a = 0;
                                                                                                                                                                    try {
                                                                                                                                                                        t.forEach(function (t, r) {
                                                                                                                                                                            a++;
                                                                                                                                                                            var n = (function (t, e) {
                                                                                                                                                                                    var r = t || e,
                                                                                                                                                                                        n = i[r];
                                                                                                                                                                                    if (!n)
                                                                                                                                                                                        throw new Error(
                                                                                                                                                                                            r + " is not a valid compression method !"
                                                                                                                                                                                        );
                                                                                                                                                                                    return n;
                                                                                                                                                                                })(r.options.compression, e.compression),
                                                                                                                                                                                o = r.options.compressionOptions || e.compressionOptions || {},
                                                                                                                                                                                l = r.dir,
                                                                                                                                                                                h = r.date;
                                                                                                                                                                            r._compressWorker(n, o)
                                                                                                                                                                                .withStreamInfo("file", {
                                                                                                                                                                                    name: t,
                                                                                                                                                                                    dir: l,
                                                                                                                                                                                    date: h,
                                                                                                                                                                                    comment: r.comment || "",
                                                                                                                                                                                    unixPermissions: r.unixPermissions,
                                                                                                                                                                                    dosPermissions: r.dosPermissions,
                                                                                                                                                                                })
                                                                                                                                                                                .pipe(s);
                                                                                                                                                                        }),
                                                                                                                                                                            (s.entriesCount = a);
                                                                                                                                                                    } catch (t) {
                                                                                                                                                                        s.error(t);
                                                                                                                                                                    }
                                                                                                                                                                    return s;
                                                                                                                                                                };
                                                                                                                                                            },
                                                                                                                                                            { "../compressions": 3, "./ZipFileWorker": 8 },
                                                                                                                                                        ],
                                                                                                                                                        10: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                function i() {
                                                                                                                                                                    if (!(this instanceof i)) return new i();
                                                                                                                                                                    if (arguments.length)
                                                                                                                                                                        throw new Error(
                                                                                                                                                                            "The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide."
                                                                                                                                                                        );
                                                                                                                                                                    (this.files = {}),
                                                                                                                                                                        (this.comment = null),
                                                                                                                                                                        (this.root = ""),
                                                                                                                                                                        (this.clone = function () {
                                                                                                                                                                            var t = new i();
                                                                                                                                                                            for (var e in this)
                                                                                                                                                                                "function" != typeof this[e] && (t[e] = this[e]);
                                                                                                                                                                            return t;
                                                                                                                                                                        });
                                                                                                                                                                }
                                                                                                                                                                ((i.prototype = t("./object")).loadAsync = t("./load")),
                                                                                                                                                                    (i.support = t("./support")),
                                                                                                                                                                    (i.defaults = t("./defaults")),
                                                                                                                                                                    (i.version = "3.5.0"),
                                                                                                                                                                    (i.loadAsync = function (t, e) {
                                                                                                                                                                        return new i().loadAsync(t, e);
                                                                                                                                                                    }),
                                                                                                                                                                    (i.external = t("./external")),
                                                                                                                                                                    (e.exports = i);
                                                                                                                                                            },
                                                                                                                                                            { "./defaults": 5, "./external": 6, "./load": 11, "./object": 15, "./support": 30 },
                                                                                                                                                        ],
                                                                                                                                                        11: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("./utils"),
                                                                                                                                                                    n = t("./external"),
                                                                                                                                                                    s = t("./utf8"),
                                                                                                                                                                    a = t("./zipEntries"),
                                                                                                                                                                    o = t("./stream/Crc32Probe"),
                                                                                                                                                                    l = t("./nodejsUtils");
                                                                                                                                                                function h(t) {
                                                                                                                                                                    return new n.Promise(function (e, r) {
                                                                                                                                                                        var i = t.decompressed.getContentWorker().pipe(new o());
                                                                                                                                                                        i.on("error", function (t) {
                                                                                                                                                                            r(t);
                                                                                                                                                                        })
                                                                                                                                                                            .on("end", function () {
                                                                                                                                                                                i.streamInfo.crc32 !== t.decompressed.crc32
                                                                                                                                                                                    ? r(new Error("Corrupted zip : CRC32 mismatch"))
                                                                                                                                                                                    : e();
                                                                                                                                                                            })
                                                                                                                                                                            .resume();
                                                                                                                                                                    });
                                                                                                                                                                }
                                                                                                                                                                e.exports = function (t, e) {
                                                                                                                                                                    var r = this;
                                                                                                                                                                    return (
                                                                                                                                                                        (e = i.extend(e || {}, {
                                                                                                                                                                            base64: !1,
                                                                                                                                                                            checkCRC32: !1,
                                                                                                                                                                            optimizedBinaryString: !1,
                                                                                                                                                                            createFolders: !1,
                                                                                                                                                                            decodeFileName: s.utf8decode,
                                                                                                                                                                        })),
                                                                                                                                                                        l.isNode && l.isStream(t)
                                                                                                                                                                            ? n.Promise.reject(
                                                                                                                                                                                  new Error(
                                                                                                                                                                                      "JSZip can't accept a stream when loading a zip file."
                                                                                                                                                                                  )
                                                                                                                                                                              )
                                                                                                                                                                            : i
                                                                                                                                                                                  .prepareContent(
                                                                                                                                                                                      "the loaded zip file",
                                                                                                                                                                                      t,
                                                                                                                                                                                      !0,
                                                                                                                                                                                      e.optimizedBinaryString,
                                                                                                                                                                                      e.base64
                                                                                                                                                                                  )
                                                                                                                                                                                  .then(function (t) {
                                                                                                                                                                                      var r = new a(e);
                                                                                                                                                                                      return r.load(t), r;
                                                                                                                                                                                  })
                                                                                                                                                                                  .then(function (t) {
                                                                                                                                                                                      var r = [n.Promise.resolve(t)],
                                                                                                                                                                                          i = t.files;
                                                                                                                                                                                      if (e.checkCRC32)
                                                                                                                                                                                          for (var s = 0; s < i.length; s++) r.push(h(i[s]));
                                                                                                                                                                                      return n.Promise.all(r);
                                                                                                                                                                                  })
                                                                                                                                                                                  .then(function (t) {
                                                                                                                                                                                      for (
                                                                                                                                                                                          var i = t.shift(), n = i.files, s = 0;
                                                                                                                                                                                          s < n.length;
                                                                                                                                                                                          s++
                                                                                                                                                                                      ) {
                                                                                                                                                                                          var a = n[s];
                                                                                                                                                                                          r.file(a.fileNameStr, a.decompressed, {
                                                                                                                                                                                              binary: !0,
                                                                                                                                                                                              optimizedBinaryString: !0,
                                                                                                                                                                                              date: a.date,
                                                                                                                                                                                              dir: a.dir,
                                                                                                                                                                                              comment: a.fileCommentStr.length
                                                                                                                                                                                                  ? a.fileCommentStr
                                                                                                                                                                                                  : null,
                                                                                                                                                                                              unixPermissions: a.unixPermissions,
                                                                                                                                                                                              dosPermissions: a.dosPermissions,
                                                                                                                                                                                              createFolders: e.createFolders,
                                                                                                                                                                                          });
                                                                                                                                                                                      }
                                                                                                                                                                                      return (
                                                                                                                                                                                          i.zipComment.length && (r.comment = i.zipComment), r
                                                                                                                                                                                      );
                                                                                                                                                                                  })
                                                                                                                                                                    );
                                                                                                                                                                };
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "./external": 6,
                                                                                                                                                                "./nodejsUtils": 14,
                                                                                                                                                                "./stream/Crc32Probe": 25,
                                                                                                                                                                "./utf8": 31,
                                                                                                                                                                "./utils": 32,
                                                                                                                                                                "./zipEntries": 33,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                        12: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("../utils"),
                                                                                                                                                                    n = t("../stream/GenericWorker");
                                                                                                                                                                function s(t, e) {
                                                                                                                                                                    n.call(this, "Nodejs stream input adapter for " + t),
                                                                                                                                                                        (this._upstreamEnded = !1),
                                                                                                                                                                        this._bindStream(e);
                                                                                                                                                                }
                                                                                                                                                                i.inherits(s, n),
                                                                                                                                                                    (s.prototype._bindStream = function (t) {
                                                                                                                                                                        var e = this;
                                                                                                                                                                        (this._stream = t).pause(),
                                                                                                                                                                            t
                                                                                                                                                                                .on("data", function (t) {
                                                                                                                                                                                    e.push({ data: t, meta: { percent: 0 } });
                                                                                                                                                                                })
                                                                                                                                                                                .on("error", function (t) {
                                                                                                                                                                                    e.isPaused ? (this.generatedError = t) : e.error(t);
                                                                                                                                                                                })
                                                                                                                                                                                .on("end", function () {
                                                                                                                                                                                    e.isPaused ? (e._upstreamEnded = !0) : e.end();
                                                                                                                                                                                });
                                                                                                                                                                    }),
                                                                                                                                                                    (s.prototype.pause = function () {
                                                                                                                                                                        return !!n.prototype.pause.call(this) && (this._stream.pause(), !0);
                                                                                                                                                                    }),
                                                                                                                                                                    (s.prototype.resume = function () {
                                                                                                                                                                        return (
                                                                                                                                                                            !!n.prototype.resume.call(this) &&
                                                                                                                                                                            (this._upstreamEnded ? this.end() : this._stream.resume(), !0)
                                                                                                                                                                        );
                                                                                                                                                                    }),
                                                                                                                                                                    (e.exports = s);
                                                                                                                                                            },
                                                                                                                                                            { "../stream/GenericWorker": 28, "../utils": 32 },
                                                                                                                                                        ],
                                                                                                                                                        13: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("readable-stream").Readable;
                                                                                                                                                                function n(t, e, r) {
                                                                                                                                                                    i.call(this, e), (this._helper = t);
                                                                                                                                                                    var n = this;
                                                                                                                                                                    t.on("data", function (t, e) {
                                                                                                                                                                        n.push(t) || n._helper.pause(), r && r(e);
                                                                                                                                                                    })
                                                                                                                                                                        .on("error", function (t) {
                                                                                                                                                                            n.emit("error", t);
                                                                                                                                                                        })
                                                                                                                                                                        .on("end", function () {
                                                                                                                                                                            n.push(null);
                                                                                                                                                                        });
                                                                                                                                                                }
                                                                                                                                                                t("../utils").inherits(n, i),
                                                                                                                                                                    (n.prototype._read = function () {
                                                                                                                                                                        this._helper.resume();
                                                                                                                                                                    }),
                                                                                                                                                                    (e.exports = n);
                                                                                                                                                            },
                                                                                                                                                            { "../utils": 32, "readable-stream": 16 },
                                                                                                                                                        ],
                                                                                                                                                        14: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                e.exports = {
                                                                                                                                                                    isNode: "undefined" != typeof Buffer,
                                                                                                                                                                    newBufferFrom: function (t, e) {
                                                                                                                                                                        if (Buffer.from && Buffer.from !== Uint8Array.from)
                                                                                                                                                                            return Buffer.from(t, e);
                                                                                                                                                                        if ("number" == typeof t)
                                                                                                                                                                            throw new Error('The "data" argument must not be a number');
                                                                                                                                                                        return new Buffer(t, e);
                                                                                                                                                                    },
                                                                                                                                                                    allocBuffer: function (t) {
                                                                                                                                                                        if (Buffer.alloc) return Buffer.alloc(t);
                                                                                                                                                                        var e = new Buffer(t);
                                                                                                                                                                        return e.fill(0), e;
                                                                                                                                                                    },
                                                                                                                                                                    isBuffer: function (t) {
                                                                                                                                                                        return Buffer.isBuffer(t);
                                                                                                                                                                    },
                                                                                                                                                                    isStream: function (t) {
                                                                                                                                                                        return (
                                                                                                                                                                            t &&
                                                                                                                                                                            "function" == typeof t.on &&
                                                                                                                                                                            "function" == typeof t.pause &&
                                                                                                                                                                            "function" == typeof t.resume
                                                                                                                                                                        );
                                                                                                                                                                    },
                                                                                                                                                                };
                                                                                                                                                            },
                                                                                                                                                            {},
                                                                                                                                                        ],
                                                                                                                                                        15: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                function i(t, e, r) {
                                                                                                                                                                    var i,
                                                                                                                                                                        s = a.getTypeOf(e),
                                                                                                                                                                        l = a.extend(r || {}, h);
                                                                                                                                                                    (l.date = l.date || new Date()),
                                                                                                                                                                        null !== l.compression && (l.compression = l.compression.toUpperCase()),
                                                                                                                                                                        "string" == typeof l.unixPermissions &&
                                                                                                                                                                            (l.unixPermissions = parseInt(l.unixPermissions, 8)),
                                                                                                                                                                        l.unixPermissions && 16384 & l.unixPermissions && (l.dir = !0),
                                                                                                                                                                        l.dosPermissions && 16 & l.dosPermissions && (l.dir = !0),
                                                                                                                                                                        l.dir && (t = n(t)),
                                                                                                                                                                        l.createFolders &&
                                                                                                                                                                            (i = (function (t) {
                                                                                                                                                                                "/" === t.slice(-1) && (t = t.substring(0, t.length - 1));
                                                                                                                                                                                var e = t.lastIndexOf("/");
                                                                                                                                                                                return 0 < e ? t.substring(0, e) : "";
                                                                                                                                                                            })(t)) &&
                                                                                                                                                                            m.call(this, i, !0);
                                                                                                                                                                    var d,
                                                                                                                                                                        y = "string" === s && !1 === l.binary && !1 === l.base64;
                                                                                                                                                                    (r && void 0 !== r.binary) || (l.binary = !y),
                                                                                                                                                                        ((e instanceof c && 0 === e.uncompressedSize) ||
                                                                                                                                                                            l.dir ||
                                                                                                                                                                            !e ||
                                                                                                                                                                            0 === e.length) &&
                                                                                                                                                                            ((l.base64 = !1),
                                                                                                                                                                            (l.binary = !0),
                                                                                                                                                                            (e = ""),
                                                                                                                                                                            (l.compression = "STORE"),
                                                                                                                                                                            (s = "string")),
                                                                                                                                                                        (d =
                                                                                                                                                                            e instanceof c || e instanceof o
                                                                                                                                                                                ? e
                                                                                                                                                                                : u.isNode && u.isStream(e)
                                                                                                                                                                                ? new f(t, e)
                                                                                                                                                                                : a.prepareContent(
                                                                                                                                                                                      t,
                                                                                                                                                                                      e,
                                                                                                                                                                                      l.binary,
                                                                                                                                                                                      l.optimizedBinaryString,
                                                                                                                                                                                      l.base64
                                                                                                                                                                                  ));
                                                                                                                                                                    var g = new p(t, d, l);
                                                                                                                                                                    this.files[t] = g;
                                                                                                                                                                }
                                                                                                                                                                function n(t) {
                                                                                                                                                                    return "/" !== t.slice(-1) && (t += "/"), t;
                                                                                                                                                                }
                                                                                                                                                                var s = t("./utf8"),
                                                                                                                                                                    a = t("./utils"),
                                                                                                                                                                    o = t("./stream/GenericWorker"),
                                                                                                                                                                    l = t("./stream/StreamHelper"),
                                                                                                                                                                    h = t("./defaults"),
                                                                                                                                                                    c = t("./compressedObject"),
                                                                                                                                                                    p = t("./zipObject"),
                                                                                                                                                                    d = t("./generate"),
                                                                                                                                                                    u = t("./nodejsUtils"),
                                                                                                                                                                    f = t("./nodejs/NodejsStreamInputAdapter"),
                                                                                                                                                                    m = function (t, e) {
                                                                                                                                                                        return (
                                                                                                                                                                            (e = void 0 !== e ? e : h.createFolders),
                                                                                                                                                                            (t = n(t)),
                                                                                                                                                                            this.files[t] ||
                                                                                                                                                                                i.call(this, t, null, { dir: !0, createFolders: e }),
                                                                                                                                                                            this.files[t]
                                                                                                                                                                        );
                                                                                                                                                                    };
                                                                                                                                                                function y(t) {
                                                                                                                                                                    return "[object RegExp]" === Object.prototype.toString.call(t);
                                                                                                                                                                }
                                                                                                                                                                var g = {
                                                                                                                                                                    load: function () {
                                                                                                                                                                        throw new Error(
                                                                                                                                                                            "This method has been removed in JSZip 3.0, please check the upgrade guide."
                                                                                                                                                                        );
                                                                                                                                                                    },
                                                                                                                                                                    forEach: function (t) {
                                                                                                                                                                        var e, r, i;
                                                                                                                                                                        for (e in this.files)
                                                                                                                                                                            this.files.hasOwnProperty(e) &&
                                                                                                                                                                                ((i = this.files[e]),
                                                                                                                                                                                (r = e.slice(this.root.length, e.length)) &&
                                                                                                                                                                                    e.slice(0, this.root.length) === this.root &&
                                                                                                                                                                                    t(r, i));
                                                                                                                                                                    },
                                                                                                                                                                    filter: function (t) {
                                                                                                                                                                        var e = [];
                                                                                                                                                                        return (
                                                                                                                                                                            this.forEach(function (r, i) {
                                                                                                                                                                                t(r, i) && e.push(i);
                                                                                                                                                                            }),
                                                                                                                                                                            e
                                                                                                                                                                        );
                                                                                                                                                                    },
                                                                                                                                                                    file: function (t, e, r) {
                                                                                                                                                                        if (1 !== arguments.length)
                                                                                                                                                                            return (t = this.root + t), i.call(this, t, e, r), this;
                                                                                                                                                                        if (y(t)) {
                                                                                                                                                                            var n = t;
                                                                                                                                                                            return this.filter(function (t, e) {
                                                                                                                                                                                return !e.dir && n.test(t);
                                                                                                                                                                            });
                                                                                                                                                                        }
                                                                                                                                                                        var s = this.files[this.root + t];
                                                                                                                                                                        return s && !s.dir ? s : null;
                                                                                                                                                                    },
                                                                                                                                                                    folder: function (t) {
                                                                                                                                                                        if (!t) return this;
                                                                                                                                                                        if (y(t))
                                                                                                                                                                            return this.filter(function (e, r) {
                                                                                                                                                                                return r.dir && t.test(e);
                                                                                                                                                                            });
                                                                                                                                                                        var e = this.root + t,
                                                                                                                                                                            r = m.call(this, e),
                                                                                                                                                                            i = this.clone();
                                                                                                                                                                        return (i.root = r.name), i;
                                                                                                                                                                    },
                                                                                                                                                                    remove: function (t) {
                                                                                                                                                                        t = this.root + t;
                                                                                                                                                                        var e = this.files[t];
                                                                                                                                                                        if (
                                                                                                                                                                            (e || ("/" !== t.slice(-1) && (t += "/"), (e = this.files[t])),
                                                                                                                                                                            e && !e.dir)
                                                                                                                                                                        )
                                                                                                                                                                            delete this.files[t];
                                                                                                                                                                        else
                                                                                                                                                                            for (
                                                                                                                                                                                var r = this.filter(function (e, r) {
                                                                                                                                                                                        return r.name.slice(0, t.length) === t;
                                                                                                                                                                                    }),
                                                                                                                                                                                    i = 0;
                                                                                                                                                                                i < r.length;
                                                                                                                                                                                i++
                                                                                                                                                                            )
                                                                                                                                                                                delete this.files[r[i].name];
                                                                                                                                                                        return this;
                                                                                                                                                                    },
                                                                                                                                                                    generate: function (t) {
                                                                                                                                                                        throw new Error(
                                                                                                                                                                            "This method has been removed in JSZip 3.0, please check the upgrade guide."
                                                                                                                                                                        );
                                                                                                                                                                    },
                                                                                                                                                                    generateInternalStream: function (t) {
                                                                                                                                                                        var e,
                                                                                                                                                                            r = {};
                                                                                                                                                                        try {
                                                                                                                                                                            if (
                                                                                                                                                                                (((r = a.extend(t || {}, {
                                                                                                                                                                                    streamFiles: !1,
                                                                                                                                                                                    compression: "STORE",
                                                                                                                                                                                    compressionOptions: null,
                                                                                                                                                                                    type: "",
                                                                                                                                                                                    platform: "DOS",
                                                                                                                                                                                    comment: null,
                                                                                                                                                                                    mimeType: "application/zip",
                                                                                                                                                                                    encodeFileName: s.utf8encode,
                                                                                                                                                                                })).type = r.type.toLowerCase()),
                                                                                                                                                                                (r.compression = r.compression.toUpperCase()),
                                                                                                                                                                                "binarystring" === r.type && (r.type = "string"),
                                                                                                                                                                                !r.type)
                                                                                                                                                                            )
                                                                                                                                                                                throw new Error("No output type specified.");
                                                                                                                                                                            a.checkSupport(r.type),
                                                                                                                                                                                ("darwin" !== r.platform &&
                                                                                                                                                                                    "freebsd" !== r.platform &&
                                                                                                                                                                                    "linux" !== r.platform &&
                                                                                                                                                                                    "sunos" !== r.platform) ||
                                                                                                                                                                                    (r.platform = "UNIX"),
                                                                                                                                                                                "win32" === r.platform && (r.platform = "DOS");
                                                                                                                                                                            var i = r.comment || this.comment || "";
                                                                                                                                                                            e = d.generateWorker(this, r, i);
                                                                                                                                                                        } catch (t) {
                                                                                                                                                                            (e = new o("error")).error(t);
                                                                                                                                                                        }
                                                                                                                                                                        return new l(e, r.type || "string", r.mimeType);
                                                                                                                                                                    },
                                                                                                                                                                    generateAsync: function (t, e) {
                                                                                                                                                                        return this.generateInternalStream(t).accumulate(e);
                                                                                                                                                                    },
                                                                                                                                                                    generateNodeStream: function (t, e) {
                                                                                                                                                                        return (
                                                                                                                                                                            (t = t || {}).type || (t.type = "nodebuffer"),
                                                                                                                                                                            this.generateInternalStream(t).toNodejsStream(e)
                                                                                                                                                                        );
                                                                                                                                                                    },
                                                                                                                                                                };
                                                                                                                                                                e.exports = g;
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "./compressedObject": 2,
                                                                                                                                                                "./defaults": 5,
                                                                                                                                                                "./generate": 9,
                                                                                                                                                                "./nodejs/NodejsStreamInputAdapter": 12,
                                                                                                                                                                "./nodejsUtils": 14,
                                                                                                                                                                "./stream/GenericWorker": 28,
                                                                                                                                                                "./stream/StreamHelper": 29,
                                                                                                                                                                "./utf8": 31,
                                                                                                                                                                "./utils": 32,
                                                                                                                                                                "./zipObject": 35,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                        16: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                e.exports = t("stream");
                                                                                                                                                            },
                                                                                                                                                            { stream: void 0 },
                                                                                                                                                        ],
                                                                                                                                                        17: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("./DataReader");
                                                                                                                                                                function n(t) {
                                                                                                                                                                    i.call(this, t);
                                                                                                                                                                    for (var e = 0; e < this.data.length; e++) t[e] = 255 & t[e];
                                                                                                                                                                }
                                                                                                                                                                t("../utils").inherits(n, i),
                                                                                                                                                                    (n.prototype.byteAt = function (t) {
                                                                                                                                                                        return this.data[this.zero + t];
                                                                                                                                                                    }),
                                                                                                                                                                    (n.prototype.lastIndexOfSignature = function (t) {
                                                                                                                                                                        for (
                                                                                                                                                                            var e = t.charCodeAt(0),
                                                                                                                                                                                r = t.charCodeAt(1),
                                                                                                                                                                                i = t.charCodeAt(2),
                                                                                                                                                                                n = t.charCodeAt(3),
                                                                                                                                                                                s = this.length - 4;
                                                                                                                                                                            0 <= s;
                                                                                                                                                                            --s
                                                                                                                                                                        )
                                                                                                                                                                            if (
                                                                                                                                                                                this.data[s] === e &&
                                                                                                                                                                                this.data[s + 1] === r &&
                                                                                                                                                                                this.data[s + 2] === i &&
                                                                                                                                                                                this.data[s + 3] === n
                                                                                                                                                                            )
                                                                                                                                                                                return s - this.zero;
                                                                                                                                                                        return -1;
                                                                                                                                                                    }),
                                                                                                                                                                    (n.prototype.readAndCheckSignature = function (t) {
                                                                                                                                                                        var e = t.charCodeAt(0),
                                                                                                                                                                            r = t.charCodeAt(1),
                                                                                                                                                                            i = t.charCodeAt(2),
                                                                                                                                                                            n = t.charCodeAt(3),
                                                                                                                                                                            s = this.readData(4);
                                                                                                                                                                        return e === s[0] && r === s[1] && i === s[2] && n === s[3];
                                                                                                                                                                    }),
                                                                                                                                                                    (n.prototype.readData = function (t) {
                                                                                                                                                                        if ((this.checkOffset(t), 0 === t)) return [];
                                                                                                                                                                        var e = this.data.slice(
                                                                                                                                                                            this.zero + this.index,
                                                                                                                                                                            this.zero + this.index + t
                                                                                                                                                                        );
                                                                                                                                                                        return (this.index += t), e;
                                                                                                                                                                    }),
                                                                                                                                                                    (e.exports = n);
                                                                                                                                                            },
                                                                                                                                                            { "../utils": 32, "./DataReader": 18 },
                                                                                                                                                        ],
                                                                                                                                                        18: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("../utils");
                                                                                                                                                                function n(t) {
                                                                                                                                                                    (this.data = t),
                                                                                                                                                                        (this.length = t.length),
                                                                                                                                                                        (this.index = 0),
                                                                                                                                                                        (this.zero = 0);
                                                                                                                                                                }
                                                                                                                                                                (n.prototype = {
                                                                                                                                                                    checkOffset: function (t) {
                                                                                                                                                                        this.checkIndex(this.index + t);
                                                                                                                                                                    },
                                                                                                                                                                    checkIndex: function (t) {
                                                                                                                                                                        if (this.length < this.zero + t || t < 0)
                                                                                                                                                                            throw new Error(
                                                                                                                                                                                "End of data reached (data length = " +
                                                                                                                                                                                    this.length +
                                                                                                                                                                                    ", asked index = " +
                                                                                                                                                                                    t +
                                                                                                                                                                                    "). Corrupted zip ?"
                                                                                                                                                                            );
                                                                                                                                                                    },
                                                                                                                                                                    setIndex: function (t) {
                                                                                                                                                                        this.checkIndex(t), (this.index = t);
                                                                                                                                                                    },
                                                                                                                                                                    skip: function (t) {
                                                                                                                                                                        this.setIndex(this.index + t);
                                                                                                                                                                    },
                                                                                                                                                                    byteAt: function (t) {},
                                                                                                                                                                    readInt: function (t) {
                                                                                                                                                                        var e,
                                                                                                                                                                            r = 0;
                                                                                                                                                                        for (this.checkOffset(t), e = this.index + t - 1; e >= this.index; e--)
                                                                                                                                                                            r = (r << 8) + this.byteAt(e);
                                                                                                                                                                        return (this.index += t), r;
                                                                                                                                                                    },
                                                                                                                                                                    readString: function (t) {
                                                                                                                                                                        return i.transformTo("string", this.readData(t));
                                                                                                                                                                    },
                                                                                                                                                                    readData: function (t) {},
                                                                                                                                                                    lastIndexOfSignature: function (t) {},
                                                                                                                                                                    readAndCheckSignature: function (t) {},
                                                                                                                                                                    readDate: function () {
                                                                                                                                                                        var t = this.readInt(4);
                                                                                                                                                                        return new Date(
                                                                                                                                                                            Date.UTC(
                                                                                                                                                                                1980 + ((t >> 25) & 127),
                                                                                                                                                                                ((t >> 21) & 15) - 1,
                                                                                                                                                                                (t >> 16) & 31,
                                                                                                                                                                                (t >> 11) & 31,
                                                                                                                                                                                (t >> 5) & 63,
                                                                                                                                                                                (31 & t) << 1
                                                                                                                                                                            )
                                                                                                                                                                        );
                                                                                                                                                                    },
                                                                                                                                                                }),
                                                                                                                                                                    (e.exports = n);
                                                                                                                                                            },
                                                                                                                                                            { "../utils": 32 },
                                                                                                                                                        ],
                                                                                                                                                        19: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("./Uint8ArrayReader");
                                                                                                                                                                function n(t) {
                                                                                                                                                                    i.call(this, t);
                                                                                                                                                                }
                                                                                                                                                                t("../utils").inherits(n, i),
                                                                                                                                                                    (n.prototype.readData = function (t) {
                                                                                                                                                                        this.checkOffset(t);
                                                                                                                                                                        var e = this.data.slice(
                                                                                                                                                                            this.zero + this.index,
                                                                                                                                                                            this.zero + this.index + t
                                                                                                                                                                        );
                                                                                                                                                                        return (this.index += t), e;
                                                                                                                                                                    }),
                                                                                                                                                                    (e.exports = n);
                                                                                                                                                            },
                                                                                                                                                            { "../utils": 32, "./Uint8ArrayReader": 21 },
                                                                                                                                                        ],
                                                                                                                                                        20: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("./DataReader");
                                                                                                                                                                function n(t) {
                                                                                                                                                                    i.call(this, t);
                                                                                                                                                                }
                                                                                                                                                                t("../utils").inherits(n, i),
                                                                                                                                                                    (n.prototype.byteAt = function (t) {
                                                                                                                                                                        return this.data.charCodeAt(this.zero + t);
                                                                                                                                                                    }),
                                                                                                                                                                    (n.prototype.lastIndexOfSignature = function (t) {
                                                                                                                                                                        return this.data.lastIndexOf(t) - this.zero;
                                                                                                                                                                    }),
                                                                                                                                                                    (n.prototype.readAndCheckSignature = function (t) {
                                                                                                                                                                        return t === this.readData(4);
                                                                                                                                                                    }),
                                                                                                                                                                    (n.prototype.readData = function (t) {
                                                                                                                                                                        this.checkOffset(t);
                                                                                                                                                                        var e = this.data.slice(
                                                                                                                                                                            this.zero + this.index,
                                                                                                                                                                            this.zero + this.index + t
                                                                                                                                                                        );
                                                                                                                                                                        return (this.index += t), e;
                                                                                                                                                                    }),
                                                                                                                                                                    (e.exports = n);
                                                                                                                                                            },
                                                                                                                                                            { "../utils": 32, "./DataReader": 18 },
                                                                                                                                                        ],
                                                                                                                                                        21: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("./ArrayReader");
                                                                                                                                                                function n(t) {
                                                                                                                                                                    i.call(this, t);
                                                                                                                                                                }
                                                                                                                                                                t("../utils").inherits(n, i),
                                                                                                                                                                    (n.prototype.readData = function (t) {
                                                                                                                                                                        if ((this.checkOffset(t), 0 === t)) return new Uint8Array(0);
                                                                                                                                                                        var e = this.data.subarray(
                                                                                                                                                                            this.zero + this.index,
                                                                                                                                                                            this.zero + this.index + t
                                                                                                                                                                        );
                                                                                                                                                                        return (this.index += t), e;
                                                                                                                                                                    }),
                                                                                                                                                                    (e.exports = n);
                                                                                                                                                            },
                                                                                                                                                            { "../utils": 32, "./ArrayReader": 17 },
                                                                                                                                                        ],
                                                                                                                                                        22: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("../utils"),
                                                                                                                                                                    n = t("../support"),
                                                                                                                                                                    s = t("./ArrayReader"),
                                                                                                                                                                    a = t("./StringReader"),
                                                                                                                                                                    o = t("./NodeBufferReader"),
                                                                                                                                                                    l = t("./Uint8ArrayReader");
                                                                                                                                                                e.exports = function (t) {
                                                                                                                                                                    var e = i.getTypeOf(t);
                                                                                                                                                                    return (
                                                                                                                                                                        i.checkSupport(e),
                                                                                                                                                                        "string" !== e || n.uint8array
                                                                                                                                                                            ? "nodebuffer" === e
                                                                                                                                                                                ? new o(t)
                                                                                                                                                                                : n.uint8array
                                                                                                                                                                                ? new l(i.transformTo("uint8array", t))
                                                                                                                                                                                : new s(i.transformTo("array", t))
                                                                                                                                                                            : new a(t)
                                                                                                                                                                    );
                                                                                                                                                                };
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "../support": 30,
                                                                                                                                                                "../utils": 32,
                                                                                                                                                                "./ArrayReader": 17,
                                                                                                                                                                "./NodeBufferReader": 19,
                                                                                                                                                                "./StringReader": 20,
                                                                                                                                                                "./Uint8ArrayReader": 21,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                        23: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                (r.LOCAL_FILE_HEADER = "PK"),
                                                                                                                                                                    (r.CENTRAL_FILE_HEADER = "PK"),
                                                                                                                                                                    (r.CENTRAL_DIRECTORY_END = "PK"),
                                                                                                                                                                    (r.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK"),
                                                                                                                                                                    (r.ZIP64_CENTRAL_DIRECTORY_END = "PK"),
                                                                                                                                                                    (r.DATA_DESCRIPTOR = "PK\b");
                                                                                                                                                            },
                                                                                                                                                            {},
                                                                                                                                                        ],
                                                                                                                                                        24: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("./GenericWorker"),
                                                                                                                                                                    n = t("../utils");
                                                                                                                                                                function s(t) {
                                                                                                                                                                    i.call(this, "ConvertWorker to " + t), (this.destType = t);
                                                                                                                                                                }
                                                                                                                                                                n.inherits(s, i),
                                                                                                                                                                    (s.prototype.processChunk = function (t) {
                                                                                                                                                                        this.push({ data: n.transformTo(this.destType, t.data), meta: t.meta });
                                                                                                                                                                    }),
                                                                                                                                                                    (e.exports = s);
                                                                                                                                                            },
                                                                                                                                                            { "../utils": 32, "./GenericWorker": 28 },
                                                                                                                                                        ],
                                                                                                                                                        25: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("./GenericWorker"),
                                                                                                                                                                    n = t("../crc32");
                                                                                                                                                                function s() {
                                                                                                                                                                    i.call(this, "Crc32Probe"), this.withStreamInfo("crc32", 0);
                                                                                                                                                                }
                                                                                                                                                                t("../utils").inherits(s, i),
                                                                                                                                                                    (s.prototype.processChunk = function (t) {
                                                                                                                                                                        (this.streamInfo.crc32 = n(t.data, this.streamInfo.crc32 || 0)),
                                                                                                                                                                            this.push(t);
                                                                                                                                                                    }),
                                                                                                                                                                    (e.exports = s);
                                                                                                                                                            },
                                                                                                                                                            { "../crc32": 4, "../utils": 32, "./GenericWorker": 28 },
                                                                                                                                                        ],
                                                                                                                                                        26: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("../utils"),
                                                                                                                                                                    n = t("./GenericWorker");
                                                                                                                                                                function s(t) {
                                                                                                                                                                    n.call(this, "DataLengthProbe for " + t),
                                                                                                                                                                        (this.propName = t),
                                                                                                                                                                        this.withStreamInfo(t, 0);
                                                                                                                                                                }
                                                                                                                                                                i.inherits(s, n),
                                                                                                                                                                    (s.prototype.processChunk = function (t) {
                                                                                                                                                                        if (t) {
                                                                                                                                                                            var e = this.streamInfo[this.propName] || 0;
                                                                                                                                                                            this.streamInfo[this.propName] = e + t.data.length;
                                                                                                                                                                        }
                                                                                                                                                                        n.prototype.processChunk.call(this, t);
                                                                                                                                                                    }),
                                                                                                                                                                    (e.exports = s);
                                                                                                                                                            },
                                                                                                                                                            { "../utils": 32, "./GenericWorker": 28 },
                                                                                                                                                        ],
                                                                                                                                                        27: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("../utils"),
                                                                                                                                                                    n = t("./GenericWorker");
                                                                                                                                                                function s(t) {
                                                                                                                                                                    n.call(this, "DataWorker");
                                                                                                                                                                    var e = this;
                                                                                                                                                                    (this.dataIsReady = !1),
                                                                                                                                                                        (this.index = 0),
                                                                                                                                                                        (this.max = 0),
                                                                                                                                                                        (this.data = null),
                                                                                                                                                                        (this.type = ""),
                                                                                                                                                                        (this._tickScheduled = !1),
                                                                                                                                                                        t.then(
                                                                                                                                                                            function (t) {
                                                                                                                                                                                (e.dataIsReady = !0),
                                                                                                                                                                                    (e.data = t),
                                                                                                                                                                                    (e.max = (t && t.length) || 0),
                                                                                                                                                                                    (e.type = i.getTypeOf(t)),
                                                                                                                                                                                    e.isPaused || e._tickAndRepeat();
                                                                                                                                                                            },
                                                                                                                                                                            function (t) {
                                                                                                                                                                                e.error(t);
                                                                                                                                                                            }
                                                                                                                                                                        );
                                                                                                                                                                }
                                                                                                                                                                i.inherits(s, n),
                                                                                                                                                                    (s.prototype.cleanUp = function () {
                                                                                                                                                                        n.prototype.cleanUp.call(this), (this.data = null);
                                                                                                                                                                    }),
                                                                                                                                                                    (s.prototype.resume = function () {
                                                                                                                                                                        return (
                                                                                                                                                                            !!n.prototype.resume.call(this) &&
                                                                                                                                                                            (!this._tickScheduled &&
                                                                                                                                                                                this.dataIsReady &&
                                                                                                                                                                                ((this._tickScheduled = !0),
                                                                                                                                                                                i.delay(this._tickAndRepeat, [], this)),
                                                                                                                                                                            !0)
                                                                                                                                                                        );
                                                                                                                                                                    }),
                                                                                                                                                                    (s.prototype._tickAndRepeat = function () {
                                                                                                                                                                        (this._tickScheduled = !1),
                                                                                                                                                                            this.isPaused ||
                                                                                                                                                                                this.isFinished ||
                                                                                                                                                                                (this._tick(),
                                                                                                                                                                                this.isFinished ||
                                                                                                                                                                                    (i.delay(this._tickAndRepeat, [], this),
                                                                                                                                                                                    (this._tickScheduled = !0)));
                                                                                                                                                                    }),
                                                                                                                                                                    (s.prototype._tick = function () {
                                                                                                                                                                        if (this.isPaused || this.isFinished) return !1;
                                                                                                                                                                        var t = null,
                                                                                                                                                                            e = Math.min(this.max, this.index + 16384);
                                                                                                                                                                        if (this.index >= this.max) return this.end();
                                                                                                                                                                        switch (this.type) {
                                                                                                                                                                            case "string":
                                                                                                                                                                                t = this.data.substring(this.index, e);
                                                                                                                                                                                break;
                                                                                                                                                                            case "uint8array":
                                                                                                                                                                                t = this.data.subarray(this.index, e);
                                                                                                                                                                                break;
                                                                                                                                                                            case "array":
                                                                                                                                                                            case "nodebuffer":
                                                                                                                                                                                t = this.data.slice(this.index, e);
                                                                                                                                                                        }
                                                                                                                                                                        return (
                                                                                                                                                                            (this.index = e),
                                                                                                                                                                            this.push({
                                                                                                                                                                                data: t,
                                                                                                                                                                                meta: { percent: this.max ? (this.index / this.max) * 100 : 0 },
                                                                                                                                                                            })
                                                                                                                                                                        );
                                                                                                                                                                    }),
                                                                                                                                                                    (e.exports = s);
                                                                                                                                                            },
                                                                                                                                                            { "../utils": 32, "./GenericWorker": 28 },
                                                                                                                                                        ],
                                                                                                                                                        28: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                function i(t) {
                                                                                                                                                                    (this.name = t || "default"),
                                                                                                                                                                        (this.streamInfo = {}),
                                                                                                                                                                        (this.generatedError = null),
                                                                                                                                                                        (this.extraStreamInfo = {}),
                                                                                                                                                                        (this.isPaused = !0),
                                                                                                                                                                        (this.isFinished = !1),
                                                                                                                                                                        (this.isLocked = !1),
                                                                                                                                                                        (this._listeners = { data: [], end: [], error: [] }),
                                                                                                                                                                        (this.previous = null);
                                                                                                                                                                }
                                                                                                                                                                (i.prototype = {
                                                                                                                                                                    push: function (t) {
                                                                                                                                                                        this.emit("data", t);
                                                                                                                                                                    },
                                                                                                                                                                    end: function () {
                                                                                                                                                                        if (this.isFinished) return !1;
                                                                                                                                                                        this.flush();
                                                                                                                                                                        try {
                                                                                                                                                                            this.emit("end"), this.cleanUp(), (this.isFinished = !0);
                                                                                                                                                                        } catch (t) {
                                                                                                                                                                            this.emit("error", t);
                                                                                                                                                                        }
                                                                                                                                                                        return !0;
                                                                                                                                                                    },
                                                                                                                                                                    error: function (t) {
                                                                                                                                                                        return (
                                                                                                                                                                            !this.isFinished &&
                                                                                                                                                                            (this.isPaused
                                                                                                                                                                                ? (this.generatedError = t)
                                                                                                                                                                                : ((this.isFinished = !0),
                                                                                                                                                                                  this.emit("error", t),
                                                                                                                                                                                  this.previous && this.previous.error(t),
                                                                                                                                                                                  this.cleanUp()),
                                                                                                                                                                            !0)
                                                                                                                                                                        );
                                                                                                                                                                    },
                                                                                                                                                                    on: function (t, e) {
                                                                                                                                                                        return this._listeners[t].push(e), this;
                                                                                                                                                                    },
                                                                                                                                                                    cleanUp: function () {
                                                                                                                                                                        (this.streamInfo = this.generatedError = this.extraStreamInfo = null),
                                                                                                                                                                            (this._listeners = []);
                                                                                                                                                                    },
                                                                                                                                                                    emit: function (t, e) {
                                                                                                                                                                        if (this._listeners[t])
                                                                                                                                                                            for (var r = 0; r < this._listeners[t].length; r++)
                                                                                                                                                                                this._listeners[t][r].call(this, e);
                                                                                                                                                                    },
                                                                                                                                                                    pipe: function (t) {
                                                                                                                                                                        return t.registerPrevious(this);
                                                                                                                                                                    },
                                                                                                                                                                    registerPrevious: function (t) {
                                                                                                                                                                        if (this.isLocked)
                                                                                                                                                                            throw new Error("The stream '" + this + "' has already been used.");
                                                                                                                                                                        (this.streamInfo = t.streamInfo),
                                                                                                                                                                            this.mergeStreamInfo(),
                                                                                                                                                                            (this.previous = t);
                                                                                                                                                                        var e = this;
                                                                                                                                                                        return (
                                                                                                                                                                            t.on("data", function (t) {
                                                                                                                                                                                e.processChunk(t);
                                                                                                                                                                            }),
                                                                                                                                                                            t.on("end", function () {
                                                                                                                                                                                e.end();
                                                                                                                                                                            }),
                                                                                                                                                                            t.on("error", function (t) {
                                                                                                                                                                                e.error(t);
                                                                                                                                                                            }),
                                                                                                                                                                            this
                                                                                                                                                                        );
                                                                                                                                                                    },
                                                                                                                                                                    pause: function () {
                                                                                                                                                                        return (
                                                                                                                                                                            !this.isPaused &&
                                                                                                                                                                            !this.isFinished &&
                                                                                                                                                                            ((this.isPaused = !0), this.previous && this.previous.pause(), !0)
                                                                                                                                                                        );
                                                                                                                                                                    },
                                                                                                                                                                    resume: function () {
                                                                                                                                                                        if (!this.isPaused || this.isFinished) return !1;
                                                                                                                                                                        var t = (this.isPaused = !1);
                                                                                                                                                                        return (
                                                                                                                                                                            this.generatedError && (this.error(this.generatedError), (t = !0)),
                                                                                                                                                                            this.previous && this.previous.resume(),
                                                                                                                                                                            !t
                                                                                                                                                                        );
                                                                                                                                                                    },
                                                                                                                                                                    flush: function () {},
                                                                                                                                                                    processChunk: function (t) {
                                                                                                                                                                        this.push(t);
                                                                                                                                                                    },
                                                                                                                                                                    withStreamInfo: function (t, e) {
                                                                                                                                                                        return (this.extraStreamInfo[t] = e), this.mergeStreamInfo(), this;
                                                                                                                                                                    },
                                                                                                                                                                    mergeStreamInfo: function () {
                                                                                                                                                                        for (var t in this.extraStreamInfo)
                                                                                                                                                                            this.extraStreamInfo.hasOwnProperty(t) &&
                                                                                                                                                                                (this.streamInfo[t] = this.extraStreamInfo[t]);
                                                                                                                                                                    },
                                                                                                                                                                    lock: function () {
                                                                                                                                                                        if (this.isLocked)
                                                                                                                                                                            throw new Error("The stream '" + this + "' has already been used.");
                                                                                                                                                                        (this.isLocked = !0), this.previous && this.previous.lock();
                                                                                                                                                                    },
                                                                                                                                                                    toString: function () {
                                                                                                                                                                        var t = "Worker " + this.name;
                                                                                                                                                                        return this.previous ? this.previous + " -> " + t : t;
                                                                                                                                                                    },
                                                                                                                                                                }),
                                                                                                                                                                    (e.exports = i);
                                                                                                                                                            },
                                                                                                                                                            {},
                                                                                                                                                        ],
                                                                                                                                                        29: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("../utils"),
                                                                                                                                                                    n = t("./ConvertWorker"),
                                                                                                                                                                    s = t("./GenericWorker"),
                                                                                                                                                                    a = t("../base64"),
                                                                                                                                                                    o = t("../support"),
                                                                                                                                                                    l = t("../external"),
                                                                                                                                                                    h = null;
                                                                                                                                                                if (o.nodestream)
                                                                                                                                                                    try {
                                                                                                                                                                        h = t("../nodejs/NodejsStreamOutputAdapter");
                                                                                                                                                                    } catch (t) {}
                                                                                                                                                                function c(t, e, r) {
                                                                                                                                                                    var a = e;
                                                                                                                                                                    switch (e) {
                                                                                                                                                                        case "blob":
                                                                                                                                                                        case "arraybuffer":
                                                                                                                                                                            a = "uint8array";
                                                                                                                                                                            break;
                                                                                                                                                                        case "base64":
                                                                                                                                                                            a = "string";
                                                                                                                                                                    }
                                                                                                                                                                    try {
                                                                                                                                                                        (this._internalType = a),
                                                                                                                                                                            (this._outputType = e),
                                                                                                                                                                            (this._mimeType = r),
                                                                                                                                                                            i.checkSupport(a),
                                                                                                                                                                            (this._worker = t.pipe(new n(a))),
                                                                                                                                                                            t.lock();
                                                                                                                                                                    } catch (t) {
                                                                                                                                                                        (this._worker = new s("error")), this._worker.error(t);
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                (c.prototype = {
                                                                                                                                                                    accumulate: function (t) {
                                                                                                                                                                        return (
                                                                                                                                                                            (e = this),
                                                                                                                                                                            (r = t),
                                                                                                                                                                            new l.Promise(function (t, n) {
                                                                                                                                                                                var s = [],
                                                                                                                                                                                    o = e._internalType,
                                                                                                                                                                                    l = e._outputType,
                                                                                                                                                                                    h = e._mimeType;
                                                                                                                                                                                e.on("data", function (t, e) {
                                                                                                                                                                                    s.push(t), r && r(e);
                                                                                                                                                                                })
                                                                                                                                                                                    .on("error", function (t) {
                                                                                                                                                                                        (s = []), n(t);
                                                                                                                                                                                    })
                                                                                                                                                                                    .on("end", function () {
                                                                                                                                                                                        try {
                                                                                                                                                                                            var e = (function (t, e, r) {
                                                                                                                                                                                                switch (t) {
                                                                                                                                                                                                    case "blob":
                                                                                                                                                                                                        return i.newBlob(
                                                                                                                                                                                                            i.transformTo("arraybuffer", e),
                                                                                                                                                                                                            r
                                                                                                                                                                                                        );
                                                                                                                                                                                                    case "base64":
                                                                                                                                                                                                        return a.encode(e);
                                                                                                                                                                                                    default:
                                                                                                                                                                                                        return i.transformTo(t, e);
                                                                                                                                                                                                }
                                                                                                                                                                                            })(
                                                                                                                                                                                                l,
                                                                                                                                                                                                (function (t, e) {
                                                                                                                                                                                                    var r,
                                                                                                                                                                                                        i = 0,
                                                                                                                                                                                                        n = null,
                                                                                                                                                                                                        s = 0;
                                                                                                                                                                                                    for (r = 0; r < e.length; r++)
                                                                                                                                                                                                        s += e[r].length;
                                                                                                                                                                                                    switch (t) {
                                                                                                                                                                                                        case "string":
                                                                                                                                                                                                            return e.join("");
                                                                                                                                                                                                        case "array":
                                                                                                                                                                                                            return Array.prototype.concat.apply(
                                                                                                                                                                                                                [],
                                                                                                                                                                                                                e
                                                                                                                                                                                                            );
                                                                                                                                                                                                        case "uint8array":
                                                                                                                                                                                                            for (
                                                                                                                                                                                                                n = new Uint8Array(s), r = 0;
                                                                                                                                                                                                                r < e.length;
                                                                                                                                                                                                                r++
                                                                                                                                                                                                            )
                                                                                                                                                                                                                n.set(e[r], i),
                                                                                                                                                                                                                    (i += e[r].length);
                                                                                                                                                                                                            return n;
                                                                                                                                                                                                        case "nodebuffer":
                                                                                                                                                                                                            return Buffer.concat(e);
                                                                                                                                                                                                        default:
                                                                                                                                                                                                            throw new Error(
                                                                                                                                                                                                                "concat : unsupported type '" +
                                                                                                                                                                                                                    t +
                                                                                                                                                                                                                    "'"
                                                                                                                                                                                                            );
                                                                                                                                                                                                    }
                                                                                                                                                                                                })(o, s),
                                                                                                                                                                                                h
                                                                                                                                                                                            );
                                                                                                                                                                                            t(e);
                                                                                                                                                                                        } catch (e) {
                                                                                                                                                                                            n(e);
                                                                                                                                                                                        }
                                                                                                                                                                                        s = [];
                                                                                                                                                                                    })
                                                                                                                                                                                    .resume();
                                                                                                                                                                            })
                                                                                                                                                                        );
                                                                                                                                                                        var e, r;
                                                                                                                                                                    },
                                                                                                                                                                    on: function (t, e) {
                                                                                                                                                                        var r = this;
                                                                                                                                                                        return (
                                                                                                                                                                            "data" === t
                                                                                                                                                                                ? this._worker.on(t, function (t) {
                                                                                                                                                                                      e.call(r, t.data, t.meta);
                                                                                                                                                                                  })
                                                                                                                                                                                : this._worker.on(t, function () {
                                                                                                                                                                                      i.delay(e, arguments, r);
                                                                                                                                                                                  }),
                                                                                                                                                                            this
                                                                                                                                                                        );
                                                                                                                                                                    },
                                                                                                                                                                    resume: function () {
                                                                                                                                                                        return i.delay(this._worker.resume, [], this._worker), this;
                                                                                                                                                                    },
                                                                                                                                                                    pause: function () {
                                                                                                                                                                        return this._worker.pause(), this;
                                                                                                                                                                    },
                                                                                                                                                                    toNodejsStream: function (t) {
                                                                                                                                                                        if ((i.checkSupport("nodestream"), "nodebuffer" !== this._outputType))
                                                                                                                                                                            throw new Error(
                                                                                                                                                                                this._outputType + " is not supported by this method"
                                                                                                                                                                            );
                                                                                                                                                                        return new h(
                                                                                                                                                                            this,
                                                                                                                                                                            { objectMode: "nodebuffer" !== this._outputType },
                                                                                                                                                                            t
                                                                                                                                                                        );
                                                                                                                                                                    },
                                                                                                                                                                }),
                                                                                                                                                                    (e.exports = c);
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "../base64": 1,
                                                                                                                                                                "../external": 6,
                                                                                                                                                                "../nodejs/NodejsStreamOutputAdapter": 13,
                                                                                                                                                                "../support": 30,
                                                                                                                                                                "../utils": 32,
                                                                                                                                                                "./ConvertWorker": 24,
                                                                                                                                                                "./GenericWorker": 28,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                        30: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                if (
                                                                                                                                                                    ((r.base64 = !0),
                                                                                                                                                                    (r.array = !0),
                                                                                                                                                                    (r.string = !0),
                                                                                                                                                                    (r.arraybuffer =
                                                                                                                                                                        "undefined" != typeof ArrayBuffer && "undefined" != typeof Uint8Array),
                                                                                                                                                                    (r.nodebuffer = "undefined" != typeof Buffer),
                                                                                                                                                                    (r.uint8array = "undefined" != typeof Uint8Array),
                                                                                                                                                                    "undefined" == typeof ArrayBuffer)
                                                                                                                                                                )
                                                                                                                                                                    r.blob = !1;
                                                                                                                                                                else {
                                                                                                                                                                    var i = new ArrayBuffer(0);
                                                                                                                                                                    try {
                                                                                                                                                                        r.blob = 0 === new Blob([i], { type: "application/zip" }).size;
                                                                                                                                                                    } catch (t) {
                                                                                                                                                                        try {
                                                                                                                                                                            var n = new (self.BlobBuilder ||
                                                                                                                                                                                self.WebKitBlobBuilder ||
                                                                                                                                                                                self.MozBlobBuilder ||
                                                                                                                                                                                self.MSBlobBuilder)();
                                                                                                                                                                            n.append(i), (r.blob = 0 === n.getBlob("application/zip").size);
                                                                                                                                                                        } catch (t) {
                                                                                                                                                                            r.blob = !1;
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                try {
                                                                                                                                                                    r.nodestream = !!t("readable-stream").Readable;
                                                                                                                                                                } catch (t) {
                                                                                                                                                                    r.nodestream = !1;
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            { "readable-stream": 16 },
                                                                                                                                                        ],
                                                                                                                                                        31: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                for (
                                                                                                                                                                    var i = t("./utils"),
                                                                                                                                                                        n = t("./support"),
                                                                                                                                                                        s = t("./nodejsUtils"),
                                                                                                                                                                        a = t("./stream/GenericWorker"),
                                                                                                                                                                        o = new Array(256),
                                                                                                                                                                        l = 0;
                                                                                                                                                                    l < 256;
                                                                                                                                                                    l++
                                                                                                                                                                )
                                                                                                                                                                    o[l] =
                                                                                                                                                                        252 <= l
                                                                                                                                                                            ? 6
                                                                                                                                                                            : 248 <= l
                                                                                                                                                                            ? 5
                                                                                                                                                                            : 240 <= l
                                                                                                                                                                            ? 4
                                                                                                                                                                            : 224 <= l
                                                                                                                                                                            ? 3
                                                                                                                                                                            : 192 <= l
                                                                                                                                                                            ? 2
                                                                                                                                                                            : 1;
                                                                                                                                                                function h() {
                                                                                                                                                                    a.call(this, "utf-8 decode"), (this.leftOver = null);
                                                                                                                                                                }
                                                                                                                                                                function c() {
                                                                                                                                                                    a.call(this, "utf-8 encode");
                                                                                                                                                                }
                                                                                                                                                                (o[254] = o[254] = 1),
                                                                                                                                                                    (r.utf8encode = function (t) {
                                                                                                                                                                        return n.nodebuffer
                                                                                                                                                                            ? s.newBufferFrom(t, "utf-8")
                                                                                                                                                                            : (function (t) {
                                                                                                                                                                                  var e,
                                                                                                                                                                                      r,
                                                                                                                                                                                      i,
                                                                                                                                                                                      s,
                                                                                                                                                                                      a,
                                                                                                                                                                                      o = t.length,
                                                                                                                                                                                      l = 0;
                                                                                                                                                                                  for (s = 0; s < o; s++)
                                                                                                                                                                                      55296 == (64512 & (r = t.charCodeAt(s))) &&
                                                                                                                                                                                          s + 1 < o &&
                                                                                                                                                                                          56320 == (64512 & (i = t.charCodeAt(s + 1))) &&
                                                                                                                                                                                          ((r = 65536 + ((r - 55296) << 10) + (i - 56320)),
                                                                                                                                                                                          s++),
                                                                                                                                                                                          (l += r < 128 ? 1 : r < 2048 ? 2 : r < 65536 ? 3 : 4);
                                                                                                                                                                                  for (
                                                                                                                                                                                      e = n.uint8array ? new Uint8Array(l) : new Array(l),
                                                                                                                                                                                          s = a = 0;
                                                                                                                                                                                      a < l;
                                                                                                                                                                                      s++
                                                                                                                                                                                  )
                                                                                                                                                                                      55296 == (64512 & (r = t.charCodeAt(s))) &&
                                                                                                                                                                                          s + 1 < o &&
                                                                                                                                                                                          56320 == (64512 & (i = t.charCodeAt(s + 1))) &&
                                                                                                                                                                                          ((r = 65536 + ((r - 55296) << 10) + (i - 56320)),
                                                                                                                                                                                          s++),
                                                                                                                                                                                          r < 128
                                                                                                                                                                                              ? (e[a++] = r)
                                                                                                                                                                                              : (r < 2048
                                                                                                                                                                                                    ? (e[a++] = 192 | (r >>> 6))
                                                                                                                                                                                                    : (r < 65536
                                                                                                                                                                                                          ? (e[a++] = 224 | (r >>> 12))
                                                                                                                                                                                                          : ((e[a++] = 240 | (r >>> 18)),
                                                                                                                                                                                                            (e[a++] = 128 | ((r >>> 12) & 63))),
                                                                                                                                                                                                      (e[a++] = 128 | ((r >>> 6) & 63))),
                                                                                                                                                                                                (e[a++] = 128 | (63 & r)));
                                                                                                                                                                                  return e;
                                                                                                                                                                              })(t);
                                                                                                                                                                    }),
                                                                                                                                                                    (r.utf8decode = function (t) {
                                                                                                                                                                        return n.nodebuffer
                                                                                                                                                                            ? i.transformTo("nodebuffer", t).toString("utf-8")
                                                                                                                                                                            : (function (t) {
                                                                                                                                                                                  var e,
                                                                                                                                                                                      r,
                                                                                                                                                                                      n,
                                                                                                                                                                                      s,
                                                                                                                                                                                      a = t.length,
                                                                                                                                                                                      l = new Array(2 * a);
                                                                                                                                                                                  for (e = r = 0; e < a; )
                                                                                                                                                                                      if ((n = t[e++]) < 128) l[r++] = n;
                                                                                                                                                                                      else if (4 < (s = o[n])) (l[r++] = 65533), (e += s - 1);
                                                                                                                                                                                      else {
                                                                                                                                                                                          for (
                                                                                                                                                                                              n &= 2 === s ? 31 : 3 === s ? 15 : 7;
                                                                                                                                                                                              1 < s && e < a;

                                                                                                                                                                                          )
                                                                                                                                                                                              (n = (n << 6) | (63 & t[e++])), s--;
                                                                                                                                                                                          1 < s
                                                                                                                                                                                              ? (l[r++] = 65533)
                                                                                                                                                                                              : n < 65536
                                                                                                                                                                                              ? (l[r++] = n)
                                                                                                                                                                                              : ((n -= 65536),
                                                                                                                                                                                                (l[r++] = 55296 | ((n >> 10) & 1023)),
                                                                                                                                                                                                (l[r++] = 56320 | (1023 & n)));
                                                                                                                                                                                      }
                                                                                                                                                                                  return (
                                                                                                                                                                                      l.length !== r &&
                                                                                                                                                                                          (l.subarray
                                                                                                                                                                                              ? (l = l.subarray(0, r))
                                                                                                                                                                                              : (l.length = r)),
                                                                                                                                                                                      i.applyFromCharCode(l)
                                                                                                                                                                                  );
                                                                                                                                                                              })((t = i.transformTo(n.uint8array ? "uint8array" : "array", t)));
                                                                                                                                                                    }),
                                                                                                                                                                    i.inherits(h, a),
                                                                                                                                                                    (h.prototype.processChunk = function (t) {
                                                                                                                                                                        var e = i.transformTo(n.uint8array ? "uint8array" : "array", t.data);
                                                                                                                                                                        if (this.leftOver && this.leftOver.length) {
                                                                                                                                                                            if (n.uint8array) {
                                                                                                                                                                                var s = e;
                                                                                                                                                                                (e = new Uint8Array(s.length + this.leftOver.length)).set(
                                                                                                                                                                                    this.leftOver,
                                                                                                                                                                                    0
                                                                                                                                                                                ),
                                                                                                                                                                                    e.set(s, this.leftOver.length);
                                                                                                                                                                            } else e = this.leftOver.concat(e);
                                                                                                                                                                            this.leftOver = null;
                                                                                                                                                                        }
                                                                                                                                                                        var a = (function (t, e) {
                                                                                                                                                                                var r;
                                                                                                                                                                                for (
                                                                                                                                                                                    (e = e || t.length) > t.length && (e = t.length), r = e - 1;
                                                                                                                                                                                    0 <= r && 128 == (192 & t[r]);

                                                                                                                                                                                )
                                                                                                                                                                                    r--;
                                                                                                                                                                                return r < 0 || 0 === r ? e : r + o[t[r]] > e ? r : e;
                                                                                                                                                                            })(e),
                                                                                                                                                                            l = e;
                                                                                                                                                                        a !== e.length &&
                                                                                                                                                                            (n.uint8array
                                                                                                                                                                                ? ((l = e.subarray(0, a)),
                                                                                                                                                                                  (this.leftOver = e.subarray(a, e.length)))
                                                                                                                                                                                : ((l = e.slice(0, a)),
                                                                                                                                                                                  (this.leftOver = e.slice(a, e.length)))),
                                                                                                                                                                            this.push({ data: r.utf8decode(l), meta: t.meta });
                                                                                                                                                                    }),
                                                                                                                                                                    (h.prototype.flush = function () {
                                                                                                                                                                        this.leftOver &&
                                                                                                                                                                            this.leftOver.length &&
                                                                                                                                                                            (this.push({ data: r.utf8decode(this.leftOver), meta: {} }),
                                                                                                                                                                            (this.leftOver = null));
                                                                                                                                                                    }),
                                                                                                                                                                    (r.Utf8DecodeWorker = h),
                                                                                                                                                                    i.inherits(c, a),
                                                                                                                                                                    (c.prototype.processChunk = function (t) {
                                                                                                                                                                        this.push({ data: r.utf8encode(t.data), meta: t.meta });
                                                                                                                                                                    }),
                                                                                                                                                                    (r.Utf8EncodeWorker = c);
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "./nodejsUtils": 14,
                                                                                                                                                                "./stream/GenericWorker": 28,
                                                                                                                                                                "./support": 30,
                                                                                                                                                                "./utils": 32,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                        32: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("./support"),
                                                                                                                                                                    n = t("./base64"),
                                                                                                                                                                    s = t("./nodejsUtils"),
                                                                                                                                                                    a = t("set-immediate-shim"),
                                                                                                                                                                    o = t("./external");
                                                                                                                                                                function l(t) {
                                                                                                                                                                    return t;
                                                                                                                                                                }
                                                                                                                                                                function h(t, e) {
                                                                                                                                                                    for (var r = 0; r < t.length; ++r) e[r] = 255 & t.charCodeAt(r);
                                                                                                                                                                    return e;
                                                                                                                                                                }
                                                                                                                                                                r.newBlob = function (t, e) {
                                                                                                                                                                    r.checkSupport("blob");
                                                                                                                                                                    try {
                                                                                                                                                                        return new Blob([t], { type: e });
                                                                                                                                                                    } catch (r) {
                                                                                                                                                                        try {
                                                                                                                                                                            var i = new (self.BlobBuilder ||
                                                                                                                                                                                self.WebKitBlobBuilder ||
                                                                                                                                                                                self.MozBlobBuilder ||
                                                                                                                                                                                self.MSBlobBuilder)();
                                                                                                                                                                            return i.append(t), i.getBlob(e);
                                                                                                                                                                        } catch (t) {
                                                                                                                                                                            throw new Error("Bug : can't construct the Blob.");
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                };
                                                                                                                                                                var c = {
                                                                                                                                                                    stringifyByChunk: function (t, e, r) {
                                                                                                                                                                        var i = [],
                                                                                                                                                                            n = 0,
                                                                                                                                                                            s = t.length;
                                                                                                                                                                        if (s <= r) return String.fromCharCode.apply(null, t);
                                                                                                                                                                        for (; n < s; )
                                                                                                                                                                            "array" === e || "nodebuffer" === e
                                                                                                                                                                                ? i.push(
                                                                                                                                                                                      String.fromCharCode.apply(
                                                                                                                                                                                          null,
                                                                                                                                                                                          t.slice(n, Math.min(n + r, s))
                                                                                                                                                                                      )
                                                                                                                                                                                  )
                                                                                                                                                                                : i.push(
                                                                                                                                                                                      String.fromCharCode.apply(
                                                                                                                                                                                          null,
                                                                                                                                                                                          t.subarray(n, Math.min(n + r, s))
                                                                                                                                                                                      )
                                                                                                                                                                                  ),
                                                                                                                                                                                (n += r);
                                                                                                                                                                        return i.join("");
                                                                                                                                                                    },
                                                                                                                                                                    stringifyByChar: function (t) {
                                                                                                                                                                        for (var e = "", r = 0; r < t.length; r++)
                                                                                                                                                                            e += String.fromCharCode(t[r]);
                                                                                                                                                                        return e;
                                                                                                                                                                    },
                                                                                                                                                                    applyCanBeUsed: {
                                                                                                                                                                        uint8array: (function () {
                                                                                                                                                                            try {
                                                                                                                                                                                return (
                                                                                                                                                                                    i.uint8array &&
                                                                                                                                                                                    1 ===
                                                                                                                                                                                        String.fromCharCode.apply(null, new Uint8Array(1))
                                                                                                                                                                                            .length
                                                                                                                                                                                );
                                                                                                                                                                            } catch (t) {
                                                                                                                                                                                return !1;
                                                                                                                                                                            }
                                                                                                                                                                        })(),
                                                                                                                                                                        nodebuffer: (function () {
                                                                                                                                                                            try {
                                                                                                                                                                                return (
                                                                                                                                                                                    i.nodebuffer &&
                                                                                                                                                                                    1 ===
                                                                                                                                                                                        String.fromCharCode.apply(null, s.allocBuffer(1)).length
                                                                                                                                                                                );
                                                                                                                                                                            } catch (t) {
                                                                                                                                                                                return !1;
                                                                                                                                                                            }
                                                                                                                                                                        })(),
                                                                                                                                                                    },
                                                                                                                                                                };
                                                                                                                                                                function p(t) {
                                                                                                                                                                    var e = 65536,
                                                                                                                                                                        i = r.getTypeOf(t),
                                                                                                                                                                        n = !0;
                                                                                                                                                                    if (
                                                                                                                                                                        ("uint8array" === i
                                                                                                                                                                            ? (n = c.applyCanBeUsed.uint8array)
                                                                                                                                                                            : "nodebuffer" === i && (n = c.applyCanBeUsed.nodebuffer),
                                                                                                                                                                        n)
                                                                                                                                                                    )
                                                                                                                                                                        for (; 1 < e; )
                                                                                                                                                                            try {
                                                                                                                                                                                return c.stringifyByChunk(t, i, e);
                                                                                                                                                                            } catch (t) {
                                                                                                                                                                                e = Math.floor(e / 2);
                                                                                                                                                                            }
                                                                                                                                                                    return c.stringifyByChar(t);
                                                                                                                                                                }
                                                                                                                                                                function d(t, e) {
                                                                                                                                                                    for (var r = 0; r < t.length; r++) e[r] = t[r];
                                                                                                                                                                    return e;
                                                                                                                                                                }
                                                                                                                                                                r.applyFromCharCode = p;
                                                                                                                                                                var u = {};
                                                                                                                                                                (u.string = {
                                                                                                                                                                    string: l,
                                                                                                                                                                    array: function (t) {
                                                                                                                                                                        return h(t, new Array(t.length));
                                                                                                                                                                    },
                                                                                                                                                                    arraybuffer: function (t) {
                                                                                                                                                                        return u.string.uint8array(t).buffer;
                                                                                                                                                                    },
                                                                                                                                                                    uint8array: function (t) {
                                                                                                                                                                        return h(t, new Uint8Array(t.length));
                                                                                                                                                                    },
                                                                                                                                                                    nodebuffer: function (t) {
                                                                                                                                                                        return h(t, s.allocBuffer(t.length));
                                                                                                                                                                    },
                                                                                                                                                                }),
                                                                                                                                                                    (u.array = {
                                                                                                                                                                        string: p,
                                                                                                                                                                        array: l,
                                                                                                                                                                        arraybuffer: function (t) {
                                                                                                                                                                            return new Uint8Array(t).buffer;
                                                                                                                                                                        },
                                                                                                                                                                        uint8array: function (t) {
                                                                                                                                                                            return new Uint8Array(t);
                                                                                                                                                                        },
                                                                                                                                                                        nodebuffer: function (t) {
                                                                                                                                                                            return s.newBufferFrom(t);
                                                                                                                                                                        },
                                                                                                                                                                    }),
                                                                                                                                                                    (u.arraybuffer = {
                                                                                                                                                                        string: function (t) {
                                                                                                                                                                            return p(new Uint8Array(t));
                                                                                                                                                                        },
                                                                                                                                                                        array: function (t) {
                                                                                                                                                                            return d(new Uint8Array(t), new Array(t.byteLength));
                                                                                                                                                                        },
                                                                                                                                                                        arraybuffer: l,
                                                                                                                                                                        uint8array: function (t) {
                                                                                                                                                                            return new Uint8Array(t);
                                                                                                                                                                        },
                                                                                                                                                                        nodebuffer: function (t) {
                                                                                                                                                                            return s.newBufferFrom(new Uint8Array(t));
                                                                                                                                                                        },
                                                                                                                                                                    }),
                                                                                                                                                                    (u.uint8array = {
                                                                                                                                                                        string: p,
                                                                                                                                                                        array: function (t) {
                                                                                                                                                                            return d(t, new Array(t.length));
                                                                                                                                                                        },
                                                                                                                                                                        arraybuffer: function (t) {
                                                                                                                                                                            return t.buffer;
                                                                                                                                                                        },
                                                                                                                                                                        uint8array: l,
                                                                                                                                                                        nodebuffer: function (t) {
                                                                                                                                                                            return s.newBufferFrom(t);
                                                                                                                                                                        },
                                                                                                                                                                    }),
                                                                                                                                                                    (u.nodebuffer = {
                                                                                                                                                                        string: p,
                                                                                                                                                                        array: function (t) {
                                                                                                                                                                            return d(t, new Array(t.length));
                                                                                                                                                                        },
                                                                                                                                                                        arraybuffer: function (t) {
                                                                                                                                                                            return u.nodebuffer.uint8array(t).buffer;
                                                                                                                                                                        },
                                                                                                                                                                        uint8array: function (t) {
                                                                                                                                                                            return d(t, new Uint8Array(t.length));
                                                                                                                                                                        },
                                                                                                                                                                        nodebuffer: l,
                                                                                                                                                                    }),
                                                                                                                                                                    (r.transformTo = function (t, e) {
                                                                                                                                                                        if (((e = e || ""), !t)) return e;
                                                                                                                                                                        r.checkSupport(t);
                                                                                                                                                                        var i = r.getTypeOf(e);
                                                                                                                                                                        return u[i][t](e);
                                                                                                                                                                    }),
                                                                                                                                                                    (r.getTypeOf = function (t) {
                                                                                                                                                                        return "string" == typeof t
                                                                                                                                                                            ? "string"
                                                                                                                                                                            : "[object Array]" === Object.prototype.toString.call(t)
                                                                                                                                                                            ? "array"
                                                                                                                                                                            : i.nodebuffer && s.isBuffer(t)
                                                                                                                                                                            ? "nodebuffer"
                                                                                                                                                                            : i.uint8array && t instanceof Uint8Array
                                                                                                                                                                            ? "uint8array"
                                                                                                                                                                            : i.arraybuffer && t instanceof ArrayBuffer
                                                                                                                                                                            ? "arraybuffer"
                                                                                                                                                                            : void 0;
                                                                                                                                                                    }),
                                                                                                                                                                    (r.checkSupport = function (t) {
                                                                                                                                                                        if (!i[t.toLowerCase()])
                                                                                                                                                                            throw new Error(t + " is not supported by this platform");
                                                                                                                                                                    }),
                                                                                                                                                                    (r.MAX_VALUE_16BITS = 65535),
                                                                                                                                                                    (r.MAX_VALUE_32BITS = -1),
                                                                                                                                                                    (r.pretty = function (t) {
                                                                                                                                                                        var e,
                                                                                                                                                                            r,
                                                                                                                                                                            i = "";
                                                                                                                                                                        for (r = 0; r < (t || "").length; r++)
                                                                                                                                                                            i +=
                                                                                                                                                                                "\\x" +
                                                                                                                                                                                ((e = t.charCodeAt(r)) < 16 ? "0" : "") +
                                                                                                                                                                                e.toString(16).toUpperCase();
                                                                                                                                                                        return i;
                                                                                                                                                                    }),
                                                                                                                                                                    (r.delay = function (t, e, r) {
                                                                                                                                                                        a(function () {
                                                                                                                                                                            t.apply(r || null, e || []);
                                                                                                                                                                        });
                                                                                                                                                                    }),
                                                                                                                                                                    (r.inherits = function (t, e) {
                                                                                                                                                                        function r() {}
                                                                                                                                                                        (r.prototype = e.prototype), (t.prototype = new r());
                                                                                                                                                                    }),
                                                                                                                                                                    (r.extend = function () {
                                                                                                                                                                        var t,
                                                                                                                                                                            e,
                                                                                                                                                                            r = {};
                                                                                                                                                                        for (t = 0; t < arguments.length; t++)
                                                                                                                                                                            for (e in arguments[t])
                                                                                                                                                                                arguments[t].hasOwnProperty(e) &&
                                                                                                                                                                                    void 0 === r[e] &&
                                                                                                                                                                                    (r[e] = arguments[t][e]);
                                                                                                                                                                        return r;
                                                                                                                                                                    }),
                                                                                                                                                                    (r.prepareContent = function (t, e, s, a, l) {
                                                                                                                                                                        return o.Promise.resolve(e)
                                                                                                                                                                            .then(function (t) {
                                                                                                                                                                                return i.blob &&
                                                                                                                                                                                    (t instanceof Blob ||
                                                                                                                                                                                        -1 !==
                                                                                                                                                                                            ["[object File]", "[object Blob]"].indexOf(
                                                                                                                                                                                                Object.prototype.toString.call(t)
                                                                                                                                                                                            )) &&
                                                                                                                                                                                    "undefined" != typeof FileReader
                                                                                                                                                                                    ? new o.Promise(function (e, r) {
                                                                                                                                                                                          var i = new FileReader();
                                                                                                                                                                                          (i.onload = function (t) {
                                                                                                                                                                                              e(t.target.result);
                                                                                                                                                                                          }),
                                                                                                                                                                                              (i.onerror = function (t) {
                                                                                                                                                                                                  r(t.target.error);
                                                                                                                                                                                              }),
                                                                                                                                                                                              i.readAsArrayBuffer(t);
                                                                                                                                                                                      })
                                                                                                                                                                                    : t;
                                                                                                                                                                            })
                                                                                                                                                                            .then(function (e) {
                                                                                                                                                                                var c,
                                                                                                                                                                                    p = r.getTypeOf(e);
                                                                                                                                                                                return p
                                                                                                                                                                                    ? ("arraybuffer" === p
                                                                                                                                                                                          ? (e = r.transformTo("uint8array", e))
                                                                                                                                                                                          : "string" === p &&
                                                                                                                                                                                            (l
                                                                                                                                                                                                ? (e = n.decode(e))
                                                                                                                                                                                                : s &&
                                                                                                                                                                                                  !0 !== a &&
                                                                                                                                                                                                  (e = h(
                                                                                                                                                                                                      (c = e),
                                                                                                                                                                                                      i.uint8array
                                                                                                                                                                                                          ? new Uint8Array(c.length)
                                                                                                                                                                                                          : new Array(c.length)
                                                                                                                                                                                                  ))),
                                                                                                                                                                                      e)
                                                                                                                                                                                    : o.Promise.reject(
                                                                                                                                                                                          new Error(
                                                                                                                                                                                              "Can't read the data of '" +
                                                                                                                                                                                                  t +
                                                                                                                                                                                                  "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"
                                                                                                                                                                                          )
                                                                                                                                                                                      );
                                                                                                                                                                            });
                                                                                                                                                                    });
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "./base64": 1,
                                                                                                                                                                "./external": 6,
                                                                                                                                                                "./nodejsUtils": 14,
                                                                                                                                                                "./support": 30,
                                                                                                                                                                "set-immediate-shim": 54,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                        33: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("./reader/readerFor"),
                                                                                                                                                                    n = t("./utils"),
                                                                                                                                                                    s = t("./signature"),
                                                                                                                                                                    a = t("./zipEntry"),
                                                                                                                                                                    o = (t("./utf8"), t("./support"));
                                                                                                                                                                function l(t) {
                                                                                                                                                                    (this.files = []), (this.loadOptions = t);
                                                                                                                                                                }
                                                                                                                                                                (l.prototype = {
                                                                                                                                                                    checkSignature: function (t) {
                                                                                                                                                                        if (!this.reader.readAndCheckSignature(t)) {
                                                                                                                                                                            this.reader.index -= 4;
                                                                                                                                                                            var e = this.reader.readString(4);
                                                                                                                                                                            throw new Error(
                                                                                                                                                                                "Corrupted zip or bug: unexpected signature (" +
                                                                                                                                                                                    n.pretty(e) +
                                                                                                                                                                                    ", expected " +
                                                                                                                                                                                    n.pretty(t) +
                                                                                                                                                                                    ")"
                                                                                                                                                                            );
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    isSignature: function (t, e) {
                                                                                                                                                                        var r = this.reader.index;
                                                                                                                                                                        this.reader.setIndex(t);
                                                                                                                                                                        var i = this.reader.readString(4) === e;
                                                                                                                                                                        return this.reader.setIndex(r), i;
                                                                                                                                                                    },
                                                                                                                                                                    readBlockEndOfCentral: function () {
                                                                                                                                                                        (this.diskNumber = this.reader.readInt(2)),
                                                                                                                                                                            (this.diskWithCentralDirStart = this.reader.readInt(2)),
                                                                                                                                                                            (this.centralDirRecordsOnThisDisk = this.reader.readInt(2)),
                                                                                                                                                                            (this.centralDirRecords = this.reader.readInt(2)),
                                                                                                                                                                            (this.centralDirSize = this.reader.readInt(4)),
                                                                                                                                                                            (this.centralDirOffset = this.reader.readInt(4)),
                                                                                                                                                                            (this.zipCommentLength = this.reader.readInt(2));
                                                                                                                                                                        var t = this.reader.readData(this.zipCommentLength),
                                                                                                                                                                            e = o.uint8array ? "uint8array" : "array",
                                                                                                                                                                            r = n.transformTo(e, t);
                                                                                                                                                                        this.zipComment = this.loadOptions.decodeFileName(r);
                                                                                                                                                                    },
                                                                                                                                                                    readBlockZip64EndOfCentral: function () {
                                                                                                                                                                        (this.zip64EndOfCentralSize = this.reader.readInt(8)),
                                                                                                                                                                            this.reader.skip(4),
                                                                                                                                                                            (this.diskNumber = this.reader.readInt(4)),
                                                                                                                                                                            (this.diskWithCentralDirStart = this.reader.readInt(4)),
                                                                                                                                                                            (this.centralDirRecordsOnThisDisk = this.reader.readInt(8)),
                                                                                                                                                                            (this.centralDirRecords = this.reader.readInt(8)),
                                                                                                                                                                            (this.centralDirSize = this.reader.readInt(8)),
                                                                                                                                                                            (this.centralDirOffset = this.reader.readInt(8)),
                                                                                                                                                                            (this.zip64ExtensibleData = {});
                                                                                                                                                                        for (var t, e, r, i = this.zip64EndOfCentralSize - 44; 0 < i; )
                                                                                                                                                                            (t = this.reader.readInt(2)),
                                                                                                                                                                                (e = this.reader.readInt(4)),
                                                                                                                                                                                (r = this.reader.readData(e)),
                                                                                                                                                                                (this.zip64ExtensibleData[t] = { id: t, length: e, value: r });
                                                                                                                                                                    },
                                                                                                                                                                    readBlockZip64EndOfCentralLocator: function () {
                                                                                                                                                                        if (
                                                                                                                                                                            ((this.diskWithZip64CentralDirStart = this.reader.readInt(4)),
                                                                                                                                                                            (this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8)),
                                                                                                                                                                            (this.disksCount = this.reader.readInt(4)),
                                                                                                                                                                            1 < this.disksCount)
                                                                                                                                                                        )
                                                                                                                                                                            throw new Error("Multi-volumes zip are not supported");
                                                                                                                                                                    },
                                                                                                                                                                    readLocalFiles: function () {
                                                                                                                                                                        var t, e;
                                                                                                                                                                        for (t = 0; t < this.files.length; t++)
                                                                                                                                                                            (e = this.files[t]),
                                                                                                                                                                                this.reader.setIndex(e.localHeaderOffset),
                                                                                                                                                                                this.checkSignature(s.LOCAL_FILE_HEADER),
                                                                                                                                                                                e.readLocalPart(this.reader),
                                                                                                                                                                                e.handleUTF8(),
                                                                                                                                                                                e.processAttributes();
                                                                                                                                                                    },
                                                                                                                                                                    readCentralDir: function () {
                                                                                                                                                                        var t;
                                                                                                                                                                        for (
                                                                                                                                                                            this.reader.setIndex(this.centralDirOffset);
                                                                                                                                                                            this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER);

                                                                                                                                                                        )
                                                                                                                                                                            (t = new a(
                                                                                                                                                                                { zip64: this.zip64 },
                                                                                                                                                                                this.loadOptions
                                                                                                                                                                            )).readCentralPart(this.reader),
                                                                                                                                                                                this.files.push(t);
                                                                                                                                                                        if (
                                                                                                                                                                            this.centralDirRecords !== this.files.length &&
                                                                                                                                                                            0 !== this.centralDirRecords &&
                                                                                                                                                                            0 === this.files.length
                                                                                                                                                                        )
                                                                                                                                                                            throw new Error(
                                                                                                                                                                                "Corrupted zip or bug: expected " +
                                                                                                                                                                                    this.centralDirRecords +
                                                                                                                                                                                    " records in central dir, got " +
                                                                                                                                                                                    this.files.length
                                                                                                                                                                            );
                                                                                                                                                                    },
                                                                                                                                                                    readEndOfCentral: function () {
                                                                                                                                                                        var t = this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);
                                                                                                                                                                        if (t < 0)
                                                                                                                                                                            throw this.isSignature(0, s.LOCAL_FILE_HEADER)
                                                                                                                                                                                ? new Error(
                                                                                                                                                                                      "Corrupted zip: can't find end of central directory"
                                                                                                                                                                                  )
                                                                                                                                                                                : new Error(
                                                                                                                                                                                      "Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html"
                                                                                                                                                                                  );
                                                                                                                                                                        this.reader.setIndex(t);
                                                                                                                                                                        var e = t;
                                                                                                                                                                        if (
                                                                                                                                                                            (this.checkSignature(s.CENTRAL_DIRECTORY_END),
                                                                                                                                                                            this.readBlockEndOfCentral(),
                                                                                                                                                                            this.diskNumber === n.MAX_VALUE_16BITS ||
                                                                                                                                                                                this.diskWithCentralDirStart === n.MAX_VALUE_16BITS ||
                                                                                                                                                                                this.centralDirRecordsOnThisDisk === n.MAX_VALUE_16BITS ||
                                                                                                                                                                                this.centralDirRecords === n.MAX_VALUE_16BITS ||
                                                                                                                                                                                this.centralDirSize === n.MAX_VALUE_32BITS ||
                                                                                                                                                                                this.centralDirOffset === n.MAX_VALUE_32BITS)
                                                                                                                                                                        ) {
                                                                                                                                                                            if (
                                                                                                                                                                                ((this.zip64 = !0),
                                                                                                                                                                                (t = this.reader.lastIndexOfSignature(
                                                                                                                                                                                    s.ZIP64_CENTRAL_DIRECTORY_LOCATOR
                                                                                                                                                                                )) < 0)
                                                                                                                                                                            )
                                                                                                                                                                                throw new Error(
                                                                                                                                                                                    "Corrupted zip: can't find the ZIP64 end of central directory locator"
                                                                                                                                                                                );
                                                                                                                                                                            if (
                                                                                                                                                                                (this.reader.setIndex(t),
                                                                                                                                                                                this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),
                                                                                                                                                                                this.readBlockZip64EndOfCentralLocator(),
                                                                                                                                                                                !this.isSignature(
                                                                                                                                                                                    this.relativeOffsetEndOfZip64CentralDir,
                                                                                                                                                                                    s.ZIP64_CENTRAL_DIRECTORY_END
                                                                                                                                                                                ) &&
                                                                                                                                                                                    ((this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(
                                                                                                                                                                                        s.ZIP64_CENTRAL_DIRECTORY_END
                                                                                                                                                                                    )),
                                                                                                                                                                                    this.relativeOffsetEndOfZip64CentralDir < 0))
                                                                                                                                                                            )
                                                                                                                                                                                throw new Error(
                                                                                                                                                                                    "Corrupted zip: can't find the ZIP64 end of central directory"
                                                                                                                                                                                );
                                                                                                                                                                            this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),
                                                                                                                                                                                this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END),
                                                                                                                                                                                this.readBlockZip64EndOfCentral();
                                                                                                                                                                        }
                                                                                                                                                                        var r = this.centralDirOffset + this.centralDirSize;
                                                                                                                                                                        this.zip64 && ((r += 20), (r += 12 + this.zip64EndOfCentralSize));
                                                                                                                                                                        var i = e - r;
                                                                                                                                                                        if (0 < i)
                                                                                                                                                                            this.isSignature(e, s.CENTRAL_FILE_HEADER) ||
                                                                                                                                                                                (this.reader.zero = i);
                                                                                                                                                                        else if (i < 0)
                                                                                                                                                                            throw new Error(
                                                                                                                                                                                "Corrupted zip: missing " + Math.abs(i) + " bytes."
                                                                                                                                                                            );
                                                                                                                                                                    },
                                                                                                                                                                    prepareReader: function (t) {
                                                                                                                                                                        this.reader = i(t);
                                                                                                                                                                    },
                                                                                                                                                                    load: function (t) {
                                                                                                                                                                        this.prepareReader(t),
                                                                                                                                                                            this.readEndOfCentral(),
                                                                                                                                                                            this.readCentralDir(),
                                                                                                                                                                            this.readLocalFiles();
                                                                                                                                                                    },
                                                                                                                                                                }),
                                                                                                                                                                    (e.exports = l);
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "./reader/readerFor": 22,
                                                                                                                                                                "./signature": 23,
                                                                                                                                                                "./support": 30,
                                                                                                                                                                "./utf8": 31,
                                                                                                                                                                "./utils": 32,
                                                                                                                                                                "./zipEntry": 34,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                        34: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("./reader/readerFor"),
                                                                                                                                                                    n = t("./utils"),
                                                                                                                                                                    s = t("./compressedObject"),
                                                                                                                                                                    a = t("./crc32"),
                                                                                                                                                                    o = t("./utf8"),
                                                                                                                                                                    l = t("./compressions"),
                                                                                                                                                                    h = t("./support");
                                                                                                                                                                function c(t, e) {
                                                                                                                                                                    (this.options = t), (this.loadOptions = e);
                                                                                                                                                                }
                                                                                                                                                                (c.prototype = {
                                                                                                                                                                    isEncrypted: function () {
                                                                                                                                                                        return 1 == (1 & this.bitFlag);
                                                                                                                                                                    },
                                                                                                                                                                    useUTF8: function () {
                                                                                                                                                                        return 2048 == (2048 & this.bitFlag);
                                                                                                                                                                    },
                                                                                                                                                                    readLocalPart: function (t) {
                                                                                                                                                                        var e, r;
                                                                                                                                                                        if (
                                                                                                                                                                            (t.skip(22),
                                                                                                                                                                            (this.fileNameLength = t.readInt(2)),
                                                                                                                                                                            (r = t.readInt(2)),
                                                                                                                                                                            (this.fileName = t.readData(this.fileNameLength)),
                                                                                                                                                                            t.skip(r),
                                                                                                                                                                            -1 === this.compressedSize || -1 === this.uncompressedSize)
                                                                                                                                                                        )
                                                                                                                                                                            throw new Error(
                                                                                                                                                                                "Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)"
                                                                                                                                                                            );
                                                                                                                                                                        if (
                                                                                                                                                                            null ===
                                                                                                                                                                            (e = (function (t) {
                                                                                                                                                                                for (var e in l)
                                                                                                                                                                                    if (l.hasOwnProperty(e) && l[e].magic === t) return l[e];
                                                                                                                                                                                return null;
                                                                                                                                                                            })(this.compressionMethod))
                                                                                                                                                                        )
                                                                                                                                                                            throw new Error(
                                                                                                                                                                                "Corrupted zip : compression " +
                                                                                                                                                                                    n.pretty(this.compressionMethod) +
                                                                                                                                                                                    " unknown (inner file : " +
                                                                                                                                                                                    n.transformTo("string", this.fileName) +
                                                                                                                                                                                    ")"
                                                                                                                                                                            );
                                                                                                                                                                        this.decompressed = new s(
                                                                                                                                                                            this.compressedSize,
                                                                                                                                                                            this.uncompressedSize,
                                                                                                                                                                            this.crc32,
                                                                                                                                                                            e,
                                                                                                                                                                            t.readData(this.compressedSize)
                                                                                                                                                                        );
                                                                                                                                                                    },
                                                                                                                                                                    readCentralPart: function (t) {
                                                                                                                                                                        (this.versionMadeBy = t.readInt(2)),
                                                                                                                                                                            t.skip(2),
                                                                                                                                                                            (this.bitFlag = t.readInt(2)),
                                                                                                                                                                            (this.compressionMethod = t.readString(2)),
                                                                                                                                                                            (this.date = t.readDate()),
                                                                                                                                                                            (this.crc32 = t.readInt(4)),
                                                                                                                                                                            (this.compressedSize = t.readInt(4)),
                                                                                                                                                                            (this.uncompressedSize = t.readInt(4));
                                                                                                                                                                        var e = t.readInt(2);
                                                                                                                                                                        if (
                                                                                                                                                                            ((this.extraFieldsLength = t.readInt(2)),
                                                                                                                                                                            (this.fileCommentLength = t.readInt(2)),
                                                                                                                                                                            (this.diskNumberStart = t.readInt(2)),
                                                                                                                                                                            (this.internalFileAttributes = t.readInt(2)),
                                                                                                                                                                            (this.externalFileAttributes = t.readInt(4)),
                                                                                                                                                                            (this.localHeaderOffset = t.readInt(4)),
                                                                                                                                                                            this.isEncrypted())
                                                                                                                                                                        )
                                                                                                                                                                            throw new Error("Encrypted zip are not supported");
                                                                                                                                                                        t.skip(e),
                                                                                                                                                                            this.readExtraFields(t),
                                                                                                                                                                            this.parseZIP64ExtraField(t),
                                                                                                                                                                            (this.fileComment = t.readData(this.fileCommentLength));
                                                                                                                                                                    },
                                                                                                                                                                    processAttributes: function () {
                                                                                                                                                                        (this.unixPermissions = null), (this.dosPermissions = null);
                                                                                                                                                                        var t = this.versionMadeBy >> 8;
                                                                                                                                                                        (this.dir = !!(16 & this.externalFileAttributes)),
                                                                                                                                                                            0 == t && (this.dosPermissions = 63 & this.externalFileAttributes),
                                                                                                                                                                            3 == t &&
                                                                                                                                                                                (this.unixPermissions =
                                                                                                                                                                                    (this.externalFileAttributes >> 16) & 65535),
                                                                                                                                                                            this.dir || "/" !== this.fileNameStr.slice(-1) || (this.dir = !0);
                                                                                                                                                                    },
                                                                                                                                                                    parseZIP64ExtraField: function (t) {
                                                                                                                                                                        if (this.extraFields[1]) {
                                                                                                                                                                            var e = i(this.extraFields[1].value);
                                                                                                                                                                            this.uncompressedSize === n.MAX_VALUE_32BITS &&
                                                                                                                                                                                (this.uncompressedSize = e.readInt(8)),
                                                                                                                                                                                this.compressedSize === n.MAX_VALUE_32BITS &&
                                                                                                                                                                                    (this.compressedSize = e.readInt(8)),
                                                                                                                                                                                this.localHeaderOffset === n.MAX_VALUE_32BITS &&
                                                                                                                                                                                    (this.localHeaderOffset = e.readInt(8)),
                                                                                                                                                                                this.diskNumberStart === n.MAX_VALUE_32BITS &&
                                                                                                                                                                                    (this.diskNumberStart = e.readInt(4));
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    readExtraFields: function (t) {
                                                                                                                                                                        var e,
                                                                                                                                                                            r,
                                                                                                                                                                            i,
                                                                                                                                                                            n = t.index + this.extraFieldsLength;
                                                                                                                                                                        for (this.extraFields || (this.extraFields = {}); t.index + 4 < n; )
                                                                                                                                                                            (e = t.readInt(2)),
                                                                                                                                                                                (r = t.readInt(2)),
                                                                                                                                                                                (i = t.readData(r)),
                                                                                                                                                                                (this.extraFields[e] = { id: e, length: r, value: i });
                                                                                                                                                                        t.setIndex(n);
                                                                                                                                                                    },
                                                                                                                                                                    handleUTF8: function () {
                                                                                                                                                                        var t = h.uint8array ? "uint8array" : "array";
                                                                                                                                                                        if (this.useUTF8())
                                                                                                                                                                            (this.fileNameStr = o.utf8decode(this.fileName)),
                                                                                                                                                                                (this.fileCommentStr = o.utf8decode(this.fileComment));
                                                                                                                                                                        else {
                                                                                                                                                                            var e = this.findExtraFieldUnicodePath();
                                                                                                                                                                            if (null !== e) this.fileNameStr = e;
                                                                                                                                                                            else {
                                                                                                                                                                                var r = n.transformTo(t, this.fileName);
                                                                                                                                                                                this.fileNameStr = this.loadOptions.decodeFileName(r);
                                                                                                                                                                            }
                                                                                                                                                                            var i = this.findExtraFieldUnicodeComment();
                                                                                                                                                                            if (null !== i) this.fileCommentStr = i;
                                                                                                                                                                            else {
                                                                                                                                                                                var s = n.transformTo(t, this.fileComment);
                                                                                                                                                                                this.fileCommentStr = this.loadOptions.decodeFileName(s);
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    findExtraFieldUnicodePath: function () {
                                                                                                                                                                        var t = this.extraFields[28789];
                                                                                                                                                                        if (t) {
                                                                                                                                                                            var e = i(t.value);
                                                                                                                                                                            return 1 !== e.readInt(1) || a(this.fileName) !== e.readInt(4)
                                                                                                                                                                                ? null
                                                                                                                                                                                : o.utf8decode(e.readData(t.length - 5));
                                                                                                                                                                        }
                                                                                                                                                                        return null;
                                                                                                                                                                    },
                                                                                                                                                                    findExtraFieldUnicodeComment: function () {
                                                                                                                                                                        var t = this.extraFields[25461];
                                                                                                                                                                        if (t) {
                                                                                                                                                                            var e = i(t.value);
                                                                                                                                                                            return 1 !== e.readInt(1) || a(this.fileComment) !== e.readInt(4)
                                                                                                                                                                                ? null
                                                                                                                                                                                : o.utf8decode(e.readData(t.length - 5));
                                                                                                                                                                        }
                                                                                                                                                                        return null;
                                                                                                                                                                    },
                                                                                                                                                                }),
                                                                                                                                                                    (e.exports = c);
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "./compressedObject": 2,
                                                                                                                                                                "./compressions": 3,
                                                                                                                                                                "./crc32": 4,
                                                                                                                                                                "./reader/readerFor": 22,
                                                                                                                                                                "./support": 30,
                                                                                                                                                                "./utf8": 31,
                                                                                                                                                                "./utils": 32,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                        35: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                function i(t, e, r) {
                                                                                                                                                                    (this.name = t),
                                                                                                                                                                        (this.dir = r.dir),
                                                                                                                                                                        (this.date = r.date),
                                                                                                                                                                        (this.comment = r.comment),
                                                                                                                                                                        (this.unixPermissions = r.unixPermissions),
                                                                                                                                                                        (this.dosPermissions = r.dosPermissions),
                                                                                                                                                                        (this._data = e),
                                                                                                                                                                        (this._dataBinary = r.binary),
                                                                                                                                                                        (this.options = {
                                                                                                                                                                            compression: r.compression,
                                                                                                                                                                            compressionOptions: r.compressionOptions,
                                                                                                                                                                        });
                                                                                                                                                                }
                                                                                                                                                                var n = t("./stream/StreamHelper"),
                                                                                                                                                                    s = t("./stream/DataWorker"),
                                                                                                                                                                    a = t("./utf8"),
                                                                                                                                                                    o = t("./compressedObject"),
                                                                                                                                                                    l = t("./stream/GenericWorker");
                                                                                                                                                                i.prototype = {
                                                                                                                                                                    internalStream: function (t) {
                                                                                                                                                                        var e = null,
                                                                                                                                                                            r = "string";
                                                                                                                                                                        try {
                                                                                                                                                                            if (!t) throw new Error("No output type specified.");
                                                                                                                                                                            var i = "string" === (r = t.toLowerCase()) || "text" === r;
                                                                                                                                                                            ("binarystring" !== r && "text" !== r) || (r = "string"),
                                                                                                                                                                                (e = this._decompressWorker());
                                                                                                                                                                            var s = !this._dataBinary;
                                                                                                                                                                            s && !i && (e = e.pipe(new a.Utf8EncodeWorker())),
                                                                                                                                                                                !s && i && (e = e.pipe(new a.Utf8DecodeWorker()));
                                                                                                                                                                        } catch (t) {
                                                                                                                                                                            (e = new l("error")).error(t);
                                                                                                                                                                        }
                                                                                                                                                                        return new n(e, r, "");
                                                                                                                                                                    },
                                                                                                                                                                    async: function (t, e) {
                                                                                                                                                                        return this.internalStream(t).accumulate(e);
                                                                                                                                                                    },
                                                                                                                                                                    nodeStream: function (t, e) {
                                                                                                                                                                        return this.internalStream(t || "nodebuffer").toNodejsStream(e);
                                                                                                                                                                    },
                                                                                                                                                                    _compressWorker: function (t, e) {
                                                                                                                                                                        if (this._data instanceof o && this._data.compression.magic === t.magic)
                                                                                                                                                                            return this._data.getCompressedWorker();
                                                                                                                                                                        var r = this._decompressWorker();
                                                                                                                                                                        return (
                                                                                                                                                                            this._dataBinary || (r = r.pipe(new a.Utf8EncodeWorker())),
                                                                                                                                                                            o.createWorkerFrom(r, t, e)
                                                                                                                                                                        );
                                                                                                                                                                    },
                                                                                                                                                                    _decompressWorker: function () {
                                                                                                                                                                        return this._data instanceof o
                                                                                                                                                                            ? this._data.getContentWorker()
                                                                                                                                                                            : this._data instanceof l
                                                                                                                                                                            ? this._data
                                                                                                                                                                            : new s(this._data);
                                                                                                                                                                    },
                                                                                                                                                                };
                                                                                                                                                                for (
                                                                                                                                                                    var h = [
                                                                                                                                                                            "asText",
                                                                                                                                                                            "asBinary",
                                                                                                                                                                            "asNodeBuffer",
                                                                                                                                                                            "asUint8Array",
                                                                                                                                                                            "asArrayBuffer",
                                                                                                                                                                        ],
                                                                                                                                                                        c = function () {
                                                                                                                                                                            throw new Error(
                                                                                                                                                                                "This method has been removed in JSZip 3.0, please check the upgrade guide."
                                                                                                                                                                            );
                                                                                                                                                                        },
                                                                                                                                                                        p = 0;
                                                                                                                                                                    p < h.length;
                                                                                                                                                                    p++
                                                                                                                                                                )
                                                                                                                                                                    i.prototype[h[p]] = c;
                                                                                                                                                                e.exports = i;
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "./compressedObject": 2,
                                                                                                                                                                "./stream/DataWorker": 27,
                                                                                                                                                                "./stream/GenericWorker": 28,
                                                                                                                                                                "./stream/StreamHelper": 29,
                                                                                                                                                                "./utf8": 31,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                        36: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                (function (t) {
                                                                                                                                                                    var r,
                                                                                                                                                                        i,
                                                                                                                                                                        n = t.MutationObserver || t.WebKitMutationObserver;
                                                                                                                                                                    if (n) {
                                                                                                                                                                        var s = 0,
                                                                                                                                                                            a = new n(c),
                                                                                                                                                                            o = t.document.createTextNode("");
                                                                                                                                                                        a.observe(o, { characterData: !0 }),
                                                                                                                                                                            (r = function () {
                                                                                                                                                                                o.data = s = ++s % 2;
                                                                                                                                                                            });
                                                                                                                                                                    } else if (t.setImmediate || void 0 === t.MessageChannel)
                                                                                                                                                                        r =
                                                                                                                                                                            "document" in t &&
                                                                                                                                                                            "onreadystatechange" in t.document.createElement("script")
                                                                                                                                                                                ? function () {
                                                                                                                                                                                      var e = t.document.createElement("script");
                                                                                                                                                                                      (e.onreadystatechange = function () {
                                                                                                                                                                                          c(),
                                                                                                                                                                                              (e.onreadystatechange = null),
                                                                                                                                                                                              e.parentNode.removeChild(e),
                                                                                                                                                                                              (e = null);
                                                                                                                                                                                      }),
                                                                                                                                                                                          t.document.documentElement.appendChild(e);
                                                                                                                                                                                  }
                                                                                                                                                                                : function () {
                                                                                                                                                                                      setTimeout(c, 0);
                                                                                                                                                                                  };
                                                                                                                                                                    else {
                                                                                                                                                                        var l = new t.MessageChannel();
                                                                                                                                                                        (l.port1.onmessage = c),
                                                                                                                                                                            (r = function () {
                                                                                                                                                                                l.port2.postMessage(0);
                                                                                                                                                                            });
                                                                                                                                                                    }
                                                                                                                                                                    var h = [];
                                                                                                                                                                    function c() {
                                                                                                                                                                        var t, e;
                                                                                                                                                                        i = !0;
                                                                                                                                                                        for (var r = h.length; r; ) {
                                                                                                                                                                            for (e = h, h = [], t = -1; ++t < r; ) e[t]();
                                                                                                                                                                            r = h.length;
                                                                                                                                                                        }
                                                                                                                                                                        i = !1;
                                                                                                                                                                    }
                                                                                                                                                                    e.exports = function (t) {
                                                                                                                                                                        1 !== h.push(t) || i || r();
                                                                                                                                                                    };
                                                                                                                                                                }.call(
                                                                                                                                                                    this,
                                                                                                                                                                    void 0 !== i
                                                                                                                                                                        ? i
                                                                                                                                                                        : "undefined" != typeof self
                                                                                                                                                                        ? self
                                                                                                                                                                        : "undefined" != typeof window
                                                                                                                                                                        ? window
                                                                                                                                                                        : {}
                                                                                                                                                                ));
                                                                                                                                                            },
                                                                                                                                                            {},
                                                                                                                                                        ],
                                                                                                                                                        37: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("immediate");
                                                                                                                                                                function n() {}
                                                                                                                                                                var s = {},
                                                                                                                                                                    a = ["REJECTED"],
                                                                                                                                                                    o = ["FULFILLED"],
                                                                                                                                                                    l = ["PENDING"];
                                                                                                                                                                function h(t) {
                                                                                                                                                                    if ("function" != typeof t)
                                                                                                                                                                        throw new TypeError("resolver must be a function");
                                                                                                                                                                    (this.state = l),
                                                                                                                                                                        (this.queue = []),
                                                                                                                                                                        (this.outcome = void 0),
                                                                                                                                                                        t !== n && u(this, t);
                                                                                                                                                                }
                                                                                                                                                                function c(t, e, r) {
                                                                                                                                                                    (this.promise = t),
                                                                                                                                                                        "function" == typeof e &&
                                                                                                                                                                            ((this.onFulfilled = e),
                                                                                                                                                                            (this.callFulfilled = this.otherCallFulfilled)),
                                                                                                                                                                        "function" == typeof r &&
                                                                                                                                                                            ((this.onRejected = r),
                                                                                                                                                                            (this.callRejected = this.otherCallRejected));
                                                                                                                                                                }
                                                                                                                                                                function p(t, e, r) {
                                                                                                                                                                    i(function () {
                                                                                                                                                                        var i;
                                                                                                                                                                        try {
                                                                                                                                                                            i = e(r);
                                                                                                                                                                        } catch (i) {
                                                                                                                                                                            return s.reject(t, i);
                                                                                                                                                                        }
                                                                                                                                                                        i === t
                                                                                                                                                                            ? s.reject(t, new TypeError("Cannot resolve promise with itself"))
                                                                                                                                                                            : s.resolve(t, i);
                                                                                                                                                                    });
                                                                                                                                                                }
                                                                                                                                                                function d(t) {
                                                                                                                                                                    var e = t && t.then;
                                                                                                                                                                    if (
                                                                                                                                                                        t &&
                                                                                                                                                                        ("object" == typeof t || "function" == typeof t) &&
                                                                                                                                                                        "function" == typeof e
                                                                                                                                                                    )
                                                                                                                                                                        return function () {
                                                                                                                                                                            e.apply(t, arguments);
                                                                                                                                                                        };
                                                                                                                                                                }
                                                                                                                                                                function u(t, e) {
                                                                                                                                                                    var r = !1;
                                                                                                                                                                    function i(e) {
                                                                                                                                                                        r || ((r = !0), s.reject(t, e));
                                                                                                                                                                    }
                                                                                                                                                                    function n(e) {
                                                                                                                                                                        r || ((r = !0), s.resolve(t, e));
                                                                                                                                                                    }
                                                                                                                                                                    var a = f(function () {
                                                                                                                                                                        e(n, i);
                                                                                                                                                                    });
                                                                                                                                                                    "error" === a.status && i(a.value);
                                                                                                                                                                }
                                                                                                                                                                function f(t, e) {
                                                                                                                                                                    var r = {};
                                                                                                                                                                    try {
                                                                                                                                                                        (r.value = t(e)), (r.status = "success");
                                                                                                                                                                    } catch (t) {
                                                                                                                                                                        (r.status = "error"), (r.value = t);
                                                                                                                                                                    }
                                                                                                                                                                    return r;
                                                                                                                                                                }
                                                                                                                                                                ((e.exports = h).prototype.finally = function (t) {
                                                                                                                                                                    if ("function" != typeof t) return this;
                                                                                                                                                                    var e = this.constructor;
                                                                                                                                                                    return this.then(
                                                                                                                                                                        function (r) {
                                                                                                                                                                            return e.resolve(t()).then(function () {
                                                                                                                                                                                return r;
                                                                                                                                                                            });
                                                                                                                                                                        },
                                                                                                                                                                        function (r) {
                                                                                                                                                                            return e.resolve(t()).then(function () {
                                                                                                                                                                                throw r;
                                                                                                                                                                            });
                                                                                                                                                                        }
                                                                                                                                                                    );
                                                                                                                                                                }),
                                                                                                                                                                    (h.prototype.catch = function (t) {
                                                                                                                                                                        return this.then(null, t);
                                                                                                                                                                    }),
                                                                                                                                                                    (h.prototype.then = function (t, e) {
                                                                                                                                                                        if (
                                                                                                                                                                            ("function" != typeof t && this.state === o) ||
                                                                                                                                                                            ("function" != typeof e && this.state === a)
                                                                                                                                                                        )
                                                                                                                                                                            return this;
                                                                                                                                                                        var r = new this.constructor(n);
                                                                                                                                                                        return (
                                                                                                                                                                            this.state !== l
                                                                                                                                                                                ? p(r, this.state === o ? t : e, this.outcome)
                                                                                                                                                                                : this.queue.push(new c(r, t, e)),
                                                                                                                                                                            r
                                                                                                                                                                        );
                                                                                                                                                                    }),
                                                                                                                                                                    (c.prototype.callFulfilled = function (t) {
                                                                                                                                                                        s.resolve(this.promise, t);
                                                                                                                                                                    }),
                                                                                                                                                                    (c.prototype.otherCallFulfilled = function (t) {
                                                                                                                                                                        p(this.promise, this.onFulfilled, t);
                                                                                                                                                                    }),
                                                                                                                                                                    (c.prototype.callRejected = function (t) {
                                                                                                                                                                        s.reject(this.promise, t);
                                                                                                                                                                    }),
                                                                                                                                                                    (c.prototype.otherCallRejected = function (t) {
                                                                                                                                                                        p(this.promise, this.onRejected, t);
                                                                                                                                                                    }),
                                                                                                                                                                    (s.resolve = function (t, e) {
                                                                                                                                                                        var r = f(d, e);
                                                                                                                                                                        if ("error" === r.status) return s.reject(t, r.value);
                                                                                                                                                                        var i = r.value;
                                                                                                                                                                        if (i) u(t, i);
                                                                                                                                                                        else {
                                                                                                                                                                            (t.state = o), (t.outcome = e);
                                                                                                                                                                            for (var n = -1, a = t.queue.length; ++n < a; )
                                                                                                                                                                                t.queue[n].callFulfilled(e);
                                                                                                                                                                        }
                                                                                                                                                                        return t;
                                                                                                                                                                    }),
                                                                                                                                                                    (s.reject = function (t, e) {
                                                                                                                                                                        (t.state = a), (t.outcome = e);
                                                                                                                                                                        for (var r = -1, i = t.queue.length; ++r < i; )
                                                                                                                                                                            t.queue[r].callRejected(e);
                                                                                                                                                                        return t;
                                                                                                                                                                    }),
                                                                                                                                                                    (h.resolve = function (t) {
                                                                                                                                                                        return t instanceof this ? t : s.resolve(new this(n), t);
                                                                                                                                                                    }),
                                                                                                                                                                    (h.reject = function (t) {
                                                                                                                                                                        var e = new this(n);
                                                                                                                                                                        return s.reject(e, t);
                                                                                                                                                                    }),
                                                                                                                                                                    (h.all = function (t) {
                                                                                                                                                                        var e = this;
                                                                                                                                                                        if ("[object Array]" !== Object.prototype.toString.call(t))
                                                                                                                                                                            return this.reject(new TypeError("must be an array"));
                                                                                                                                                                        var r = t.length,
                                                                                                                                                                            i = !1;
                                                                                                                                                                        if (!r) return this.resolve([]);
                                                                                                                                                                        for (var a = new Array(r), o = 0, l = -1, h = new this(n); ++l < r; )
                                                                                                                                                                            c(t[l], l);
                                                                                                                                                                        return h;
                                                                                                                                                                        function c(t, n) {
                                                                                                                                                                            e.resolve(t).then(
                                                                                                                                                                                function (t) {
                                                                                                                                                                                    (a[n] = t), ++o !== r || i || ((i = !0), s.resolve(h, a));
                                                                                                                                                                                },
                                                                                                                                                                                function (t) {
                                                                                                                                                                                    i || ((i = !0), s.reject(h, t));
                                                                                                                                                                                }
                                                                                                                                                                            );
                                                                                                                                                                        }
                                                                                                                                                                    }),
                                                                                                                                                                    (h.race = function (t) {
                                                                                                                                                                        if ("[object Array]" !== Object.prototype.toString.call(t))
                                                                                                                                                                            return this.reject(new TypeError("must be an array"));
                                                                                                                                                                        var e = t.length,
                                                                                                                                                                            r = !1;
                                                                                                                                                                        if (!e) return this.resolve([]);
                                                                                                                                                                        for (var i, a = -1, o = new this(n); ++a < e; )
                                                                                                                                                                            (i = t[a]),
                                                                                                                                                                                this.resolve(i).then(
                                                                                                                                                                                    function (t) {
                                                                                                                                                                                        r || ((r = !0), s.resolve(o, t));
                                                                                                                                                                                    },
                                                                                                                                                                                    function (t) {
                                                                                                                                                                                        r || ((r = !0), s.reject(o, t));
                                                                                                                                                                                    }
                                                                                                                                                                                );
                                                                                                                                                                        return o;
                                                                                                                                                                    });
                                                                                                                                                            },
                                                                                                                                                            { immediate: 36 },
                                                                                                                                                        ],
                                                                                                                                                        38: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = {};
                                                                                                                                                                (0, t("./lib/utils/common").assign)(
                                                                                                                                                                    i,
                                                                                                                                                                    t("./lib/deflate"),
                                                                                                                                                                    t("./lib/inflate"),
                                                                                                                                                                    t("./lib/zlib/constants")
                                                                                                                                                                ),
                                                                                                                                                                    (e.exports = i);
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "./lib/deflate": 39,
                                                                                                                                                                "./lib/inflate": 40,
                                                                                                                                                                "./lib/utils/common": 41,
                                                                                                                                                                "./lib/zlib/constants": 44,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                        39: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("./zlib/deflate"),
                                                                                                                                                                    n = t("./utils/common"),
                                                                                                                                                                    s = t("./utils/strings"),
                                                                                                                                                                    a = t("./zlib/messages"),
                                                                                                                                                                    o = t("./zlib/zstream"),
                                                                                                                                                                    l = Object.prototype.toString;
                                                                                                                                                                function h(t) {
                                                                                                                                                                    if (!(this instanceof h)) return new h(t);
                                                                                                                                                                    this.options = n.assign(
                                                                                                                                                                        {
                                                                                                                                                                            level: -1,
                                                                                                                                                                            method: 8,
                                                                                                                                                                            chunkSize: 16384,
                                                                                                                                                                            windowBits: 15,
                                                                                                                                                                            memLevel: 8,
                                                                                                                                                                            strategy: 0,
                                                                                                                                                                            to: "",
                                                                                                                                                                        },
                                                                                                                                                                        t || {}
                                                                                                                                                                    );
                                                                                                                                                                    var e = this.options;
                                                                                                                                                                    e.raw && 0 < e.windowBits
                                                                                                                                                                        ? (e.windowBits = -e.windowBits)
                                                                                                                                                                        : e.gzip &&
                                                                                                                                                                          0 < e.windowBits &&
                                                                                                                                                                          e.windowBits < 16 &&
                                                                                                                                                                          (e.windowBits += 16),
                                                                                                                                                                        (this.err = 0),
                                                                                                                                                                        (this.msg = ""),
                                                                                                                                                                        (this.ended = !1),
                                                                                                                                                                        (this.chunks = []),
                                                                                                                                                                        (this.strm = new o()),
                                                                                                                                                                        (this.strm.avail_out = 0);
                                                                                                                                                                    var r = i.deflateInit2(
                                                                                                                                                                        this.strm,
                                                                                                                                                                        e.level,
                                                                                                                                                                        e.method,
                                                                                                                                                                        e.windowBits,
                                                                                                                                                                        e.memLevel,
                                                                                                                                                                        e.strategy
                                                                                                                                                                    );
                                                                                                                                                                    if (0 !== r) throw new Error(a[r]);
                                                                                                                                                                    if ((e.header && i.deflateSetHeader(this.strm, e.header), e.dictionary)) {
                                                                                                                                                                        var c;
                                                                                                                                                                        if (
                                                                                                                                                                            ((c =
                                                                                                                                                                                "string" == typeof e.dictionary
                                                                                                                                                                                    ? s.string2buf(e.dictionary)
                                                                                                                                                                                    : "[object ArrayBuffer]" === l.call(e.dictionary)
                                                                                                                                                                                    ? new Uint8Array(e.dictionary)
                                                                                                                                                                                    : e.dictionary),
                                                                                                                                                                            0 !== (r = i.deflateSetDictionary(this.strm, c)))
                                                                                                                                                                        )
                                                                                                                                                                            throw new Error(a[r]);
                                                                                                                                                                        this._dict_set = !0;
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                function c(t, e) {
                                                                                                                                                                    var r = new h(e);
                                                                                                                                                                    if ((r.push(t, !0), r.err)) throw r.msg || a[r.err];
                                                                                                                                                                    return r.result;
                                                                                                                                                                }
                                                                                                                                                                (h.prototype.push = function (t, e) {
                                                                                                                                                                    var r,
                                                                                                                                                                        a,
                                                                                                                                                                        o = this.strm,
                                                                                                                                                                        h = this.options.chunkSize;
                                                                                                                                                                    if (this.ended) return !1;
                                                                                                                                                                    (a = e === ~~e ? e : !0 === e ? 4 : 0),
                                                                                                                                                                        "string" == typeof t
                                                                                                                                                                            ? (o.input = s.string2buf(t))
                                                                                                                                                                            : "[object ArrayBuffer]" === l.call(t)
                                                                                                                                                                            ? (o.input = new Uint8Array(t))
                                                                                                                                                                            : (o.input = t),
                                                                                                                                                                        (o.next_in = 0),
                                                                                                                                                                        (o.avail_in = o.input.length);
                                                                                                                                                                    do {
                                                                                                                                                                        if (
                                                                                                                                                                            (0 === o.avail_out &&
                                                                                                                                                                                ((o.output = new n.Buf8(h)),
                                                                                                                                                                                (o.next_out = 0),
                                                                                                                                                                                (o.avail_out = h)),
                                                                                                                                                                            1 !== (r = i.deflate(o, a)) && 0 !== r)
                                                                                                                                                                        )
                                                                                                                                                                            return this.onEnd(r), !(this.ended = !0);
                                                                                                                                                                        (0 !== o.avail_out && (0 !== o.avail_in || (4 !== a && 2 !== a))) ||
                                                                                                                                                                            ("string" === this.options.to
                                                                                                                                                                                ? this.onData(
                                                                                                                                                                                      s.buf2binstring(n.shrinkBuf(o.output, o.next_out))
                                                                                                                                                                                  )
                                                                                                                                                                                : this.onData(n.shrinkBuf(o.output, o.next_out)));
                                                                                                                                                                    } while ((0 < o.avail_in || 0 === o.avail_out) && 1 !== r);
                                                                                                                                                                    return 4 === a
                                                                                                                                                                        ? ((r = i.deflateEnd(this.strm)),
                                                                                                                                                                          this.onEnd(r),
                                                                                                                                                                          (this.ended = !0),
                                                                                                                                                                          0 === r)
                                                                                                                                                                        : 2 !== a || (this.onEnd(0), !(o.avail_out = 0));
                                                                                                                                                                }),
                                                                                                                                                                    (h.prototype.onData = function (t) {
                                                                                                                                                                        this.chunks.push(t);
                                                                                                                                                                    }),
                                                                                                                                                                    (h.prototype.onEnd = function (t) {
                                                                                                                                                                        0 === t &&
                                                                                                                                                                            ("string" === this.options.to
                                                                                                                                                                                ? (this.result = this.chunks.join(""))
                                                                                                                                                                                : (this.result = n.flattenChunks(this.chunks))),
                                                                                                                                                                            (this.chunks = []),
                                                                                                                                                                            (this.err = t),
                                                                                                                                                                            (this.msg = this.strm.msg);
                                                                                                                                                                    }),
                                                                                                                                                                    (r.Deflate = h),
                                                                                                                                                                    (r.deflate = c),
                                                                                                                                                                    (r.deflateRaw = function (t, e) {
                                                                                                                                                                        return ((e = e || {}).raw = !0), c(t, e);
                                                                                                                                                                    }),
                                                                                                                                                                    (r.gzip = function (t, e) {
                                                                                                                                                                        return ((e = e || {}).gzip = !0), c(t, e);
                                                                                                                                                                    });
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "./utils/common": 41,
                                                                                                                                                                "./utils/strings": 42,
                                                                                                                                                                "./zlib/deflate": 46,
                                                                                                                                                                "./zlib/messages": 51,
                                                                                                                                                                "./zlib/zstream": 53,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                        40: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("./zlib/inflate"),
                                                                                                                                                                    n = t("./utils/common"),
                                                                                                                                                                    s = t("./utils/strings"),
                                                                                                                                                                    a = t("./zlib/constants"),
                                                                                                                                                                    o = t("./zlib/messages"),
                                                                                                                                                                    l = t("./zlib/zstream"),
                                                                                                                                                                    h = t("./zlib/gzheader"),
                                                                                                                                                                    c = Object.prototype.toString;
                                                                                                                                                                function p(t) {
                                                                                                                                                                    if (!(this instanceof p)) return new p(t);
                                                                                                                                                                    this.options = n.assign(
                                                                                                                                                                        { chunkSize: 16384, windowBits: 0, to: "" },
                                                                                                                                                                        t || {}
                                                                                                                                                                    );
                                                                                                                                                                    var e = this.options;
                                                                                                                                                                    e.raw &&
                                                                                                                                                                        0 <= e.windowBits &&
                                                                                                                                                                        e.windowBits < 16 &&
                                                                                                                                                                        ((e.windowBits = -e.windowBits),
                                                                                                                                                                        0 === e.windowBits && (e.windowBits = -15)),
                                                                                                                                                                        !(0 <= e.windowBits && e.windowBits < 16) ||
                                                                                                                                                                            (t && t.windowBits) ||
                                                                                                                                                                            (e.windowBits += 32),
                                                                                                                                                                        15 < e.windowBits &&
                                                                                                                                                                            e.windowBits < 48 &&
                                                                                                                                                                            0 == (15 & e.windowBits) &&
                                                                                                                                                                            (e.windowBits |= 15),
                                                                                                                                                                        (this.err = 0),
                                                                                                                                                                        (this.msg = ""),
                                                                                                                                                                        (this.ended = !1),
                                                                                                                                                                        (this.chunks = []),
                                                                                                                                                                        (this.strm = new l()),
                                                                                                                                                                        (this.strm.avail_out = 0);
                                                                                                                                                                    var r = i.inflateInit2(this.strm, e.windowBits);
                                                                                                                                                                    if (r !== a.Z_OK) throw new Error(o[r]);
                                                                                                                                                                    (this.header = new h()), i.inflateGetHeader(this.strm, this.header);
                                                                                                                                                                }
                                                                                                                                                                function d(t, e) {
                                                                                                                                                                    var r = new p(e);
                                                                                                                                                                    if ((r.push(t, !0), r.err)) throw r.msg || o[r.err];
                                                                                                                                                                    return r.result;
                                                                                                                                                                }
                                                                                                                                                                (p.prototype.push = function (t, e) {
                                                                                                                                                                    var r,
                                                                                                                                                                        o,
                                                                                                                                                                        l,
                                                                                                                                                                        h,
                                                                                                                                                                        p,
                                                                                                                                                                        d,
                                                                                                                                                                        u = this.strm,
                                                                                                                                                                        f = this.options.chunkSize,
                                                                                                                                                                        m = this.options.dictionary,
                                                                                                                                                                        y = !1;
                                                                                                                                                                    if (this.ended) return !1;
                                                                                                                                                                    (o = e === ~~e ? e : !0 === e ? a.Z_FINISH : a.Z_NO_FLUSH),
                                                                                                                                                                        "string" == typeof t
                                                                                                                                                                            ? (u.input = s.binstring2buf(t))
                                                                                                                                                                            : "[object ArrayBuffer]" === c.call(t)
                                                                                                                                                                            ? (u.input = new Uint8Array(t))
                                                                                                                                                                            : (u.input = t),
                                                                                                                                                                        (u.next_in = 0),
                                                                                                                                                                        (u.avail_in = u.input.length);
                                                                                                                                                                    do {
                                                                                                                                                                        if (
                                                                                                                                                                            (0 === u.avail_out &&
                                                                                                                                                                                ((u.output = new n.Buf8(f)),
                                                                                                                                                                                (u.next_out = 0),
                                                                                                                                                                                (u.avail_out = f)),
                                                                                                                                                                            (r = i.inflate(u, a.Z_NO_FLUSH)) === a.Z_NEED_DICT &&
                                                                                                                                                                                m &&
                                                                                                                                                                                ((d =
                                                                                                                                                                                    "string" == typeof m
                                                                                                                                                                                        ? s.string2buf(m)
                                                                                                                                                                                        : "[object ArrayBuffer]" === c.call(m)
                                                                                                                                                                                        ? new Uint8Array(m)
                                                                                                                                                                                        : m),
                                                                                                                                                                                (r = i.inflateSetDictionary(this.strm, d))),
                                                                                                                                                                            r === a.Z_BUF_ERROR && !0 === y && ((r = a.Z_OK), (y = !1)),
                                                                                                                                                                            r !== a.Z_STREAM_END && r !== a.Z_OK)
                                                                                                                                                                        )
                                                                                                                                                                            return this.onEnd(r), !(this.ended = !0);
                                                                                                                                                                        u.next_out &&
                                                                                                                                                                            ((0 !== u.avail_out &&
                                                                                                                                                                                r !== a.Z_STREAM_END &&
                                                                                                                                                                                (0 !== u.avail_in ||
                                                                                                                                                                                    (o !== a.Z_FINISH && o !== a.Z_SYNC_FLUSH))) ||
                                                                                                                                                                                ("string" === this.options.to
                                                                                                                                                                                    ? ((l = s.utf8border(u.output, u.next_out)),
                                                                                                                                                                                      (h = u.next_out - l),
                                                                                                                                                                                      (p = s.buf2string(u.output, l)),
                                                                                                                                                                                      (u.next_out = h),
                                                                                                                                                                                      (u.avail_out = f - h),
                                                                                                                                                                                      h && n.arraySet(u.output, u.output, l, h, 0),
                                                                                                                                                                                      this.onData(p))
                                                                                                                                                                                    : this.onData(n.shrinkBuf(u.output, u.next_out)))),
                                                                                                                                                                            0 === u.avail_in && 0 === u.avail_out && (y = !0);
                                                                                                                                                                    } while ((0 < u.avail_in || 0 === u.avail_out) && r !== a.Z_STREAM_END);
                                                                                                                                                                    return (
                                                                                                                                                                        r === a.Z_STREAM_END && (o = a.Z_FINISH),
                                                                                                                                                                        o === a.Z_FINISH
                                                                                                                                                                            ? ((r = i.inflateEnd(this.strm)),
                                                                                                                                                                              this.onEnd(r),
                                                                                                                                                                              (this.ended = !0),
                                                                                                                                                                              r === a.Z_OK)
                                                                                                                                                                            : o !== a.Z_SYNC_FLUSH || (this.onEnd(a.Z_OK), !(u.avail_out = 0))
                                                                                                                                                                    );
                                                                                                                                                                }),
                                                                                                                                                                    (p.prototype.onData = function (t) {
                                                                                                                                                                        this.chunks.push(t);
                                                                                                                                                                    }),
                                                                                                                                                                    (p.prototype.onEnd = function (t) {
                                                                                                                                                                        t === a.Z_OK &&
                                                                                                                                                                            ("string" === this.options.to
                                                                                                                                                                                ? (this.result = this.chunks.join(""))
                                                                                                                                                                                : (this.result = n.flattenChunks(this.chunks))),
                                                                                                                                                                            (this.chunks = []),
                                                                                                                                                                            (this.err = t),
                                                                                                                                                                            (this.msg = this.strm.msg);
                                                                                                                                                                    }),
                                                                                                                                                                    (r.Inflate = p),
                                                                                                                                                                    (r.inflate = d),
                                                                                                                                                                    (r.inflateRaw = function (t, e) {
                                                                                                                                                                        return ((e = e || {}).raw = !0), d(t, e);
                                                                                                                                                                    }),
                                                                                                                                                                    (r.ungzip = d);
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "./utils/common": 41,
                                                                                                                                                                "./utils/strings": 42,
                                                                                                                                                                "./zlib/constants": 44,
                                                                                                                                                                "./zlib/gzheader": 47,
                                                                                                                                                                "./zlib/inflate": 49,
                                                                                                                                                                "./zlib/messages": 51,
                                                                                                                                                                "./zlib/zstream": 53,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                        41: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i =
                                                                                                                                                                    "undefined" != typeof Uint8Array &&
                                                                                                                                                                    "undefined" != typeof Uint16Array &&
                                                                                                                                                                    "undefined" != typeof Int32Array;
                                                                                                                                                                (r.assign = function (t) {
                                                                                                                                                                    for (var e = Array.prototype.slice.call(arguments, 1); e.length; ) {
                                                                                                                                                                        var r = e.shift();
                                                                                                                                                                        if (r) {
                                                                                                                                                                            if ("object" != typeof r)
                                                                                                                                                                                throw new TypeError(r + "must be non-object");
                                                                                                                                                                            for (var i in r) r.hasOwnProperty(i) && (t[i] = r[i]);
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                    return t;
                                                                                                                                                                }),
                                                                                                                                                                    (r.shrinkBuf = function (t, e) {
                                                                                                                                                                        return t.length === e
                                                                                                                                                                            ? t
                                                                                                                                                                            : t.subarray
                                                                                                                                                                            ? t.subarray(0, e)
                                                                                                                                                                            : ((t.length = e), t);
                                                                                                                                                                    });
                                                                                                                                                                var n = {
                                                                                                                                                                        arraySet: function (t, e, r, i, n) {
                                                                                                                                                                            if (e.subarray && t.subarray) t.set(e.subarray(r, r + i), n);
                                                                                                                                                                            else for (var s = 0; s < i; s++) t[n + s] = e[r + s];
                                                                                                                                                                        },
                                                                                                                                                                        flattenChunks: function (t) {
                                                                                                                                                                            var e, r, i, n, s, a;
                                                                                                                                                                            for (e = i = 0, r = t.length; e < r; e++) i += t[e].length;
                                                                                                                                                                            for (a = new Uint8Array(i), e = n = 0, r = t.length; e < r; e++)
                                                                                                                                                                                (s = t[e]), a.set(s, n), (n += s.length);
                                                                                                                                                                            return a;
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                    s = {
                                                                                                                                                                        arraySet: function (t, e, r, i, n) {
                                                                                                                                                                            for (var s = 0; s < i; s++) t[n + s] = e[r + s];
                                                                                                                                                                        },
                                                                                                                                                                        flattenChunks: function (t) {
                                                                                                                                                                            return [].concat.apply([], t);
                                                                                                                                                                        },
                                                                                                                                                                    };
                                                                                                                                                                (r.setTyped = function (t) {
                                                                                                                                                                    t
                                                                                                                                                                        ? ((r.Buf8 = Uint8Array),
                                                                                                                                                                          (r.Buf16 = Uint16Array),
                                                                                                                                                                          (r.Buf32 = Int32Array),
                                                                                                                                                                          r.assign(r, n))
                                                                                                                                                                        : ((r.Buf8 = Array),
                                                                                                                                                                          (r.Buf16 = Array),
                                                                                                                                                                          (r.Buf32 = Array),
                                                                                                                                                                          r.assign(r, s));
                                                                                                                                                                }),
                                                                                                                                                                    r.setTyped(i);
                                                                                                                                                            },
                                                                                                                                                            {},
                                                                                                                                                        ],
                                                                                                                                                        42: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("./common"),
                                                                                                                                                                    n = !0,
                                                                                                                                                                    s = !0;
                                                                                                                                                                try {
                                                                                                                                                                    String.fromCharCode.apply(null, [0]);
                                                                                                                                                                } catch (t) {
                                                                                                                                                                    n = !1;
                                                                                                                                                                }
                                                                                                                                                                try {
                                                                                                                                                                    String.fromCharCode.apply(null, new Uint8Array(1));
                                                                                                                                                                } catch (t) {
                                                                                                                                                                    s = !1;
                                                                                                                                                                }
                                                                                                                                                                for (var a = new i.Buf8(256), o = 0; o < 256; o++)
                                                                                                                                                                    a[o] =
                                                                                                                                                                        252 <= o
                                                                                                                                                                            ? 6
                                                                                                                                                                            : 248 <= o
                                                                                                                                                                            ? 5
                                                                                                                                                                            : 240 <= o
                                                                                                                                                                            ? 4
                                                                                                                                                                            : 224 <= o
                                                                                                                                                                            ? 3
                                                                                                                                                                            : 192 <= o
                                                                                                                                                                            ? 2
                                                                                                                                                                            : 1;
                                                                                                                                                                function l(t, e) {
                                                                                                                                                                    if (e < 65537 && ((t.subarray && s) || (!t.subarray && n)))
                                                                                                                                                                        return String.fromCharCode.apply(null, i.shrinkBuf(t, e));
                                                                                                                                                                    for (var r = "", a = 0; a < e; a++) r += String.fromCharCode(t[a]);
                                                                                                                                                                    return r;
                                                                                                                                                                }
                                                                                                                                                                (a[254] = a[254] = 1),
                                                                                                                                                                    (r.string2buf = function (t) {
                                                                                                                                                                        var e,
                                                                                                                                                                            r,
                                                                                                                                                                            n,
                                                                                                                                                                            s,
                                                                                                                                                                            a,
                                                                                                                                                                            o = t.length,
                                                                                                                                                                            l = 0;
                                                                                                                                                                        for (s = 0; s < o; s++)
                                                                                                                                                                            55296 == (64512 & (r = t.charCodeAt(s))) &&
                                                                                                                                                                                s + 1 < o &&
                                                                                                                                                                                56320 == (64512 & (n = t.charCodeAt(s + 1))) &&
                                                                                                                                                                                ((r = 65536 + ((r - 55296) << 10) + (n - 56320)), s++),
                                                                                                                                                                                (l += r < 128 ? 1 : r < 2048 ? 2 : r < 65536 ? 3 : 4);
                                                                                                                                                                        for (e = new i.Buf8(l), s = a = 0; a < l; s++)
                                                                                                                                                                            55296 == (64512 & (r = t.charCodeAt(s))) &&
                                                                                                                                                                                s + 1 < o &&
                                                                                                                                                                                56320 == (64512 & (n = t.charCodeAt(s + 1))) &&
                                                                                                                                                                                ((r = 65536 + ((r - 55296) << 10) + (n - 56320)), s++),
                                                                                                                                                                                r < 128
                                                                                                                                                                                    ? (e[a++] = r)
                                                                                                                                                                                    : (r < 2048
                                                                                                                                                                                          ? (e[a++] = 192 | (r >>> 6))
                                                                                                                                                                                          : (r < 65536
                                                                                                                                                                                                ? (e[a++] = 224 | (r >>> 12))
                                                                                                                                                                                                : ((e[a++] = 240 | (r >>> 18)),
                                                                                                                                                                                                  (e[a++] = 128 | ((r >>> 12) & 63))),
                                                                                                                                                                                            (e[a++] = 128 | ((r >>> 6) & 63))),
                                                                                                                                                                                      (e[a++] = 128 | (63 & r)));
                                                                                                                                                                        return e;
                                                                                                                                                                    }),
                                                                                                                                                                    (r.buf2binstring = function (t) {
                                                                                                                                                                        return l(t, t.length);
                                                                                                                                                                    }),
                                                                                                                                                                    (r.binstring2buf = function (t) {
                                                                                                                                                                        for (var e = new i.Buf8(t.length), r = 0, n = e.length; r < n; r++)
                                                                                                                                                                            e[r] = t.charCodeAt(r);
                                                                                                                                                                        return e;
                                                                                                                                                                    }),
                                                                                                                                                                    (r.buf2string = function (t, e) {
                                                                                                                                                                        var r,
                                                                                                                                                                            i,
                                                                                                                                                                            n,
                                                                                                                                                                            s,
                                                                                                                                                                            o = e || t.length,
                                                                                                                                                                            h = new Array(2 * o);
                                                                                                                                                                        for (r = i = 0; r < o; )
                                                                                                                                                                            if ((n = t[r++]) < 128) h[i++] = n;
                                                                                                                                                                            else if (4 < (s = a[n])) (h[i++] = 65533), (r += s - 1);
                                                                                                                                                                            else {
                                                                                                                                                                                for (n &= 2 === s ? 31 : 3 === s ? 15 : 7; 1 < s && r < o; )
                                                                                                                                                                                    (n = (n << 6) | (63 & t[r++])), s--;
                                                                                                                                                                                1 < s
                                                                                                                                                                                    ? (h[i++] = 65533)
                                                                                                                                                                                    : n < 65536
                                                                                                                                                                                    ? (h[i++] = n)
                                                                                                                                                                                    : ((n -= 65536),
                                                                                                                                                                                      (h[i++] = 55296 | ((n >> 10) & 1023)),
                                                                                                                                                                                      (h[i++] = 56320 | (1023 & n)));
                                                                                                                                                                            }
                                                                                                                                                                        return l(h, i);
                                                                                                                                                                    }),
                                                                                                                                                                    (r.utf8border = function (t, e) {
                                                                                                                                                                        var r;
                                                                                                                                                                        for (
                                                                                                                                                                            (e = e || t.length) > t.length && (e = t.length), r = e - 1;
                                                                                                                                                                            0 <= r && 128 == (192 & t[r]);

                                                                                                                                                                        )
                                                                                                                                                                            r--;
                                                                                                                                                                        return r < 0 || 0 === r ? e : r + a[t[r]] > e ? r : e;
                                                                                                                                                                    });
                                                                                                                                                            },
                                                                                                                                                            { "./common": 41 },
                                                                                                                                                        ],
                                                                                                                                                        43: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                e.exports = function (t, e, r, i) {
                                                                                                                                                                    for (
                                                                                                                                                                        var n = (65535 & t) | 0, s = ((t >>> 16) & 65535) | 0, a = 0;
                                                                                                                                                                        0 !== r;

                                                                                                                                                                    ) {
                                                                                                                                                                        for (
                                                                                                                                                                            r -= a = 2e3 < r ? 2e3 : r;
                                                                                                                                                                            (s = (s + (n = (n + e[i++]) | 0)) | 0), --a;

                                                                                                                                                                        );
                                                                                                                                                                        (n %= 65521), (s %= 65521);
                                                                                                                                                                    }
                                                                                                                                                                    return n | (s << 16) | 0;
                                                                                                                                                                };
                                                                                                                                                            },
                                                                                                                                                            {},
                                                                                                                                                        ],
                                                                                                                                                        44: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                e.exports = {
                                                                                                                                                                    Z_NO_FLUSH: 0,
                                                                                                                                                                    Z_PARTIAL_FLUSH: 1,
                                                                                                                                                                    Z_SYNC_FLUSH: 2,
                                                                                                                                                                    Z_FULL_FLUSH: 3,
                                                                                                                                                                    Z_FINISH: 4,
                                                                                                                                                                    Z_BLOCK: 5,
                                                                                                                                                                    Z_TREES: 6,
                                                                                                                                                                    Z_OK: 0,
                                                                                                                                                                    Z_STREAM_END: 1,
                                                                                                                                                                    Z_NEED_DICT: 2,
                                                                                                                                                                    Z_ERRNO: -1,
                                                                                                                                                                    Z_STREAM_ERROR: -2,
                                                                                                                                                                    Z_DATA_ERROR: -3,
                                                                                                                                                                    Z_BUF_ERROR: -5,
                                                                                                                                                                    Z_NO_COMPRESSION: 0,
                                                                                                                                                                    Z_BEST_SPEED: 1,
                                                                                                                                                                    Z_BEST_COMPRESSION: 9,
                                                                                                                                                                    Z_DEFAULT_COMPRESSION: -1,
                                                                                                                                                                    Z_FILTERED: 1,
                                                                                                                                                                    Z_HUFFMAN_ONLY: 2,
                                                                                                                                                                    Z_RLE: 3,
                                                                                                                                                                    Z_FIXED: 4,
                                                                                                                                                                    Z_DEFAULT_STRATEGY: 0,
                                                                                                                                                                    Z_BINARY: 0,
                                                                                                                                                                    Z_TEXT: 1,
                                                                                                                                                                    Z_UNKNOWN: 2,
                                                                                                                                                                    Z_DEFLATED: 8,
                                                                                                                                                                };
                                                                                                                                                            },
                                                                                                                                                            {},
                                                                                                                                                        ],
                                                                                                                                                        45: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = (function () {
                                                                                                                                                                    for (var t, e = [], r = 0; r < 256; r++) {
                                                                                                                                                                        t = r;
                                                                                                                                                                        for (var i = 0; i < 8; i++)
                                                                                                                                                                            t = 1 & t ? 3988292384 ^ (t >>> 1) : t >>> 1;
                                                                                                                                                                        e[r] = t;
                                                                                                                                                                    }
                                                                                                                                                                    return e;
                                                                                                                                                                })();
                                                                                                                                                                e.exports = function (t, e, r, n) {
                                                                                                                                                                    var s = i,
                                                                                                                                                                        a = n + r;
                                                                                                                                                                    t ^= -1;
                                                                                                                                                                    for (var o = n; o < a; o++) t = (t >>> 8) ^ s[255 & (t ^ e[o])];
                                                                                                                                                                    return -1 ^ t;
                                                                                                                                                                };
                                                                                                                                                            },
                                                                                                                                                            {},
                                                                                                                                                        ],
                                                                                                                                                        46: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i,
                                                                                                                                                                    n = t("../utils/common"),
                                                                                                                                                                    s = t("./trees"),
                                                                                                                                                                    a = t("./adler32"),
                                                                                                                                                                    o = t("./crc32"),
                                                                                                                                                                    l = t("./messages"),
                                                                                                                                                                    h = -2,
                                                                                                                                                                    c = 258,
                                                                                                                                                                    p = 262,
                                                                                                                                                                    d = 113;
                                                                                                                                                                function u(t, e) {
                                                                                                                                                                    return (t.msg = l[e]), e;
                                                                                                                                                                }
                                                                                                                                                                function f(t) {
                                                                                                                                                                    return (t << 1) - (4 < t ? 9 : 0);
                                                                                                                                                                }
                                                                                                                                                                function m(t) {
                                                                                                                                                                    for (var e = t.length; 0 <= --e; ) t[e] = 0;
                                                                                                                                                                }
                                                                                                                                                                function y(t) {
                                                                                                                                                                    var e = t.state,
                                                                                                                                                                        r = e.pending;
                                                                                                                                                                    r > t.avail_out && (r = t.avail_out),
                                                                                                                                                                        0 !== r &&
                                                                                                                                                                            (n.arraySet(t.output, e.pending_buf, e.pending_out, r, t.next_out),
                                                                                                                                                                            (t.next_out += r),
                                                                                                                                                                            (e.pending_out += r),
                                                                                                                                                                            (t.total_out += r),
                                                                                                                                                                            (t.avail_out -= r),
                                                                                                                                                                            (e.pending -= r),
                                                                                                                                                                            0 === e.pending && (e.pending_out = 0));
                                                                                                                                                                }
                                                                                                                                                                function g(t, e) {
                                                                                                                                                                    s._tr_flush_block(
                                                                                                                                                                        t,
                                                                                                                                                                        0 <= t.block_start ? t.block_start : -1,
                                                                                                                                                                        t.strstart - t.block_start,
                                                                                                                                                                        e
                                                                                                                                                                    ),
                                                                                                                                                                        (t.block_start = t.strstart),
                                                                                                                                                                        y(t.strm);
                                                                                                                                                                }
                                                                                                                                                                function v(t, e) {
                                                                                                                                                                    t.pending_buf[t.pending++] = e;
                                                                                                                                                                }
                                                                                                                                                                function b(t, e) {
                                                                                                                                                                    (t.pending_buf[t.pending++] = (e >>> 8) & 255),
                                                                                                                                                                        (t.pending_buf[t.pending++] = 255 & e);
                                                                                                                                                                }
                                                                                                                                                                function _(t, e) {
                                                                                                                                                                    var r,
                                                                                                                                                                        i,
                                                                                                                                                                        n = t.max_chain_length,
                                                                                                                                                                        s = t.strstart,
                                                                                                                                                                        a = t.prev_length,
                                                                                                                                                                        o = t.nice_match,
                                                                                                                                                                        l = t.strstart > t.w_size - p ? t.strstart - (t.w_size - p) : 0,
                                                                                                                                                                        h = t.window,
                                                                                                                                                                        d = t.w_mask,
                                                                                                                                                                        u = t.prev,
                                                                                                                                                                        f = t.strstart + c,
                                                                                                                                                                        m = h[s + a - 1],
                                                                                                                                                                        y = h[s + a];
                                                                                                                                                                    t.prev_length >= t.good_match && (n >>= 2),
                                                                                                                                                                        o > t.lookahead && (o = t.lookahead);
                                                                                                                                                                    do {
                                                                                                                                                                        if (
                                                                                                                                                                            h[(r = e) + a] === y &&
                                                                                                                                                                            h[r + a - 1] === m &&
                                                                                                                                                                            h[r] === h[s] &&
                                                                                                                                                                            h[++r] === h[s + 1]
                                                                                                                                                                        ) {
                                                                                                                                                                            (s += 2), r++;
                                                                                                                                                                            do {} while (
                                                                                                                                                                                h[++s] === h[++r] &&
                                                                                                                                                                                h[++s] === h[++r] &&
                                                                                                                                                                                h[++s] === h[++r] &&
                                                                                                                                                                                h[++s] === h[++r] &&
                                                                                                                                                                                h[++s] === h[++r] &&
                                                                                                                                                                                h[++s] === h[++r] &&
                                                                                                                                                                                h[++s] === h[++r] &&
                                                                                                                                                                                h[++s] === h[++r] &&
                                                                                                                                                                                s < f
                                                                                                                                                                            );
                                                                                                                                                                            if (((i = c - (f - s)), (s = f - c), a < i)) {
                                                                                                                                                                                if (((t.match_start = e), o <= (a = i))) break;
                                                                                                                                                                                (m = h[s + a - 1]), (y = h[s + a]);
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    } while ((e = u[e & d]) > l && 0 != --n);
                                                                                                                                                                    return a <= t.lookahead ? a : t.lookahead;
                                                                                                                                                                }
                                                                                                                                                                function w(t) {
                                                                                                                                                                    var e,
                                                                                                                                                                        r,
                                                                                                                                                                        i,
                                                                                                                                                                        s,
                                                                                                                                                                        l,
                                                                                                                                                                        h,
                                                                                                                                                                        c,
                                                                                                                                                                        d,
                                                                                                                                                                        u,
                                                                                                                                                                        f,
                                                                                                                                                                        m = t.w_size;
                                                                                                                                                                    do {
                                                                                                                                                                        if (
                                                                                                                                                                            ((s = t.window_size - t.lookahead - t.strstart),
                                                                                                                                                                            t.strstart >= m + (m - p))
                                                                                                                                                                        ) {
                                                                                                                                                                            for (
                                                                                                                                                                                n.arraySet(t.window, t.window, m, m, 0),
                                                                                                                                                                                    t.match_start -= m,
                                                                                                                                                                                    t.strstart -= m,
                                                                                                                                                                                    t.block_start -= m,
                                                                                                                                                                                    e = r = t.hash_size;
                                                                                                                                                                                (i = t.head[--e]), (t.head[e] = m <= i ? i - m : 0), --r;

                                                                                                                                                                            );
                                                                                                                                                                            for (
                                                                                                                                                                                e = r = m;
                                                                                                                                                                                (i = t.prev[--e]), (t.prev[e] = m <= i ? i - m : 0), --r;

                                                                                                                                                                            );
                                                                                                                                                                            s += m;
                                                                                                                                                                        }
                                                                                                                                                                        if (0 === t.strm.avail_in) break;
                                                                                                                                                                        if (
                                                                                                                                                                            ((h = t.strm),
                                                                                                                                                                            (c = t.window),
                                                                                                                                                                            (d = t.strstart + t.lookahead),
                                                                                                                                                                            (f = void 0),
                                                                                                                                                                            (u = s) < (f = h.avail_in) && (f = u),
                                                                                                                                                                            (r =
                                                                                                                                                                                0 === f
                                                                                                                                                                                    ? 0
                                                                                                                                                                                    : ((h.avail_in -= f),
                                                                                                                                                                                      n.arraySet(c, h.input, h.next_in, f, d),
                                                                                                                                                                                      1 === h.state.wrap
                                                                                                                                                                                          ? (h.adler = a(h.adler, c, f, d))
                                                                                                                                                                                          : 2 === h.state.wrap &&
                                                                                                                                                                                            (h.adler = o(h.adler, c, f, d)),
                                                                                                                                                                                      (h.next_in += f),
                                                                                                                                                                                      (h.total_in += f),
                                                                                                                                                                                      f)),
                                                                                                                                                                            (t.lookahead += r),
                                                                                                                                                                            t.lookahead + t.insert >= 3)
                                                                                                                                                                        )
                                                                                                                                                                            for (
                                                                                                                                                                                l = t.strstart - t.insert,
                                                                                                                                                                                    t.ins_h = t.window[l],
                                                                                                                                                                                    t.ins_h =
                                                                                                                                                                                        ((t.ins_h << t.hash_shift) ^ t.window[l + 1]) &
                                                                                                                                                                                        t.hash_mask;
                                                                                                                                                                                t.insert &&
                                                                                                                                                                                ((t.ins_h =
                                                                                                                                                                                    ((t.ins_h << t.hash_shift) ^ t.window[l + 3 - 1]) &
                                                                                                                                                                                    t.hash_mask),
                                                                                                                                                                                (t.prev[l & t.w_mask] = t.head[t.ins_h]),
                                                                                                                                                                                (t.head[t.ins_h] = l),
                                                                                                                                                                                l++,
                                                                                                                                                                                t.insert--,
                                                                                                                                                                                !(t.lookahead + t.insert < 3));

                                                                                                                                                                            );
                                                                                                                                                                    } while (t.lookahead < p && 0 !== t.strm.avail_in);
                                                                                                                                                                }
                                                                                                                                                                function S(t, e) {
                                                                                                                                                                    for (var r, i; ; ) {
                                                                                                                                                                        if (t.lookahead < p) {
                                                                                                                                                                            if ((w(t), t.lookahead < p && 0 === e)) return 1;
                                                                                                                                                                            if (0 === t.lookahead) break;
                                                                                                                                                                        }
                                                                                                                                                                        if (
                                                                                                                                                                            ((r = 0),
                                                                                                                                                                            t.lookahead >= 3 &&
                                                                                                                                                                                ((t.ins_h =
                                                                                                                                                                                    ((t.ins_h << t.hash_shift) ^ t.window[t.strstart + 3 - 1]) &
                                                                                                                                                                                    t.hash_mask),
                                                                                                                                                                                (r = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h]),
                                                                                                                                                                                (t.head[t.ins_h] = t.strstart)),
                                                                                                                                                                            0 !== r &&
                                                                                                                                                                                t.strstart - r <= t.w_size - p &&
                                                                                                                                                                                (t.match_length = _(t, r)),
                                                                                                                                                                            t.match_length >= 3)
                                                                                                                                                                        )
                                                                                                                                                                            if (
                                                                                                                                                                                ((i = s._tr_tally(
                                                                                                                                                                                    t,
                                                                                                                                                                                    t.strstart - t.match_start,
                                                                                                                                                                                    t.match_length - 3
                                                                                                                                                                                )),
                                                                                                                                                                                (t.lookahead -= t.match_length),
                                                                                                                                                                                t.match_length <= t.max_lazy_match && t.lookahead >= 3)
                                                                                                                                                                            ) {
                                                                                                                                                                                for (
                                                                                                                                                                                    t.match_length--;
                                                                                                                                                                                    t.strstart++,
                                                                                                                                                                                        (t.ins_h =
                                                                                                                                                                                            ((t.ins_h << t.hash_shift) ^
                                                                                                                                                                                                t.window[t.strstart + 3 - 1]) &
                                                                                                                                                                                            t.hash_mask),
                                                                                                                                                                                        (r = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h]),
                                                                                                                                                                                        (t.head[t.ins_h] = t.strstart),
                                                                                                                                                                                        0 != --t.match_length;

                                                                                                                                                                                );
                                                                                                                                                                                t.strstart++;
                                                                                                                                                                            } else
                                                                                                                                                                                (t.strstart += t.match_length),
                                                                                                                                                                                    (t.match_length = 0),
                                                                                                                                                                                    (t.ins_h = t.window[t.strstart]),
                                                                                                                                                                                    (t.ins_h =
                                                                                                                                                                                        ((t.ins_h << t.hash_shift) ^ t.window[t.strstart + 1]) &
                                                                                                                                                                                        t.hash_mask);
                                                                                                                                                                        else
                                                                                                                                                                            (i = s._tr_tally(t, 0, t.window[t.strstart])),
                                                                                                                                                                                t.lookahead--,
                                                                                                                                                                                t.strstart++;
                                                                                                                                                                        if (i && (g(t, !1), 0 === t.strm.avail_out)) return 1;
                                                                                                                                                                    }
                                                                                                                                                                    return (
                                                                                                                                                                        (t.insert = t.strstart < 2 ? t.strstart : 2),
                                                                                                                                                                        4 === e
                                                                                                                                                                            ? (g(t, !0), 0 === t.strm.avail_out ? 3 : 4)
                                                                                                                                                                            : t.last_lit && (g(t, !1), 0 === t.strm.avail_out)
                                                                                                                                                                            ? 1
                                                                                                                                                                            : 2
                                                                                                                                                                    );
                                                                                                                                                                }
                                                                                                                                                                function E(t, e) {
                                                                                                                                                                    for (var r, i, n; ; ) {
                                                                                                                                                                        if (t.lookahead < p) {
                                                                                                                                                                            if ((w(t), t.lookahead < p && 0 === e)) return 1;
                                                                                                                                                                            if (0 === t.lookahead) break;
                                                                                                                                                                        }
                                                                                                                                                                        if (
                                                                                                                                                                            ((r = 0),
                                                                                                                                                                            t.lookahead >= 3 &&
                                                                                                                                                                                ((t.ins_h =
                                                                                                                                                                                    ((t.ins_h << t.hash_shift) ^ t.window[t.strstart + 3 - 1]) &
                                                                                                                                                                                    t.hash_mask),
                                                                                                                                                                                (r = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h]),
                                                                                                                                                                                (t.head[t.ins_h] = t.strstart)),
                                                                                                                                                                            (t.prev_length = t.match_length),
                                                                                                                                                                            (t.prev_match = t.match_start),
                                                                                                                                                                            (t.match_length = 2),
                                                                                                                                                                            0 !== r &&
                                                                                                                                                                                t.prev_length < t.max_lazy_match &&
                                                                                                                                                                                t.strstart - r <= t.w_size - p &&
                                                                                                                                                                                ((t.match_length = _(t, r)),
                                                                                                                                                                                t.match_length <= 5 &&
                                                                                                                                                                                    (1 === t.strategy ||
                                                                                                                                                                                        (3 === t.match_length &&
                                                                                                                                                                                            4096 < t.strstart - t.match_start)) &&
                                                                                                                                                                                    (t.match_length = 2)),
                                                                                                                                                                            t.prev_length >= 3 && t.match_length <= t.prev_length)
                                                                                                                                                                        ) {
                                                                                                                                                                            for (
                                                                                                                                                                                n = t.strstart + t.lookahead - 3,
                                                                                                                                                                                    i = s._tr_tally(
                                                                                                                                                                                        t,
                                                                                                                                                                                        t.strstart - 1 - t.prev_match,
                                                                                                                                                                                        t.prev_length - 3
                                                                                                                                                                                    ),
                                                                                                                                                                                    t.lookahead -= t.prev_length - 1,
                                                                                                                                                                                    t.prev_length -= 2;
                                                                                                                                                                                ++t.strstart <= n &&
                                                                                                                                                                                    ((t.ins_h =
                                                                                                                                                                                        ((t.ins_h << t.hash_shift) ^
                                                                                                                                                                                            t.window[t.strstart + 3 - 1]) &
                                                                                                                                                                                        t.hash_mask),
                                                                                                                                                                                    (r = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h]),
                                                                                                                                                                                    (t.head[t.ins_h] = t.strstart)),
                                                                                                                                                                                    0 != --t.prev_length;

                                                                                                                                                                            );
                                                                                                                                                                            if (
                                                                                                                                                                                ((t.match_available = 0),
                                                                                                                                                                                (t.match_length = 2),
                                                                                                                                                                                t.strstart++,
                                                                                                                                                                                i && (g(t, !1), 0 === t.strm.avail_out))
                                                                                                                                                                            )
                                                                                                                                                                                return 1;
                                                                                                                                                                        } else if (t.match_available) {
                                                                                                                                                                            if (
                                                                                                                                                                                ((i = s._tr_tally(t, 0, t.window[t.strstart - 1])) && g(t, !1),
                                                                                                                                                                                t.strstart++,
                                                                                                                                                                                t.lookahead--,
                                                                                                                                                                                0 === t.strm.avail_out)
                                                                                                                                                                            )
                                                                                                                                                                                return 1;
                                                                                                                                                                        } else (t.match_available = 1), t.strstart++, t.lookahead--;
                                                                                                                                                                    }
                                                                                                                                                                    return (
                                                                                                                                                                        t.match_available &&
                                                                                                                                                                            ((i = s._tr_tally(t, 0, t.window[t.strstart - 1])),
                                                                                                                                                                            (t.match_available = 0)),
                                                                                                                                                                        (t.insert = t.strstart < 2 ? t.strstart : 2),
                                                                                                                                                                        4 === e
                                                                                                                                                                            ? (g(t, !0), 0 === t.strm.avail_out ? 3 : 4)
                                                                                                                                                                            : t.last_lit && (g(t, !1), 0 === t.strm.avail_out)
                                                                                                                                                                            ? 1
                                                                                                                                                                            : 2
                                                                                                                                                                    );
                                                                                                                                                                }
                                                                                                                                                                function P(t, e, r, i, n) {
                                                                                                                                                                    (this.good_length = t),
                                                                                                                                                                        (this.max_lazy = e),
                                                                                                                                                                        (this.nice_length = r),
                                                                                                                                                                        (this.max_chain = i),
                                                                                                                                                                        (this.func = n);
                                                                                                                                                                }
                                                                                                                                                                function x() {
                                                                                                                                                                    (this.strm = null),
                                                                                                                                                                        (this.status = 0),
                                                                                                                                                                        (this.pending_buf = null),
                                                                                                                                                                        (this.pending_buf_size = 0),
                                                                                                                                                                        (this.pending_out = 0),
                                                                                                                                                                        (this.pending = 0),
                                                                                                                                                                        (this.wrap = 0),
                                                                                                                                                                        (this.gzhead = null),
                                                                                                                                                                        (this.gzindex = 0),
                                                                                                                                                                        (this.method = 8),
                                                                                                                                                                        (this.last_flush = -1),
                                                                                                                                                                        (this.w_size = 0),
                                                                                                                                                                        (this.w_bits = 0),
                                                                                                                                                                        (this.w_mask = 0),
                                                                                                                                                                        (this.window = null),
                                                                                                                                                                        (this.window_size = 0),
                                                                                                                                                                        (this.prev = null),
                                                                                                                                                                        (this.head = null),
                                                                                                                                                                        (this.ins_h = 0),
                                                                                                                                                                        (this.hash_size = 0),
                                                                                                                                                                        (this.hash_bits = 0),
                                                                                                                                                                        (this.hash_mask = 0),
                                                                                                                                                                        (this.hash_shift = 0),
                                                                                                                                                                        (this.block_start = 0),
                                                                                                                                                                        (this.match_length = 0),
                                                                                                                                                                        (this.prev_match = 0),
                                                                                                                                                                        (this.match_available = 0),
                                                                                                                                                                        (this.strstart = 0),
                                                                                                                                                                        (this.match_start = 0),
                                                                                                                                                                        (this.lookahead = 0),
                                                                                                                                                                        (this.prev_length = 0),
                                                                                                                                                                        (this.max_chain_length = 0),
                                                                                                                                                                        (this.max_lazy_match = 0),
                                                                                                                                                                        (this.level = 0),
                                                                                                                                                                        (this.strategy = 0),
                                                                                                                                                                        (this.good_match = 0),
                                                                                                                                                                        (this.nice_match = 0),
                                                                                                                                                                        (this.dyn_ltree = new n.Buf16(1146)),
                                                                                                                                                                        (this.dyn_dtree = new n.Buf16(122)),
                                                                                                                                                                        (this.bl_tree = new n.Buf16(78)),
                                                                                                                                                                        m(this.dyn_ltree),
                                                                                                                                                                        m(this.dyn_dtree),
                                                                                                                                                                        m(this.bl_tree),
                                                                                                                                                                        (this.l_desc = null),
                                                                                                                                                                        (this.d_desc = null),
                                                                                                                                                                        (this.bl_desc = null),
                                                                                                                                                                        (this.bl_count = new n.Buf16(16)),
                                                                                                                                                                        (this.heap = new n.Buf16(573)),
                                                                                                                                                                        m(this.heap),
                                                                                                                                                                        (this.heap_len = 0),
                                                                                                                                                                        (this.heap_max = 0),
                                                                                                                                                                        (this.depth = new n.Buf16(573)),
                                                                                                                                                                        m(this.depth),
                                                                                                                                                                        (this.l_buf = 0),
                                                                                                                                                                        (this.lit_bufsize = 0),
                                                                                                                                                                        (this.last_lit = 0),
                                                                                                                                                                        (this.d_buf = 0),
                                                                                                                                                                        (this.opt_len = 0),
                                                                                                                                                                        (this.static_len = 0),
                                                                                                                                                                        (this.matches = 0),
                                                                                                                                                                        (this.insert = 0),
                                                                                                                                                                        (this.bi_buf = 0),
                                                                                                                                                                        (this.bi_valid = 0);
                                                                                                                                                                }
                                                                                                                                                                function k(t) {
                                                                                                                                                                    var e;
                                                                                                                                                                    return t && t.state
                                                                                                                                                                        ? ((t.total_in = t.total_out = 0),
                                                                                                                                                                          (t.data_type = 2),
                                                                                                                                                                          ((e = t.state).pending = 0),
                                                                                                                                                                          (e.pending_out = 0),
                                                                                                                                                                          e.wrap < 0 && (e.wrap = -e.wrap),
                                                                                                                                                                          (e.status = e.wrap ? 42 : d),
                                                                                                                                                                          (t.adler = 2 === e.wrap ? 0 : 1),
                                                                                                                                                                          (e.last_flush = 0),
                                                                                                                                                                          s._tr_init(e),
                                                                                                                                                                          0)
                                                                                                                                                                        : u(t, h);
                                                                                                                                                                }
                                                                                                                                                                function A(t) {
                                                                                                                                                                    var e,
                                                                                                                                                                        r = k(t);
                                                                                                                                                                    return (
                                                                                                                                                                        0 === r &&
                                                                                                                                                                            (((e = t.state).window_size = 2 * e.w_size),
                                                                                                                                                                            m(e.head),
                                                                                                                                                                            (e.max_lazy_match = i[e.level].max_lazy),
                                                                                                                                                                            (e.good_match = i[e.level].good_length),
                                                                                                                                                                            (e.nice_match = i[e.level].nice_length),
                                                                                                                                                                            (e.max_chain_length = i[e.level].max_chain),
                                                                                                                                                                            (e.strstart = 0),
                                                                                                                                                                            (e.block_start = 0),
                                                                                                                                                                            (e.lookahead = 0),
                                                                                                                                                                            (e.insert = 0),
                                                                                                                                                                            (e.match_length = e.prev_length = 2),
                                                                                                                                                                            (e.match_available = 0),
                                                                                                                                                                            (e.ins_h = 0)),
                                                                                                                                                                        r
                                                                                                                                                                    );
                                                                                                                                                                }
                                                                                                                                                                function T(t, e, r, i, s, a) {
                                                                                                                                                                    if (!t) return h;
                                                                                                                                                                    var o = 1;
                                                                                                                                                                    if (
                                                                                                                                                                        (-1 === e && (e = 6),
                                                                                                                                                                        i < 0 ? ((o = 0), (i = -i)) : 15 < i && ((o = 2), (i -= 16)),
                                                                                                                                                                        s < 1 ||
                                                                                                                                                                            9 < s ||
                                                                                                                                                                            8 !== r ||
                                                                                                                                                                            i < 8 ||
                                                                                                                                                                            15 < i ||
                                                                                                                                                                            e < 0 ||
                                                                                                                                                                            9 < e ||
                                                                                                                                                                            a < 0 ||
                                                                                                                                                                            4 < a)
                                                                                                                                                                    )
                                                                                                                                                                        return u(t, h);
                                                                                                                                                                    8 === i && (i = 9);
                                                                                                                                                                    var l = new x();
                                                                                                                                                                    return (
                                                                                                                                                                        ((t.state = l).strm = t),
                                                                                                                                                                        (l.wrap = o),
                                                                                                                                                                        (l.gzhead = null),
                                                                                                                                                                        (l.w_bits = i),
                                                                                                                                                                        (l.w_size = 1 << l.w_bits),
                                                                                                                                                                        (l.w_mask = l.w_size - 1),
                                                                                                                                                                        (l.hash_bits = s + 7),
                                                                                                                                                                        (l.hash_size = 1 << l.hash_bits),
                                                                                                                                                                        (l.hash_mask = l.hash_size - 1),
                                                                                                                                                                        (l.hash_shift = ~~((l.hash_bits + 3 - 1) / 3)),
                                                                                                                                                                        (l.window = new n.Buf8(2 * l.w_size)),
                                                                                                                                                                        (l.head = new n.Buf16(l.hash_size)),
                                                                                                                                                                        (l.prev = new n.Buf16(l.w_size)),
                                                                                                                                                                        (l.lit_bufsize = 1 << (s + 6)),
                                                                                                                                                                        (l.pending_buf_size = 4 * l.lit_bufsize),
                                                                                                                                                                        (l.pending_buf = new n.Buf8(l.pending_buf_size)),
                                                                                                                                                                        (l.d_buf = 1 * l.lit_bufsize),
                                                                                                                                                                        (l.l_buf = 3 * l.lit_bufsize),
                                                                                                                                                                        (l.level = e),
                                                                                                                                                                        (l.strategy = a),
                                                                                                                                                                        (l.method = r),
                                                                                                                                                                        A(t)
                                                                                                                                                                    );
                                                                                                                                                                }
                                                                                                                                                                (i = [
                                                                                                                                                                    new P(0, 0, 0, 0, function (t, e) {
                                                                                                                                                                        var r = 65535;
                                                                                                                                                                        for (r > t.pending_buf_size - 5 && (r = t.pending_buf_size - 5); ; ) {
                                                                                                                                                                            if (t.lookahead <= 1) {
                                                                                                                                                                                if ((w(t), 0 === t.lookahead && 0 === e)) return 1;
                                                                                                                                                                                if (0 === t.lookahead) break;
                                                                                                                                                                            }
                                                                                                                                                                            (t.strstart += t.lookahead), (t.lookahead = 0);
                                                                                                                                                                            var i = t.block_start + r;
                                                                                                                                                                            if (
                                                                                                                                                                                (0 === t.strstart || t.strstart >= i) &&
                                                                                                                                                                                ((t.lookahead = t.strstart - i),
                                                                                                                                                                                (t.strstart = i),
                                                                                                                                                                                g(t, !1),
                                                                                                                                                                                0 === t.strm.avail_out)
                                                                                                                                                                            )
                                                                                                                                                                                return 1;
                                                                                                                                                                            if (
                                                                                                                                                                                t.strstart - t.block_start >= t.w_size - p &&
                                                                                                                                                                                (g(t, !1), 0 === t.strm.avail_out)
                                                                                                                                                                            )
                                                                                                                                                                                return 1;
                                                                                                                                                                        }
                                                                                                                                                                        return (
                                                                                                                                                                            (t.insert = 0),
                                                                                                                                                                            4 === e
                                                                                                                                                                                ? (g(t, !0), 0 === t.strm.avail_out ? 3 : 4)
                                                                                                                                                                                : (t.strstart > t.block_start && (g(t, !1), t.strm.avail_out),
                                                                                                                                                                                  1)
                                                                                                                                                                        );
                                                                                                                                                                    }),
                                                                                                                                                                    new P(4, 4, 8, 4, S),
                                                                                                                                                                    new P(4, 5, 16, 8, S),
                                                                                                                                                                    new P(4, 6, 32, 32, S),
                                                                                                                                                                    new P(4, 4, 16, 16, E),
                                                                                                                                                                    new P(8, 16, 32, 32, E),
                                                                                                                                                                    new P(8, 16, 128, 128, E),
                                                                                                                                                                    new P(8, 32, 128, 256, E),
                                                                                                                                                                    new P(32, 128, 258, 1024, E),
                                                                                                                                                                    new P(32, 258, 258, 4096, E),
                                                                                                                                                                ]),
                                                                                                                                                                    (r.deflateInit = function (t, e) {
                                                                                                                                                                        return T(t, e, 8, 15, 8, 0);
                                                                                                                                                                    }),
                                                                                                                                                                    (r.deflateInit2 = T),
                                                                                                                                                                    (r.deflateReset = A),
                                                                                                                                                                    (r.deflateResetKeep = k),
                                                                                                                                                                    (r.deflateSetHeader = function (t, e) {
                                                                                                                                                                        return t && t.state
                                                                                                                                                                            ? 2 !== t.state.wrap
                                                                                                                                                                                ? h
                                                                                                                                                                                : ((t.state.gzhead = e), 0)
                                                                                                                                                                            : h;
                                                                                                                                                                    }),
                                                                                                                                                                    (r.deflate = function (t, e) {
                                                                                                                                                                        var r, n, a, l;
                                                                                                                                                                        if (!t || !t.state || 5 < e || e < 0) return t ? u(t, h) : h;
                                                                                                                                                                        if (
                                                                                                                                                                            ((n = t.state),
                                                                                                                                                                            !t.output ||
                                                                                                                                                                                (!t.input && 0 !== t.avail_in) ||
                                                                                                                                                                                (666 === n.status && 4 !== e))
                                                                                                                                                                        )
                                                                                                                                                                            return u(t, 0 === t.avail_out ? -5 : h);
                                                                                                                                                                        if (
                                                                                                                                                                            ((n.strm = t),
                                                                                                                                                                            (r = n.last_flush),
                                                                                                                                                                            (n.last_flush = e),
                                                                                                                                                                            42 === n.status)
                                                                                                                                                                        )
                                                                                                                                                                            if (2 === n.wrap)
                                                                                                                                                                                (t.adler = 0),
                                                                                                                                                                                    v(n, 31),
                                                                                                                                                                                    v(n, 139),
                                                                                                                                                                                    v(n, 8),
                                                                                                                                                                                    n.gzhead
                                                                                                                                                                                        ? (v(
                                                                                                                                                                                              n,
                                                                                                                                                                                              (n.gzhead.text ? 1 : 0) +
                                                                                                                                                                                                  (n.gzhead.hcrc ? 2 : 0) +
                                                                                                                                                                                                  (n.gzhead.extra ? 4 : 0) +
                                                                                                                                                                                                  (n.gzhead.name ? 8 : 0) +
                                                                                                                                                                                                  (n.gzhead.comment ? 16 : 0)
                                                                                                                                                                                          ),
                                                                                                                                                                                          v(n, 255 & n.gzhead.time),
                                                                                                                                                                                          v(n, (n.gzhead.time >> 8) & 255),
                                                                                                                                                                                          v(n, (n.gzhead.time >> 16) & 255),
                                                                                                                                                                                          v(n, (n.gzhead.time >> 24) & 255),
                                                                                                                                                                                          v(
                                                                                                                                                                                              n,
                                                                                                                                                                                              9 === n.level
                                                                                                                                                                                                  ? 2
                                                                                                                                                                                                  : 2 <= n.strategy || n.level < 2
                                                                                                                                                                                                  ? 4
                                                                                                                                                                                                  : 0
                                                                                                                                                                                          ),
                                                                                                                                                                                          v(n, 255 & n.gzhead.os),
                                                                                                                                                                                          n.gzhead.extra &&
                                                                                                                                                                                              n.gzhead.extra.length &&
                                                                                                                                                                                              (v(n, 255 & n.gzhead.extra.length),
                                                                                                                                                                                              v(n, (n.gzhead.extra.length >> 8) & 255)),
                                                                                                                                                                                          n.gzhead.hcrc &&
                                                                                                                                                                                              (t.adler = o(
                                                                                                                                                                                                  t.adler,
                                                                                                                                                                                                  n.pending_buf,
                                                                                                                                                                                                  n.pending,
                                                                                                                                                                                                  0
                                                                                                                                                                                              )),
                                                                                                                                                                                          (n.gzindex = 0),
                                                                                                                                                                                          (n.status = 69))
                                                                                                                                                                                        : (v(n, 0),
                                                                                                                                                                                          v(n, 0),
                                                                                                                                                                                          v(n, 0),
                                                                                                                                                                                          v(n, 0),
                                                                                                                                                                                          v(n, 0),
                                                                                                                                                                                          v(
                                                                                                                                                                                              n,
                                                                                                                                                                                              9 === n.level
                                                                                                                                                                                                  ? 2
                                                                                                                                                                                                  : 2 <= n.strategy || n.level < 2
                                                                                                                                                                                                  ? 4
                                                                                                                                                                                                  : 0
                                                                                                                                                                                          ),
                                                                                                                                                                                          v(n, 3),
                                                                                                                                                                                          (n.status = d));
                                                                                                                                                                            else {
                                                                                                                                                                                var p = (8 + ((n.w_bits - 8) << 4)) << 8;
                                                                                                                                                                                (p |=
                                                                                                                                                                                    (2 <= n.strategy || n.level < 2
                                                                                                                                                                                        ? 0
                                                                                                                                                                                        : n.level < 6
                                                                                                                                                                                        ? 1
                                                                                                                                                                                        : 6 === n.level
                                                                                                                                                                                        ? 2
                                                                                                                                                                                        : 3) << 6),
                                                                                                                                                                                    0 !== n.strstart && (p |= 32),
                                                                                                                                                                                    (p += 31 - (p % 31)),
                                                                                                                                                                                    (n.status = d),
                                                                                                                                                                                    b(n, p),
                                                                                                                                                                                    0 !== n.strstart &&
                                                                                                                                                                                        (b(n, t.adler >>> 16), b(n, 65535 & t.adler)),
                                                                                                                                                                                    (t.adler = 1);
                                                                                                                                                                            }
                                                                                                                                                                        if (69 === n.status)
                                                                                                                                                                            if (n.gzhead.extra) {
                                                                                                                                                                                for (
                                                                                                                                                                                    a = n.pending;
                                                                                                                                                                                    n.gzindex < (65535 & n.gzhead.extra.length) &&
                                                                                                                                                                                    (n.pending !== n.pending_buf_size ||
                                                                                                                                                                                        (n.gzhead.hcrc &&
                                                                                                                                                                                            n.pending > a &&
                                                                                                                                                                                            (t.adler = o(
                                                                                                                                                                                                t.adler,
                                                                                                                                                                                                n.pending_buf,
                                                                                                                                                                                                n.pending - a,
                                                                                                                                                                                                a
                                                                                                                                                                                            )),
                                                                                                                                                                                        y(t),
                                                                                                                                                                                        (a = n.pending),
                                                                                                                                                                                        n.pending !== n.pending_buf_size));

                                                                                                                                                                                )
                                                                                                                                                                                    v(n, 255 & n.gzhead.extra[n.gzindex]), n.gzindex++;
                                                                                                                                                                                n.gzhead.hcrc &&
                                                                                                                                                                                    n.pending > a &&
                                                                                                                                                                                    (t.adler = o(t.adler, n.pending_buf, n.pending - a, a)),
                                                                                                                                                                                    n.gzindex === n.gzhead.extra.length &&
                                                                                                                                                                                        ((n.gzindex = 0), (n.status = 73));
                                                                                                                                                                            } else n.status = 73;
                                                                                                                                                                        if (73 === n.status)
                                                                                                                                                                            if (n.gzhead.name) {
                                                                                                                                                                                a = n.pending;
                                                                                                                                                                                do {
                                                                                                                                                                                    if (
                                                                                                                                                                                        n.pending === n.pending_buf_size &&
                                                                                                                                                                                        (n.gzhead.hcrc &&
                                                                                                                                                                                            n.pending > a &&
                                                                                                                                                                                            (t.adler = o(
                                                                                                                                                                                                t.adler,
                                                                                                                                                                                                n.pending_buf,
                                                                                                                                                                                                n.pending - a,
                                                                                                                                                                                                a
                                                                                                                                                                                            )),
                                                                                                                                                                                        y(t),
                                                                                                                                                                                        (a = n.pending),
                                                                                                                                                                                        n.pending === n.pending_buf_size)
                                                                                                                                                                                    ) {
                                                                                                                                                                                        l = 1;
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    (l =
                                                                                                                                                                                        n.gzindex < n.gzhead.name.length
                                                                                                                                                                                            ? 255 & n.gzhead.name.charCodeAt(n.gzindex++)
                                                                                                                                                                                            : 0),
                                                                                                                                                                                        v(n, l);
                                                                                                                                                                                } while (0 !== l);
                                                                                                                                                                                n.gzhead.hcrc &&
                                                                                                                                                                                    n.pending > a &&
                                                                                                                                                                                    (t.adler = o(t.adler, n.pending_buf, n.pending - a, a)),
                                                                                                                                                                                    0 === l && ((n.gzindex = 0), (n.status = 91));
                                                                                                                                                                            } else n.status = 91;
                                                                                                                                                                        if (91 === n.status)
                                                                                                                                                                            if (n.gzhead.comment) {
                                                                                                                                                                                a = n.pending;
                                                                                                                                                                                do {
                                                                                                                                                                                    if (
                                                                                                                                                                                        n.pending === n.pending_buf_size &&
                                                                                                                                                                                        (n.gzhead.hcrc &&
                                                                                                                                                                                            n.pending > a &&
                                                                                                                                                                                            (t.adler = o(
                                                                                                                                                                                                t.adler,
                                                                                                                                                                                                n.pending_buf,
                                                                                                                                                                                                n.pending - a,
                                                                                                                                                                                                a
                                                                                                                                                                                            )),
                                                                                                                                                                                        y(t),
                                                                                                                                                                                        (a = n.pending),
                                                                                                                                                                                        n.pending === n.pending_buf_size)
                                                                                                                                                                                    ) {
                                                                                                                                                                                        l = 1;
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    (l =
                                                                                                                                                                                        n.gzindex < n.gzhead.comment.length
                                                                                                                                                                                            ? 255 & n.gzhead.comment.charCodeAt(n.gzindex++)
                                                                                                                                                                                            : 0),
                                                                                                                                                                                        v(n, l);
                                                                                                                                                                                } while (0 !== l);
                                                                                                                                                                                n.gzhead.hcrc &&
                                                                                                                                                                                    n.pending > a &&
                                                                                                                                                                                    (t.adler = o(t.adler, n.pending_buf, n.pending - a, a)),
                                                                                                                                                                                    0 === l && (n.status = 103);
                                                                                                                                                                            } else n.status = 103;
                                                                                                                                                                        if (
                                                                                                                                                                            (103 === n.status &&
                                                                                                                                                                                (n.gzhead.hcrc
                                                                                                                                                                                    ? (n.pending + 2 > n.pending_buf_size && y(t),
                                                                                                                                                                                      n.pending + 2 <= n.pending_buf_size &&
                                                                                                                                                                                          (v(n, 255 & t.adler),
                                                                                                                                                                                          v(n, (t.adler >> 8) & 255),
                                                                                                                                                                                          (t.adler = 0),
                                                                                                                                                                                          (n.status = d)))
                                                                                                                                                                                    : (n.status = d)),
                                                                                                                                                                            0 !== n.pending)
                                                                                                                                                                        ) {
                                                                                                                                                                            if ((y(t), 0 === t.avail_out)) return (n.last_flush = -1), 0;
                                                                                                                                                                        } else if (0 === t.avail_in && f(e) <= f(r) && 4 !== e) return u(t, -5);
                                                                                                                                                                        if (666 === n.status && 0 !== t.avail_in) return u(t, -5);
                                                                                                                                                                        if (
                                                                                                                                                                            0 !== t.avail_in ||
                                                                                                                                                                            0 !== n.lookahead ||
                                                                                                                                                                            (0 !== e && 666 !== n.status)
                                                                                                                                                                        ) {
                                                                                                                                                                            var _ =
                                                                                                                                                                                2 === n.strategy
                                                                                                                                                                                    ? (function (t, e) {
                                                                                                                                                                                          for (var r; ; ) {
                                                                                                                                                                                              if (
                                                                                                                                                                                                  0 === t.lookahead &&
                                                                                                                                                                                                  (w(t), 0 === t.lookahead)
                                                                                                                                                                                              ) {
                                                                                                                                                                                                  if (0 === e) return 1;
                                                                                                                                                                                                  break;
                                                                                                                                                                                              }
                                                                                                                                                                                              if (
                                                                                                                                                                                                  ((t.match_length = 0),
                                                                                                                                                                                                  (r = s._tr_tally(t, 0, t.window[t.strstart])),
                                                                                                                                                                                                  t.lookahead--,
                                                                                                                                                                                                  t.strstart++,
                                                                                                                                                                                                  r && (g(t, !1), 0 === t.strm.avail_out))
                                                                                                                                                                                              )
                                                                                                                                                                                                  return 1;
                                                                                                                                                                                          }
                                                                                                                                                                                          return (
                                                                                                                                                                                              (t.insert = 0),
                                                                                                                                                                                              4 === e
                                                                                                                                                                                                  ? (g(t, !0), 0 === t.strm.avail_out ? 3 : 4)
                                                                                                                                                                                                  : t.last_lit &&
                                                                                                                                                                                                    (g(t, !1), 0 === t.strm.avail_out)
                                                                                                                                                                                                  ? 1
                                                                                                                                                                                                  : 2
                                                                                                                                                                                          );
                                                                                                                                                                                      })(n, e)
                                                                                                                                                                                    : 3 === n.strategy
                                                                                                                                                                                    ? (function (t, e) {
                                                                                                                                                                                          for (var r, i, n, a, o = t.window; ; ) {
                                                                                                                                                                                              if (t.lookahead <= c) {
                                                                                                                                                                                                  if ((w(t), t.lookahead <= c && 0 === e))
                                                                                                                                                                                                      return 1;
                                                                                                                                                                                                  if (0 === t.lookahead) break;
                                                                                                                                                                                              }
                                                                                                                                                                                              if (
                                                                                                                                                                                                  ((t.match_length = 0),
                                                                                                                                                                                                  t.lookahead >= 3 &&
                                                                                                                                                                                                      0 < t.strstart &&
                                                                                                                                                                                                      (i = o[(n = t.strstart - 1)]) ===
                                                                                                                                                                                                          o[++n] &&
                                                                                                                                                                                                      i === o[++n] &&
                                                                                                                                                                                                      i === o[++n])
                                                                                                                                                                                              ) {
                                                                                                                                                                                                  a = t.strstart + c;
                                                                                                                                                                                                  do {} while (
                                                                                                                                                                                                      i === o[++n] &&
                                                                                                                                                                                                      i === o[++n] &&
                                                                                                                                                                                                      i === o[++n] &&
                                                                                                                                                                                                      i === o[++n] &&
                                                                                                                                                                                                      i === o[++n] &&
                                                                                                                                                                                                      i === o[++n] &&
                                                                                                                                                                                                      i === o[++n] &&
                                                                                                                                                                                                      i === o[++n] &&
                                                                                                                                                                                                      n < a
                                                                                                                                                                                                  );
                                                                                                                                                                                                  (t.match_length = c - (a - n)),
                                                                                                                                                                                                      t.match_length > t.lookahead &&
                                                                                                                                                                                                          (t.match_length = t.lookahead);
                                                                                                                                                                                              }
                                                                                                                                                                                              if (
                                                                                                                                                                                                  (t.match_length >= 3
                                                                                                                                                                                                      ? ((r = s._tr_tally(
                                                                                                                                                                                                            t,
                                                                                                                                                                                                            1,
                                                                                                                                                                                                            t.match_length - 3
                                                                                                                                                                                                        )),
                                                                                                                                                                                                        (t.lookahead -= t.match_length),
                                                                                                                                                                                                        (t.strstart += t.match_length),
                                                                                                                                                                                                        (t.match_length = 0))
                                                                                                                                                                                                      : ((r = s._tr_tally(
                                                                                                                                                                                                            t,
                                                                                                                                                                                                            0,
                                                                                                                                                                                                            t.window[t.strstart]
                                                                                                                                                                                                        )),
                                                                                                                                                                                                        t.lookahead--,
                                                                                                                                                                                                        t.strstart++),
                                                                                                                                                                                                  r && (g(t, !1), 0 === t.strm.avail_out))
                                                                                                                                                                                              )
                                                                                                                                                                                                  return 1;
                                                                                                                                                                                          }
                                                                                                                                                                                          return (
                                                                                                                                                                                              (t.insert = 0),
                                                                                                                                                                                              4 === e
                                                                                                                                                                                                  ? (g(t, !0), 0 === t.strm.avail_out ? 3 : 4)
                                                                                                                                                                                                  : t.last_lit &&
                                                                                                                                                                                                    (g(t, !1), 0 === t.strm.avail_out)
                                                                                                                                                                                                  ? 1
                                                                                                                                                                                                  : 2
                                                                                                                                                                                          );
                                                                                                                                                                                      })(n, e)
                                                                                                                                                                                    : i[n.level].func(n, e);
                                                                                                                                                                            if (((3 !== _ && 4 !== _) || (n.status = 666), 1 === _ || 3 === _))
                                                                                                                                                                                return 0 === t.avail_out && (n.last_flush = -1), 0;
                                                                                                                                                                            if (
                                                                                                                                                                                2 === _ &&
                                                                                                                                                                                (1 === e
                                                                                                                                                                                    ? s._tr_align(n)
                                                                                                                                                                                    : 5 !== e &&
                                                                                                                                                                                      (s._tr_stored_block(n, 0, 0, !1),
                                                                                                                                                                                      3 === e &&
                                                                                                                                                                                          (m(n.head),
                                                                                                                                                                                          0 === n.lookahead &&
                                                                                                                                                                                              ((n.strstart = 0),
                                                                                                                                                                                              (n.block_start = 0),
                                                                                                                                                                                              (n.insert = 0)))),
                                                                                                                                                                                y(t),
                                                                                                                                                                                0 === t.avail_out)
                                                                                                                                                                            )
                                                                                                                                                                                return (n.last_flush = -1), 0;
                                                                                                                                                                        }
                                                                                                                                                                        return 4 !== e
                                                                                                                                                                            ? 0
                                                                                                                                                                            : n.wrap <= 0
                                                                                                                                                                            ? 1
                                                                                                                                                                            : (2 === n.wrap
                                                                                                                                                                                  ? (v(n, 255 & t.adler),
                                                                                                                                                                                    v(n, (t.adler >> 8) & 255),
                                                                                                                                                                                    v(n, (t.adler >> 16) & 255),
                                                                                                                                                                                    v(n, (t.adler >> 24) & 255),
                                                                                                                                                                                    v(n, 255 & t.total_in),
                                                                                                                                                                                    v(n, (t.total_in >> 8) & 255),
                                                                                                                                                                                    v(n, (t.total_in >> 16) & 255),
                                                                                                                                                                                    v(n, (t.total_in >> 24) & 255))
                                                                                                                                                                                  : (b(n, t.adler >>> 16), b(n, 65535 & t.adler)),
                                                                                                                                                                              y(t),
                                                                                                                                                                              0 < n.wrap && (n.wrap = -n.wrap),
                                                                                                                                                                              0 !== n.pending ? 0 : 1);
                                                                                                                                                                    }),
                                                                                                                                                                    (r.deflateEnd = function (t) {
                                                                                                                                                                        var e;
                                                                                                                                                                        return t && t.state
                                                                                                                                                                            ? 42 !== (e = t.state.status) &&
                                                                                                                                                                              69 !== e &&
                                                                                                                                                                              73 !== e &&
                                                                                                                                                                              91 !== e &&
                                                                                                                                                                              103 !== e &&
                                                                                                                                                                              e !== d &&
                                                                                                                                                                              666 !== e
                                                                                                                                                                                ? u(t, h)
                                                                                                                                                                                : ((t.state = null), e === d ? u(t, -3) : 0)
                                                                                                                                                                            : h;
                                                                                                                                                                    }),
                                                                                                                                                                    (r.deflateSetDictionary = function (t, e) {
                                                                                                                                                                        var r,
                                                                                                                                                                            i,
                                                                                                                                                                            s,
                                                                                                                                                                            o,
                                                                                                                                                                            l,
                                                                                                                                                                            c,
                                                                                                                                                                            p,
                                                                                                                                                                            d,
                                                                                                                                                                            u = e.length;
                                                                                                                                                                        if (!t || !t.state) return h;
                                                                                                                                                                        if (
                                                                                                                                                                            2 === (o = (r = t.state).wrap) ||
                                                                                                                                                                            (1 === o && 42 !== r.status) ||
                                                                                                                                                                            r.lookahead
                                                                                                                                                                        )
                                                                                                                                                                            return h;
                                                                                                                                                                        for (
                                                                                                                                                                            1 === o && (t.adler = a(t.adler, e, u, 0)),
                                                                                                                                                                                r.wrap = 0,
                                                                                                                                                                                u >= r.w_size &&
                                                                                                                                                                                    (0 === o &&
                                                                                                                                                                                        (m(r.head),
                                                                                                                                                                                        (r.strstart = 0),
                                                                                                                                                                                        (r.block_start = 0),
                                                                                                                                                                                        (r.insert = 0)),
                                                                                                                                                                                    (d = new n.Buf8(r.w_size)),
                                                                                                                                                                                    n.arraySet(d, e, u - r.w_size, r.w_size, 0),
                                                                                                                                                                                    (e = d),
                                                                                                                                                                                    (u = r.w_size)),
                                                                                                                                                                                l = t.avail_in,
                                                                                                                                                                                c = t.next_in,
                                                                                                                                                                                p = t.input,
                                                                                                                                                                                t.avail_in = u,
                                                                                                                                                                                t.next_in = 0,
                                                                                                                                                                                t.input = e,
                                                                                                                                                                                w(r);
                                                                                                                                                                            r.lookahead >= 3;

                                                                                                                                                                        ) {
                                                                                                                                                                            for (
                                                                                                                                                                                i = r.strstart, s = r.lookahead - 2;
                                                                                                                                                                                (r.ins_h =
                                                                                                                                                                                    ((r.ins_h << r.hash_shift) ^ r.window[i + 3 - 1]) &
                                                                                                                                                                                    r.hash_mask),
                                                                                                                                                                                    (r.prev[i & r.w_mask] = r.head[r.ins_h]),
                                                                                                                                                                                    (r.head[r.ins_h] = i),
                                                                                                                                                                                    i++,
                                                                                                                                                                                    --s;

                                                                                                                                                                            );
                                                                                                                                                                            (r.strstart = i), (r.lookahead = 2), w(r);
                                                                                                                                                                        }
                                                                                                                                                                        return (
                                                                                                                                                                            (r.strstart += r.lookahead),
                                                                                                                                                                            (r.block_start = r.strstart),
                                                                                                                                                                            (r.insert = r.lookahead),
                                                                                                                                                                            (r.lookahead = 0),
                                                                                                                                                                            (r.match_length = r.prev_length = 2),
                                                                                                                                                                            (r.match_available = 0),
                                                                                                                                                                            (t.next_in = c),
                                                                                                                                                                            (t.input = p),
                                                                                                                                                                            (t.avail_in = l),
                                                                                                                                                                            (r.wrap = o),
                                                                                                                                                                            0
                                                                                                                                                                        );
                                                                                                                                                                    }),
                                                                                                                                                                    (r.deflateInfo = "pako deflate (from Nodeca project)");
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "../utils/common": 41,
                                                                                                                                                                "./adler32": 43,
                                                                                                                                                                "./crc32": 45,
                                                                                                                                                                "./messages": 51,
                                                                                                                                                                "./trees": 52,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                        47: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                e.exports = function () {
                                                                                                                                                                    (this.text = 0),
                                                                                                                                                                        (this.time = 0),
                                                                                                                                                                        (this.xflags = 0),
                                                                                                                                                                        (this.os = 0),
                                                                                                                                                                        (this.extra = null),
                                                                                                                                                                        (this.extra_len = 0),
                                                                                                                                                                        (this.name = ""),
                                                                                                                                                                        (this.comment = ""),
                                                                                                                                                                        (this.hcrc = 0),
                                                                                                                                                                        (this.done = !1);
                                                                                                                                                                };
                                                                                                                                                            },
                                                                                                                                                            {},
                                                                                                                                                        ],
                                                                                                                                                        48: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                e.exports = function (t, e) {
                                                                                                                                                                    var r,
                                                                                                                                                                        i,
                                                                                                                                                                        n,
                                                                                                                                                                        s,
                                                                                                                                                                        a,
                                                                                                                                                                        o,
                                                                                                                                                                        l,
                                                                                                                                                                        h,
                                                                                                                                                                        c,
                                                                                                                                                                        p,
                                                                                                                                                                        d,
                                                                                                                                                                        u,
                                                                                                                                                                        f,
                                                                                                                                                                        m,
                                                                                                                                                                        y,
                                                                                                                                                                        g,
                                                                                                                                                                        v,
                                                                                                                                                                        b,
                                                                                                                                                                        _,
                                                                                                                                                                        w,
                                                                                                                                                                        S,
                                                                                                                                                                        E,
                                                                                                                                                                        P,
                                                                                                                                                                        x,
                                                                                                                                                                        k;
                                                                                                                                                                    (r = t.state),
                                                                                                                                                                        (i = t.next_in),
                                                                                                                                                                        (x = t.input),
                                                                                                                                                                        (n = i + (t.avail_in - 5)),
                                                                                                                                                                        (s = t.next_out),
                                                                                                                                                                        (k = t.output),
                                                                                                                                                                        (a = s - (e - t.avail_out)),
                                                                                                                                                                        (o = s + (t.avail_out - 257)),
                                                                                                                                                                        (l = r.dmax),
                                                                                                                                                                        (h = r.wsize),
                                                                                                                                                                        (c = r.whave),
                                                                                                                                                                        (p = r.wnext),
                                                                                                                                                                        (d = r.window),
                                                                                                                                                                        (u = r.hold),
                                                                                                                                                                        (f = r.bits),
                                                                                                                                                                        (m = r.lencode),
                                                                                                                                                                        (y = r.distcode),
                                                                                                                                                                        (g = (1 << r.lenbits) - 1),
                                                                                                                                                                        (v = (1 << r.distbits) - 1);
                                                                                                                                                                    t: do {
                                                                                                                                                                        f < 15 && ((u += x[i++] << f), (f += 8), (u += x[i++] << f), (f += 8)),
                                                                                                                                                                            (b = m[u & g]);
                                                                                                                                                                        e: for (;;) {
                                                                                                                                                                            if (((u >>>= _ = b >>> 24), (f -= _), 0 == (_ = (b >>> 16) & 255)))
                                                                                                                                                                                k[s++] = 65535 & b;
                                                                                                                                                                            else {
                                                                                                                                                                                if (!(16 & _)) {
                                                                                                                                                                                    if (0 == (64 & _)) {
                                                                                                                                                                                        b = m[(65535 & b) + (u & ((1 << _) - 1))];
                                                                                                                                                                                        continue e;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (32 & _) {
                                                                                                                                                                                        r.mode = 12;
                                                                                                                                                                                        break t;
                                                                                                                                                                                    }
                                                                                                                                                                                    (t.msg = "invalid literal/length code"), (r.mode = 30);
                                                                                                                                                                                    break t;
                                                                                                                                                                                }
                                                                                                                                                                                (w = 65535 & b),
                                                                                                                                                                                    (_ &= 15) &&
                                                                                                                                                                                        (f < _ && ((u += x[i++] << f), (f += 8)),
                                                                                                                                                                                        (w += u & ((1 << _) - 1)),
                                                                                                                                                                                        (u >>>= _),
                                                                                                                                                                                        (f -= _)),
                                                                                                                                                                                    f < 15 &&
                                                                                                                                                                                        ((u += x[i++] << f),
                                                                                                                                                                                        (f += 8),
                                                                                                                                                                                        (u += x[i++] << f),
                                                                                                                                                                                        (f += 8)),
                                                                                                                                                                                    (b = y[u & v]);
                                                                                                                                                                                r: for (;;) {
                                                                                                                                                                                    if (
                                                                                                                                                                                        ((u >>>= _ = b >>> 24),
                                                                                                                                                                                        (f -= _),
                                                                                                                                                                                        !(16 & (_ = (b >>> 16) & 255)))
                                                                                                                                                                                    ) {
                                                                                                                                                                                        if (0 == (64 & _)) {
                                                                                                                                                                                            b = y[(65535 & b) + (u & ((1 << _) - 1))];
                                                                                                                                                                                            continue r;
                                                                                                                                                                                        }
                                                                                                                                                                                        (t.msg = "invalid distance code"), (r.mode = 30);
                                                                                                                                                                                        break t;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (
                                                                                                                                                                                        ((S = 65535 & b),
                                                                                                                                                                                        f < (_ &= 15) &&
                                                                                                                                                                                            ((u += x[i++] << f),
                                                                                                                                                                                            (f += 8) < _ && ((u += x[i++] << f), (f += 8))),
                                                                                                                                                                                        l < (S += u & ((1 << _) - 1)))
                                                                                                                                                                                    ) {
                                                                                                                                                                                        (t.msg = "invalid distance too far back"),
                                                                                                                                                                                            (r.mode = 30);
                                                                                                                                                                                        break t;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (((u >>>= _), (f -= _), (_ = s - a) < S)) {
                                                                                                                                                                                        if (c < (_ = S - _) && r.sane) {
                                                                                                                                                                                            (t.msg = "invalid distance too far back"),
                                                                                                                                                                                                (r.mode = 30);
                                                                                                                                                                                            break t;
                                                                                                                                                                                        }
                                                                                                                                                                                        if (((P = d), (E = 0) === p)) {
                                                                                                                                                                                            if (((E += h - _), _ < w)) {
                                                                                                                                                                                                for (w -= _; (k[s++] = d[E++]), --_; );
                                                                                                                                                                                                (E = s - S), (P = k);
                                                                                                                                                                                            }
                                                                                                                                                                                        } else if (p < _) {
                                                                                                                                                                                            if (((E += h + p - _), (_ -= p) < w)) {
                                                                                                                                                                                                for (w -= _; (k[s++] = d[E++]), --_; );
                                                                                                                                                                                                if (((E = 0), p < w)) {
                                                                                                                                                                                                    for (w -= _ = p; (k[s++] = d[E++]), --_; );
                                                                                                                                                                                                    (E = s - S), (P = k);
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        } else if (((E += p - _), _ < w)) {
                                                                                                                                                                                            for (w -= _; (k[s++] = d[E++]), --_; );
                                                                                                                                                                                            (E = s - S), (P = k);
                                                                                                                                                                                        }
                                                                                                                                                                                        for (; 2 < w; )
                                                                                                                                                                                            (k[s++] = P[E++]),
                                                                                                                                                                                                (k[s++] = P[E++]),
                                                                                                                                                                                                (k[s++] = P[E++]),
                                                                                                                                                                                                (w -= 3);
                                                                                                                                                                                        w && ((k[s++] = P[E++]), 1 < w && (k[s++] = P[E++]));
                                                                                                                                                                                    } else {
                                                                                                                                                                                        for (
                                                                                                                                                                                            E = s - S;
                                                                                                                                                                                            (k[s++] = k[E++]),
                                                                                                                                                                                                (k[s++] = k[E++]),
                                                                                                                                                                                                (k[s++] = k[E++]),
                                                                                                                                                                                                2 < (w -= 3);

                                                                                                                                                                                        );
                                                                                                                                                                                        w && ((k[s++] = k[E++]), 1 < w && (k[s++] = k[E++]));
                                                                                                                                                                                    }
                                                                                                                                                                                    break;
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                            break;
                                                                                                                                                                        }
                                                                                                                                                                    } while (i < n && s < o);
                                                                                                                                                                    (i -= w = f >> 3),
                                                                                                                                                                        (u &= (1 << (f -= w << 3)) - 1),
                                                                                                                                                                        (t.next_in = i),
                                                                                                                                                                        (t.next_out = s),
                                                                                                                                                                        (t.avail_in = i < n ? n - i + 5 : 5 - (i - n)),
                                                                                                                                                                        (t.avail_out = s < o ? o - s + 257 : 257 - (s - o)),
                                                                                                                                                                        (r.hold = u),
                                                                                                                                                                        (r.bits = f);
                                                                                                                                                                };
                                                                                                                                                            },
                                                                                                                                                            {},
                                                                                                                                                        ],
                                                                                                                                                        49: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("../utils/common"),
                                                                                                                                                                    n = t("./adler32"),
                                                                                                                                                                    s = t("./crc32"),
                                                                                                                                                                    a = t("./inffast"),
                                                                                                                                                                    o = t("./inftrees"),
                                                                                                                                                                    l = -2;
                                                                                                                                                                function h(t) {
                                                                                                                                                                    return (
                                                                                                                                                                        ((t >>> 24) & 255) +
                                                                                                                                                                        ((t >>> 8) & 65280) +
                                                                                                                                                                        ((65280 & t) << 8) +
                                                                                                                                                                        ((255 & t) << 24)
                                                                                                                                                                    );
                                                                                                                                                                }
                                                                                                                                                                function c() {
                                                                                                                                                                    (this.mode = 0),
                                                                                                                                                                        (this.last = !1),
                                                                                                                                                                        (this.wrap = 0),
                                                                                                                                                                        (this.havedict = !1),
                                                                                                                                                                        (this.flags = 0),
                                                                                                                                                                        (this.dmax = 0),
                                                                                                                                                                        (this.check = 0),
                                                                                                                                                                        (this.total = 0),
                                                                                                                                                                        (this.head = null),
                                                                                                                                                                        (this.wbits = 0),
                                                                                                                                                                        (this.wsize = 0),
                                                                                                                                                                        (this.whave = 0),
                                                                                                                                                                        (this.wnext = 0),
                                                                                                                                                                        (this.window = null),
                                                                                                                                                                        (this.hold = 0),
                                                                                                                                                                        (this.bits = 0),
                                                                                                                                                                        (this.length = 0),
                                                                                                                                                                        (this.offset = 0),
                                                                                                                                                                        (this.extra = 0),
                                                                                                                                                                        (this.lencode = null),
                                                                                                                                                                        (this.distcode = null),
                                                                                                                                                                        (this.lenbits = 0),
                                                                                                                                                                        (this.distbits = 0),
                                                                                                                                                                        (this.ncode = 0),
                                                                                                                                                                        (this.nlen = 0),
                                                                                                                                                                        (this.ndist = 0),
                                                                                                                                                                        (this.have = 0),
                                                                                                                                                                        (this.next = null),
                                                                                                                                                                        (this.lens = new i.Buf16(320)),
                                                                                                                                                                        (this.work = new i.Buf16(288)),
                                                                                                                                                                        (this.lendyn = null),
                                                                                                                                                                        (this.distdyn = null),
                                                                                                                                                                        (this.sane = 0),
                                                                                                                                                                        (this.back = 0),
                                                                                                                                                                        (this.was = 0);
                                                                                                                                                                }
                                                                                                                                                                function p(t) {
                                                                                                                                                                    var e;
                                                                                                                                                                    return t && t.state
                                                                                                                                                                        ? ((e = t.state),
                                                                                                                                                                          (t.total_in = t.total_out = e.total = 0),
                                                                                                                                                                          (t.msg = ""),
                                                                                                                                                                          e.wrap && (t.adler = 1 & e.wrap),
                                                                                                                                                                          (e.mode = 1),
                                                                                                                                                                          (e.last = 0),
                                                                                                                                                                          (e.havedict = 0),
                                                                                                                                                                          (e.dmax = 32768),
                                                                                                                                                                          (e.head = null),
                                                                                                                                                                          (e.hold = 0),
                                                                                                                                                                          (e.bits = 0),
                                                                                                                                                                          (e.lencode = e.lendyn = new i.Buf32(852)),
                                                                                                                                                                          (e.distcode = e.distdyn = new i.Buf32(592)),
                                                                                                                                                                          (e.sane = 1),
                                                                                                                                                                          (e.back = -1),
                                                                                                                                                                          0)
                                                                                                                                                                        : l;
                                                                                                                                                                }
                                                                                                                                                                function d(t) {
                                                                                                                                                                    var e;
                                                                                                                                                                    return t && t.state
                                                                                                                                                                        ? (((e = t.state).wsize = 0), (e.whave = 0), (e.wnext = 0), p(t))
                                                                                                                                                                        : l;
                                                                                                                                                                }
                                                                                                                                                                function u(t, e) {
                                                                                                                                                                    var r, i;
                                                                                                                                                                    return t && t.state
                                                                                                                                                                        ? ((i = t.state),
                                                                                                                                                                          e < 0
                                                                                                                                                                              ? ((r = 0), (e = -e))
                                                                                                                                                                              : ((r = 1 + (e >> 4)), e < 48 && (e &= 15)),
                                                                                                                                                                          e && (e < 8 || 15 < e)
                                                                                                                                                                              ? l
                                                                                                                                                                              : (null !== i.window && i.wbits !== e && (i.window = null),
                                                                                                                                                                                (i.wrap = r),
                                                                                                                                                                                (i.wbits = e),
                                                                                                                                                                                d(t)))
                                                                                                                                                                        : l;
                                                                                                                                                                }
                                                                                                                                                                function f(t, e) {
                                                                                                                                                                    var r, i;
                                                                                                                                                                    return t
                                                                                                                                                                        ? ((i = new c()),
                                                                                                                                                                          ((t.state = i).window = null),
                                                                                                                                                                          0 !== (r = u(t, e)) && (t.state = null),
                                                                                                                                                                          r)
                                                                                                                                                                        : l;
                                                                                                                                                                }
                                                                                                                                                                var m,
                                                                                                                                                                    y,
                                                                                                                                                                    g = !0;
                                                                                                                                                                function v(t) {
                                                                                                                                                                    if (g) {
                                                                                                                                                                        var e;
                                                                                                                                                                        for (m = new i.Buf32(512), y = new i.Buf32(32), e = 0; e < 144; )
                                                                                                                                                                            t.lens[e++] = 8;
                                                                                                                                                                        for (; e < 256; ) t.lens[e++] = 9;
                                                                                                                                                                        for (; e < 280; ) t.lens[e++] = 7;
                                                                                                                                                                        for (; e < 288; ) t.lens[e++] = 8;
                                                                                                                                                                        for (o(1, t.lens, 0, 288, m, 0, t.work, { bits: 9 }), e = 0; e < 32; )
                                                                                                                                                                            t.lens[e++] = 5;
                                                                                                                                                                        o(2, t.lens, 0, 32, y, 0, t.work, { bits: 5 }), (g = !1);
                                                                                                                                                                    }
                                                                                                                                                                    (t.lencode = m), (t.lenbits = 9), (t.distcode = y), (t.distbits = 5);
                                                                                                                                                                }
                                                                                                                                                                function b(t, e, r, n) {
                                                                                                                                                                    var s,
                                                                                                                                                                        a = t.state;
                                                                                                                                                                    return (
                                                                                                                                                                        null === a.window &&
                                                                                                                                                                            ((a.wsize = 1 << a.wbits),
                                                                                                                                                                            (a.wnext = 0),
                                                                                                                                                                            (a.whave = 0),
                                                                                                                                                                            (a.window = new i.Buf8(a.wsize))),
                                                                                                                                                                        n >= a.wsize
                                                                                                                                                                            ? (i.arraySet(a.window, e, r - a.wsize, a.wsize, 0),
                                                                                                                                                                              (a.wnext = 0),
                                                                                                                                                                              (a.whave = a.wsize))
                                                                                                                                                                            : (n < (s = a.wsize - a.wnext) && (s = n),
                                                                                                                                                                              i.arraySet(a.window, e, r - n, s, a.wnext),
                                                                                                                                                                              (n -= s)
                                                                                                                                                                                  ? (i.arraySet(a.window, e, r - n, n, 0),
                                                                                                                                                                                    (a.wnext = n),
                                                                                                                                                                                    (a.whave = a.wsize))
                                                                                                                                                                                  : ((a.wnext += s),
                                                                                                                                                                                    a.wnext === a.wsize && (a.wnext = 0),
                                                                                                                                                                                    a.whave < a.wsize && (a.whave += s))),
                                                                                                                                                                        0
                                                                                                                                                                    );
                                                                                                                                                                }
                                                                                                                                                                (r.inflateReset = d),
                                                                                                                                                                    (r.inflateReset2 = u),
                                                                                                                                                                    (r.inflateResetKeep = p),
                                                                                                                                                                    (r.inflateInit = function (t) {
                                                                                                                                                                        return f(t, 15);
                                                                                                                                                                    }),
                                                                                                                                                                    (r.inflateInit2 = f),
                                                                                                                                                                    (r.inflate = function (t, e) {
                                                                                                                                                                        var r,
                                                                                                                                                                            c,
                                                                                                                                                                            p,
                                                                                                                                                                            d,
                                                                                                                                                                            u,
                                                                                                                                                                            f,
                                                                                                                                                                            m,
                                                                                                                                                                            y,
                                                                                                                                                                            g,
                                                                                                                                                                            _,
                                                                                                                                                                            w,
                                                                                                                                                                            S,
                                                                                                                                                                            E,
                                                                                                                                                                            P,
                                                                                                                                                                            x,
                                                                                                                                                                            k,
                                                                                                                                                                            A,
                                                                                                                                                                            T,
                                                                                                                                                                            C,
                                                                                                                                                                            I,
                                                                                                                                                                            M,
                                                                                                                                                                            D,
                                                                                                                                                                            F,
                                                                                                                                                                            L,
                                                                                                                                                                            O = 0,
                                                                                                                                                                            z = new i.Buf8(4),
                                                                                                                                                                            R = [
                                                                                                                                                                                16,
                                                                                                                                                                                17,
                                                                                                                                                                                18,
                                                                                                                                                                                0,
                                                                                                                                                                                8,
                                                                                                                                                                                7,
                                                                                                                                                                                9,
                                                                                                                                                                                6,
                                                                                                                                                                                10,
                                                                                                                                                                                5,
                                                                                                                                                                                11,
                                                                                                                                                                                4,
                                                                                                                                                                                12,
                                                                                                                                                                                3,
                                                                                                                                                                                13,
                                                                                                                                                                                2,
                                                                                                                                                                                14,
                                                                                                                                                                                1,
                                                                                                                                                                                15,
                                                                                                                                                                            ];
                                                                                                                                                                        if (!t || !t.state || !t.output || (!t.input && 0 !== t.avail_in))
                                                                                                                                                                            return l;
                                                                                                                                                                        12 === (r = t.state).mode && (r.mode = 13),
                                                                                                                                                                            (u = t.next_out),
                                                                                                                                                                            (p = t.output),
                                                                                                                                                                            (m = t.avail_out),
                                                                                                                                                                            (d = t.next_in),
                                                                                                                                                                            (c = t.input),
                                                                                                                                                                            (f = t.avail_in),
                                                                                                                                                                            (y = r.hold),
                                                                                                                                                                            (g = r.bits),
                                                                                                                                                                            (_ = f),
                                                                                                                                                                            (w = m),
                                                                                                                                                                            (D = 0);
                                                                                                                                                                        t: for (;;)
                                                                                                                                                                            switch (r.mode) {
                                                                                                                                                                                case 1:
                                                                                                                                                                                    if (0 === r.wrap) {
                                                                                                                                                                                        r.mode = 13;
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    for (; g < 16; ) {
                                                                                                                                                                                        if (0 === f) break t;
                                                                                                                                                                                        f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                    }
                                                                                                                                                                                    if (2 & r.wrap && 35615 === y) {
                                                                                                                                                                                        (z[(r.check = 0)] = 255 & y),
                                                                                                                                                                                            (z[1] = (y >>> 8) & 255),
                                                                                                                                                                                            (r.check = s(r.check, z, 2, 0)),
                                                                                                                                                                                            (g = y = 0),
                                                                                                                                                                                            (r.mode = 2);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (
                                                                                                                                                                                        ((r.flags = 0),
                                                                                                                                                                                        r.head && (r.head.done = !1),
                                                                                                                                                                                        !(1 & r.wrap) || (((255 & y) << 8) + (y >> 8)) % 31)
                                                                                                                                                                                    ) {
                                                                                                                                                                                        (t.msg = "incorrect header check"), (r.mode = 30);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (8 != (15 & y)) {
                                                                                                                                                                                        (t.msg = "unknown compression method"), (r.mode = 30);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (((g -= 4), (M = 8 + (15 & (y >>>= 4))), 0 === r.wbits))
                                                                                                                                                                                        r.wbits = M;
                                                                                                                                                                                    else if (M > r.wbits) {
                                                                                                                                                                                        (t.msg = "invalid window size"), (r.mode = 30);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    (r.dmax = 1 << M),
                                                                                                                                                                                        (t.adler = r.check = 1),
                                                                                                                                                                                        (r.mode = 512 & y ? 10 : 12),
                                                                                                                                                                                        (g = y = 0);
                                                                                                                                                                                    break;
                                                                                                                                                                                case 2:
                                                                                                                                                                                    for (; g < 16; ) {
                                                                                                                                                                                        if (0 === f) break t;
                                                                                                                                                                                        f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                    }
                                                                                                                                                                                    if (((r.flags = y), 8 != (255 & r.flags))) {
                                                                                                                                                                                        (t.msg = "unknown compression method"), (r.mode = 30);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (57344 & r.flags) {
                                                                                                                                                                                        (t.msg = "unknown header flags set"), (r.mode = 30);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    r.head && (r.head.text = (y >> 8) & 1),
                                                                                                                                                                                        512 & r.flags &&
                                                                                                                                                                                            ((z[0] = 255 & y),
                                                                                                                                                                                            (z[1] = (y >>> 8) & 255),
                                                                                                                                                                                            (r.check = s(r.check, z, 2, 0))),
                                                                                                                                                                                        (g = y = 0),
                                                                                                                                                                                        (r.mode = 3);
                                                                                                                                                                                case 3:
                                                                                                                                                                                    for (; g < 32; ) {
                                                                                                                                                                                        if (0 === f) break t;
                                                                                                                                                                                        f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                    }
                                                                                                                                                                                    r.head && (r.head.time = y),
                                                                                                                                                                                        512 & r.flags &&
                                                                                                                                                                                            ((z[0] = 255 & y),
                                                                                                                                                                                            (z[1] = (y >>> 8) & 255),
                                                                                                                                                                                            (z[2] = (y >>> 16) & 255),
                                                                                                                                                                                            (z[3] = (y >>> 24) & 255),
                                                                                                                                                                                            (r.check = s(r.check, z, 4, 0))),
                                                                                                                                                                                        (g = y = 0),
                                                                                                                                                                                        (r.mode = 4);
                                                                                                                                                                                case 4:
                                                                                                                                                                                    for (; g < 16; ) {
                                                                                                                                                                                        if (0 === f) break t;
                                                                                                                                                                                        f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                    }
                                                                                                                                                                                    r.head && ((r.head.xflags = 255 & y), (r.head.os = y >> 8)),
                                                                                                                                                                                        512 & r.flags &&
                                                                                                                                                                                            ((z[0] = 255 & y),
                                                                                                                                                                                            (z[1] = (y >>> 8) & 255),
                                                                                                                                                                                            (r.check = s(r.check, z, 2, 0))),
                                                                                                                                                                                        (g = y = 0),
                                                                                                                                                                                        (r.mode = 5);
                                                                                                                                                                                case 5:
                                                                                                                                                                                    if (1024 & r.flags) {
                                                                                                                                                                                        for (; g < 16; ) {
                                                                                                                                                                                            if (0 === f) break t;
                                                                                                                                                                                            f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                        }
                                                                                                                                                                                        (r.length = y),
                                                                                                                                                                                            r.head && (r.head.extra_len = y),
                                                                                                                                                                                            512 & r.flags &&
                                                                                                                                                                                                ((z[0] = 255 & y),
                                                                                                                                                                                                (z[1] = (y >>> 8) & 255),
                                                                                                                                                                                                (r.check = s(r.check, z, 2, 0))),
                                                                                                                                                                                            (g = y = 0);
                                                                                                                                                                                    } else r.head && (r.head.extra = null);
                                                                                                                                                                                    r.mode = 6;
                                                                                                                                                                                case 6:
                                                                                                                                                                                    if (
                                                                                                                                                                                        1024 & r.flags &&
                                                                                                                                                                                        (f < (S = r.length) && (S = f),
                                                                                                                                                                                        S &&
                                                                                                                                                                                            (r.head &&
                                                                                                                                                                                                ((M = r.head.extra_len - r.length),
                                                                                                                                                                                                r.head.extra ||
                                                                                                                                                                                                    (r.head.extra = new Array(
                                                                                                                                                                                                        r.head.extra_len
                                                                                                                                                                                                    )),
                                                                                                                                                                                                i.arraySet(r.head.extra, c, d, S, M)),
                                                                                                                                                                                            512 & r.flags && (r.check = s(r.check, c, S, d)),
                                                                                                                                                                                            (f -= S),
                                                                                                                                                                                            (d += S),
                                                                                                                                                                                            (r.length -= S)),
                                                                                                                                                                                        r.length)
                                                                                                                                                                                    )
                                                                                                                                                                                        break t;
                                                                                                                                                                                    (r.length = 0), (r.mode = 7);
                                                                                                                                                                                case 7:
                                                                                                                                                                                    if (2048 & r.flags) {
                                                                                                                                                                                        if (0 === f) break t;
                                                                                                                                                                                        for (
                                                                                                                                                                                            S = 0;
                                                                                                                                                                                            (M = c[d + S++]),
                                                                                                                                                                                                r.head &&
                                                                                                                                                                                                    M &&
                                                                                                                                                                                                    r.length < 65536 &&
                                                                                                                                                                                                    (r.head.name += String.fromCharCode(M)),
                                                                                                                                                                                                M && S < f;

                                                                                                                                                                                        );
                                                                                                                                                                                        if (
                                                                                                                                                                                            (512 & r.flags && (r.check = s(r.check, c, S, d)),
                                                                                                                                                                                            (f -= S),
                                                                                                                                                                                            (d += S),
                                                                                                                                                                                            M)
                                                                                                                                                                                        )
                                                                                                                                                                                            break t;
                                                                                                                                                                                    } else r.head && (r.head.name = null);
                                                                                                                                                                                    (r.length = 0), (r.mode = 8);
                                                                                                                                                                                case 8:
                                                                                                                                                                                    if (4096 & r.flags) {
                                                                                                                                                                                        if (0 === f) break t;
                                                                                                                                                                                        for (
                                                                                                                                                                                            S = 0;
                                                                                                                                                                                            (M = c[d + S++]),
                                                                                                                                                                                                r.head &&
                                                                                                                                                                                                    M &&
                                                                                                                                                                                                    r.length < 65536 &&
                                                                                                                                                                                                    (r.head.comment += String.fromCharCode(M)),
                                                                                                                                                                                                M && S < f;

                                                                                                                                                                                        );
                                                                                                                                                                                        if (
                                                                                                                                                                                            (512 & r.flags && (r.check = s(r.check, c, S, d)),
                                                                                                                                                                                            (f -= S),
                                                                                                                                                                                            (d += S),
                                                                                                                                                                                            M)
                                                                                                                                                                                        )
                                                                                                                                                                                            break t;
                                                                                                                                                                                    } else r.head && (r.head.comment = null);
                                                                                                                                                                                    r.mode = 9;
                                                                                                                                                                                case 9:
                                                                                                                                                                                    if (512 & r.flags) {
                                                                                                                                                                                        for (; g < 16; ) {
                                                                                                                                                                                            if (0 === f) break t;
                                                                                                                                                                                            f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                        }
                                                                                                                                                                                        if (y !== (65535 & r.check)) {
                                                                                                                                                                                            (t.msg = "header crc mismatch"), (r.mode = 30);
                                                                                                                                                                                            break;
                                                                                                                                                                                        }
                                                                                                                                                                                        g = y = 0;
                                                                                                                                                                                    }
                                                                                                                                                                                    r.head &&
                                                                                                                                                                                        ((r.head.hcrc = (r.flags >> 9) & 1),
                                                                                                                                                                                        (r.head.done = !0)),
                                                                                                                                                                                        (t.adler = r.check = 0),
                                                                                                                                                                                        (r.mode = 12);
                                                                                                                                                                                    break;
                                                                                                                                                                                case 10:
                                                                                                                                                                                    for (; g < 32; ) {
                                                                                                                                                                                        if (0 === f) break t;
                                                                                                                                                                                        f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                    }
                                                                                                                                                                                    (t.adler = r.check = h(y)), (g = y = 0), (r.mode = 11);
                                                                                                                                                                                case 11:
                                                                                                                                                                                    if (0 === r.havedict)
                                                                                                                                                                                        return (
                                                                                                                                                                                            (t.next_out = u),
                                                                                                                                                                                            (t.avail_out = m),
                                                                                                                                                                                            (t.next_in = d),
                                                                                                                                                                                            (t.avail_in = f),
                                                                                                                                                                                            (r.hold = y),
                                                                                                                                                                                            (r.bits = g),
                                                                                                                                                                                            2
                                                                                                                                                                                        );
                                                                                                                                                                                    (t.adler = r.check = 1), (r.mode = 12);
                                                                                                                                                                                case 12:
                                                                                                                                                                                    if (5 === e || 6 === e) break t;
                                                                                                                                                                                case 13:
                                                                                                                                                                                    if (r.last) {
                                                                                                                                                                                        (y >>>= 7 & g), (g -= 7 & g), (r.mode = 27);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    for (; g < 3; ) {
                                                                                                                                                                                        if (0 === f) break t;
                                                                                                                                                                                        f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (((r.last = 1 & y), (g -= 1), 3 & (y >>>= 1))) {
                                                                                                                                                                                        case 0:
                                                                                                                                                                                            r.mode = 14;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 1:
                                                                                                                                                                                            if ((v(r), (r.mode = 20), 6 !== e)) break;
                                                                                                                                                                                            (y >>>= 2), (g -= 2);
                                                                                                                                                                                            break t;
                                                                                                                                                                                        case 2:
                                                                                                                                                                                            r.mode = 17;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 3:
                                                                                                                                                                                            (t.msg = "invalid block type"), (r.mode = 30);
                                                                                                                                                                                    }
                                                                                                                                                                                    (y >>>= 2), (g -= 2);
                                                                                                                                                                                    break;
                                                                                                                                                                                case 14:
                                                                                                                                                                                    for (y >>>= 7 & g, g -= 7 & g; g < 32; ) {
                                                                                                                                                                                        if (0 === f) break t;
                                                                                                                                                                                        f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                    }
                                                                                                                                                                                    if ((65535 & y) != ((y >>> 16) ^ 65535)) {
                                                                                                                                                                                        (t.msg = "invalid stored block lengths"), (r.mode = 30);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (
                                                                                                                                                                                        ((r.length = 65535 & y),
                                                                                                                                                                                        (g = y = 0),
                                                                                                                                                                                        (r.mode = 15),
                                                                                                                                                                                        6 === e)
                                                                                                                                                                                    )
                                                                                                                                                                                        break t;
                                                                                                                                                                                case 15:
                                                                                                                                                                                    r.mode = 16;
                                                                                                                                                                                case 16:
                                                                                                                                                                                    if ((S = r.length)) {
                                                                                                                                                                                        if ((f < S && (S = f), m < S && (S = m), 0 === S))
                                                                                                                                                                                            break t;
                                                                                                                                                                                        i.arraySet(p, c, d, S, u),
                                                                                                                                                                                            (f -= S),
                                                                                                                                                                                            (d += S),
                                                                                                                                                                                            (m -= S),
                                                                                                                                                                                            (u += S),
                                                                                                                                                                                            (r.length -= S);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    r.mode = 12;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 17:
                                                                                                                                                                                    for (; g < 14; ) {
                                                                                                                                                                                        if (0 === f) break t;
                                                                                                                                                                                        f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                    }
                                                                                                                                                                                    if (
                                                                                                                                                                                        ((r.nlen = 257 + (31 & y)),
                                                                                                                                                                                        (y >>>= 5),
                                                                                                                                                                                        (g -= 5),
                                                                                                                                                                                        (r.ndist = 1 + (31 & y)),
                                                                                                                                                                                        (y >>>= 5),
                                                                                                                                                                                        (g -= 5),
                                                                                                                                                                                        (r.ncode = 4 + (15 & y)),
                                                                                                                                                                                        (y >>>= 4),
                                                                                                                                                                                        (g -= 4),
                                                                                                                                                                                        286 < r.nlen || 30 < r.ndist)
                                                                                                                                                                                    ) {
                                                                                                                                                                                        (t.msg = "too many length or distance symbols"),
                                                                                                                                                                                            (r.mode = 30);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    (r.have = 0), (r.mode = 18);
                                                                                                                                                                                case 18:
                                                                                                                                                                                    for (; r.have < r.ncode; ) {
                                                                                                                                                                                        for (; g < 3; ) {
                                                                                                                                                                                            if (0 === f) break t;
                                                                                                                                                                                            f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                        }
                                                                                                                                                                                        (r.lens[R[r.have++]] = 7 & y), (y >>>= 3), (g -= 3);
                                                                                                                                                                                    }
                                                                                                                                                                                    for (; r.have < 19; ) r.lens[R[r.have++]] = 0;
                                                                                                                                                                                    if (
                                                                                                                                                                                        ((r.lencode = r.lendyn),
                                                                                                                                                                                        (r.lenbits = 7),
                                                                                                                                                                                        (F = { bits: r.lenbits }),
                                                                                                                                                                                        (D = o(0, r.lens, 0, 19, r.lencode, 0, r.work, F)),
                                                                                                                                                                                        (r.lenbits = F.bits),
                                                                                                                                                                                        D)
                                                                                                                                                                                    ) {
                                                                                                                                                                                        (t.msg = "invalid code lengths set"), (r.mode = 30);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    (r.have = 0), (r.mode = 19);
                                                                                                                                                                                case 19:
                                                                                                                                                                                    for (; r.have < r.nlen + r.ndist; ) {
                                                                                                                                                                                        for (
                                                                                                                                                                                            ;
                                                                                                                                                                                            (k =
                                                                                                                                                                                                ((O = r.lencode[y & ((1 << r.lenbits) - 1)]) >>>
                                                                                                                                                                                                    16) &
                                                                                                                                                                                                255),
                                                                                                                                                                                                (A = 65535 & O),
                                                                                                                                                                                                !((x = O >>> 24) <= g);

                                                                                                                                                                                        ) {
                                                                                                                                                                                            if (0 === f) break t;
                                                                                                                                                                                            f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                        }
                                                                                                                                                                                        if (A < 16)
                                                                                                                                                                                            (y >>>= x), (g -= x), (r.lens[r.have++] = A);
                                                                                                                                                                                        else {
                                                                                                                                                                                            if (16 === A) {
                                                                                                                                                                                                for (L = x + 2; g < L; ) {
                                                                                                                                                                                                    if (0 === f) break t;
                                                                                                                                                                                                    f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                                }
                                                                                                                                                                                                if (((y >>>= x), (g -= x), 0 === r.have)) {
                                                                                                                                                                                                    (t.msg = "invalid bit length repeat"),
                                                                                                                                                                                                        (r.mode = 30);
                                                                                                                                                                                                    break;
                                                                                                                                                                                                }
                                                                                                                                                                                                (M = r.lens[r.have - 1]),
                                                                                                                                                                                                    (S = 3 + (3 & y)),
                                                                                                                                                                                                    (y >>>= 2),
                                                                                                                                                                                                    (g -= 2);
                                                                                                                                                                                            } else if (17 === A) {
                                                                                                                                                                                                for (L = x + 3; g < L; ) {
                                                                                                                                                                                                    if (0 === f) break t;
                                                                                                                                                                                                    f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                                }
                                                                                                                                                                                                (g -= x),
                                                                                                                                                                                                    (M = 0),
                                                                                                                                                                                                    (S = 3 + (7 & (y >>>= x))),
                                                                                                                                                                                                    (y >>>= 3),
                                                                                                                                                                                                    (g -= 3);
                                                                                                                                                                                            } else {
                                                                                                                                                                                                for (L = x + 7; g < L; ) {
                                                                                                                                                                                                    if (0 === f) break t;
                                                                                                                                                                                                    f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                                }
                                                                                                                                                                                                (g -= x),
                                                                                                                                                                                                    (M = 0),
                                                                                                                                                                                                    (S = 11 + (127 & (y >>>= x))),
                                                                                                                                                                                                    (y >>>= 7),
                                                                                                                                                                                                    (g -= 7);
                                                                                                                                                                                            }
                                                                                                                                                                                            if (r.have + S > r.nlen + r.ndist) {
                                                                                                                                                                                                (t.msg = "invalid bit length repeat"),
                                                                                                                                                                                                    (r.mode = 30);
                                                                                                                                                                                                break;
                                                                                                                                                                                            }
                                                                                                                                                                                            for (; S--; ) r.lens[r.have++] = M;
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                    if (30 === r.mode) break;
                                                                                                                                                                                    if (0 === r.lens[256]) {
                                                                                                                                                                                        (t.msg = "invalid code -- missing end-of-block"),
                                                                                                                                                                                            (r.mode = 30);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (
                                                                                                                                                                                        ((r.lenbits = 9),
                                                                                                                                                                                        (F = { bits: r.lenbits }),
                                                                                                                                                                                        (D = o(1, r.lens, 0, r.nlen, r.lencode, 0, r.work, F)),
                                                                                                                                                                                        (r.lenbits = F.bits),
                                                                                                                                                                                        D)
                                                                                                                                                                                    ) {
                                                                                                                                                                                        (t.msg = "invalid literal/lengths set"), (r.mode = 30);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (
                                                                                                                                                                                        ((r.distbits = 6),
                                                                                                                                                                                        (r.distcode = r.distdyn),
                                                                                                                                                                                        (F = { bits: r.distbits }),
                                                                                                                                                                                        (D = o(
                                                                                                                                                                                            2,
                                                                                                                                                                                            r.lens,
                                                                                                                                                                                            r.nlen,
                                                                                                                                                                                            r.ndist,
                                                                                                                                                                                            r.distcode,
                                                                                                                                                                                            0,
                                                                                                                                                                                            r.work,
                                                                                                                                                                                            F
                                                                                                                                                                                        )),
                                                                                                                                                                                        (r.distbits = F.bits),
                                                                                                                                                                                        D)
                                                                                                                                                                                    ) {
                                                                                                                                                                                        (t.msg = "invalid distances set"), (r.mode = 30);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (((r.mode = 20), 6 === e)) break t;
                                                                                                                                                                                case 20:
                                                                                                                                                                                    r.mode = 21;
                                                                                                                                                                                case 21:
                                                                                                                                                                                    if (6 <= f && 258 <= m) {
                                                                                                                                                                                        (t.next_out = u),
                                                                                                                                                                                            (t.avail_out = m),
                                                                                                                                                                                            (t.next_in = d),
                                                                                                                                                                                            (t.avail_in = f),
                                                                                                                                                                                            (r.hold = y),
                                                                                                                                                                                            (r.bits = g),
                                                                                                                                                                                            a(t, w),
                                                                                                                                                                                            (u = t.next_out),
                                                                                                                                                                                            (p = t.output),
                                                                                                                                                                                            (m = t.avail_out),
                                                                                                                                                                                            (d = t.next_in),
                                                                                                                                                                                            (c = t.input),
                                                                                                                                                                                            (f = t.avail_in),
                                                                                                                                                                                            (y = r.hold),
                                                                                                                                                                                            (g = r.bits),
                                                                                                                                                                                            12 === r.mode && (r.back = -1);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    for (
                                                                                                                                                                                        r.back = 0;
                                                                                                                                                                                        (k =
                                                                                                                                                                                            ((O = r.lencode[y & ((1 << r.lenbits) - 1)]) >>>
                                                                                                                                                                                                16) &
                                                                                                                                                                                            255),
                                                                                                                                                                                            (A = 65535 & O),
                                                                                                                                                                                            !((x = O >>> 24) <= g);

                                                                                                                                                                                    ) {
                                                                                                                                                                                        if (0 === f) break t;
                                                                                                                                                                                        f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                    }
                                                                                                                                                                                    if (k && 0 == (240 & k)) {
                                                                                                                                                                                        for (
                                                                                                                                                                                            T = x, C = k, I = A;
                                                                                                                                                                                            (k =
                                                                                                                                                                                                ((O =
                                                                                                                                                                                                    r.lencode[
                                                                                                                                                                                                        I + ((y & ((1 << (T + C)) - 1)) >> T)
                                                                                                                                                                                                    ]) >>>
                                                                                                                                                                                                    16) &
                                                                                                                                                                                                255),
                                                                                                                                                                                                (A = 65535 & O),
                                                                                                                                                                                                !(T + (x = O >>> 24) <= g);

                                                                                                                                                                                        ) {
                                                                                                                                                                                            if (0 === f) break t;
                                                                                                                                                                                            f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                        }
                                                                                                                                                                                        (y >>>= T), (g -= T), (r.back += T);
                                                                                                                                                                                    }
                                                                                                                                                                                    if (
                                                                                                                                                                                        ((y >>>= x),
                                                                                                                                                                                        (g -= x),
                                                                                                                                                                                        (r.back += x),
                                                                                                                                                                                        (r.length = A),
                                                                                                                                                                                        0 === k)
                                                                                                                                                                                    ) {
                                                                                                                                                                                        r.mode = 26;
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (32 & k) {
                                                                                                                                                                                        (r.back = -1), (r.mode = 12);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (64 & k) {
                                                                                                                                                                                        (t.msg = "invalid literal/length code"), (r.mode = 30);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    (r.extra = 15 & k), (r.mode = 22);
                                                                                                                                                                                case 22:
                                                                                                                                                                                    if (r.extra) {
                                                                                                                                                                                        for (L = r.extra; g < L; ) {
                                                                                                                                                                                            if (0 === f) break t;
                                                                                                                                                                                            f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                        }
                                                                                                                                                                                        (r.length += y & ((1 << r.extra) - 1)),
                                                                                                                                                                                            (y >>>= r.extra),
                                                                                                                                                                                            (g -= r.extra),
                                                                                                                                                                                            (r.back += r.extra);
                                                                                                                                                                                    }
                                                                                                                                                                                    (r.was = r.length), (r.mode = 23);
                                                                                                                                                                                case 23:
                                                                                                                                                                                    for (
                                                                                                                                                                                        ;
                                                                                                                                                                                        (k =
                                                                                                                                                                                            ((O = r.distcode[y & ((1 << r.distbits) - 1)]) >>>
                                                                                                                                                                                                16) &
                                                                                                                                                                                            255),
                                                                                                                                                                                            (A = 65535 & O),
                                                                                                                                                                                            !((x = O >>> 24) <= g);

                                                                                                                                                                                    ) {
                                                                                                                                                                                        if (0 === f) break t;
                                                                                                                                                                                        f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                    }
                                                                                                                                                                                    if (0 == (240 & k)) {
                                                                                                                                                                                        for (
                                                                                                                                                                                            T = x, C = k, I = A;
                                                                                                                                                                                            (k =
                                                                                                                                                                                                ((O =
                                                                                                                                                                                                    r.distcode[
                                                                                                                                                                                                        I + ((y & ((1 << (T + C)) - 1)) >> T)
                                                                                                                                                                                                    ]) >>>
                                                                                                                                                                                                    16) &
                                                                                                                                                                                                255),
                                                                                                                                                                                                (A = 65535 & O),
                                                                                                                                                                                                !(T + (x = O >>> 24) <= g);

                                                                                                                                                                                        ) {
                                                                                                                                                                                            if (0 === f) break t;
                                                                                                                                                                                            f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                        }
                                                                                                                                                                                        (y >>>= T), (g -= T), (r.back += T);
                                                                                                                                                                                    }
                                                                                                                                                                                    if (((y >>>= x), (g -= x), (r.back += x), 64 & k)) {
                                                                                                                                                                                        (t.msg = "invalid distance code"), (r.mode = 30);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    (r.offset = A), (r.extra = 15 & k), (r.mode = 24);
                                                                                                                                                                                case 24:
                                                                                                                                                                                    if (r.extra) {
                                                                                                                                                                                        for (L = r.extra; g < L; ) {
                                                                                                                                                                                            if (0 === f) break t;
                                                                                                                                                                                            f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                        }
                                                                                                                                                                                        (r.offset += y & ((1 << r.extra) - 1)),
                                                                                                                                                                                            (y >>>= r.extra),
                                                                                                                                                                                            (g -= r.extra),
                                                                                                                                                                                            (r.back += r.extra);
                                                                                                                                                                                    }
                                                                                                                                                                                    if (r.offset > r.dmax) {
                                                                                                                                                                                        (t.msg = "invalid distance too far back"),
                                                                                                                                                                                            (r.mode = 30);
                                                                                                                                                                                        break;
                                                                                                                                                                                    }
                                                                                                                                                                                    r.mode = 25;
                                                                                                                                                                                case 25:
                                                                                                                                                                                    if (0 === m) break t;
                                                                                                                                                                                    if (((S = w - m), r.offset > S)) {
                                                                                                                                                                                        if ((S = r.offset - S) > r.whave && r.sane) {
                                                                                                                                                                                            (t.msg = "invalid distance too far back"),
                                                                                                                                                                                                (r.mode = 30);
                                                                                                                                                                                            break;
                                                                                                                                                                                        }
                                                                                                                                                                                        (E =
                                                                                                                                                                                            S > r.wnext
                                                                                                                                                                                                ? ((S -= r.wnext), r.wsize - S)
                                                                                                                                                                                                : r.wnext - S),
                                                                                                                                                                                            S > r.length && (S = r.length),
                                                                                                                                                                                            (P = r.window);
                                                                                                                                                                                    } else (P = p), (E = u - r.offset), (S = r.length);
                                                                                                                                                                                    for (
                                                                                                                                                                                        m < S && (S = m), m -= S, r.length -= S;
                                                                                                                                                                                        (p[u++] = P[E++]), --S;

                                                                                                                                                                                    );
                                                                                                                                                                                    0 === r.length && (r.mode = 21);
                                                                                                                                                                                    break;
                                                                                                                                                                                case 26:
                                                                                                                                                                                    if (0 === m) break t;
                                                                                                                                                                                    (p[u++] = r.length), m--, (r.mode = 21);
                                                                                                                                                                                    break;
                                                                                                                                                                                case 27:
                                                                                                                                                                                    if (r.wrap) {
                                                                                                                                                                                        for (; g < 32; ) {
                                                                                                                                                                                            if (0 === f) break t;
                                                                                                                                                                                            f--, (y |= c[d++] << g), (g += 8);
                                                                                                                                                                                        }
                                                                                                                                                                                        if (
                                                                                                                                                                                            ((w -= m),
                                                                                                                                                                                            (t.total_out += w),
                                                                                                                                                                                            (r.total += w),
                                                                                                                                                                                            w &&
                                                                                                                                                                                                (t.adler = r.check = r.flags
                                                                                                                                                                                                    ? s(r.check, p, w, u - w)
                                                                                                                                                                                                    : n(r.check, p, w, u - w)),
                                                                                                                                                                                            (w = m),
                                                                                                                                                                                            (r.flags ? y : h(y)) !== r.check)
                                                                                                                                                                                        ) {
                                                                                                                                                                                            (t.msg = "incorrect data check"), (r.mode = 30);
                                                                                                                                                                                            break;
                                                                                                                                                                                        }
                                                                                                                                                                                        g = y = 0;
                                                                                                                                                                                    }
                                                                                                                                                                                    r.mode = 28;
                                                                                                                                                                                case 28:
                                                                                                                                                                                    if (r.wrap && r.flags) {
                                                                                                                                                                                        for (; g < 32; ) {
                                                                                                                                                                                            if (0 === f) break t;
                                                                                                                                                                                            f--, (y += c[d++] << g), (g += 8);
                                                                                                                                                                                        }
                                                                                                                                                                                        if (y !== (4294967295 & r.total)) {
                                                                                                                                                                                            (t.msg = "incorrect length check"), (r.mode = 30);
                                                                                                                                                                                            break;
                                                                                                                                                                                        }
                                                                                                                                                                                        g = y = 0;
                                                                                                                                                                                    }
                                                                                                                                                                                    r.mode = 29;
                                                                                                                                                                                case 29:
                                                                                                                                                                                    D = 1;
                                                                                                                                                                                    break t;
                                                                                                                                                                                case 30:
                                                                                                                                                                                    D = -3;
                                                                                                                                                                                    break t;
                                                                                                                                                                                case 31:
                                                                                                                                                                                    return -4;
                                                                                                                                                                                default:
                                                                                                                                                                                    return l;
                                                                                                                                                                            }
                                                                                                                                                                        return (
                                                                                                                                                                            (t.next_out = u),
                                                                                                                                                                            (t.avail_out = m),
                                                                                                                                                                            (t.next_in = d),
                                                                                                                                                                            (t.avail_in = f),
                                                                                                                                                                            (r.hold = y),
                                                                                                                                                                            (r.bits = g),
                                                                                                                                                                            (r.wsize ||
                                                                                                                                                                                (w !== t.avail_out &&
                                                                                                                                                                                    r.mode < 30 &&
                                                                                                                                                                                    (r.mode < 27 || 4 !== e))) &&
                                                                                                                                                                            b(t, t.output, t.next_out, w - t.avail_out)
                                                                                                                                                                                ? ((r.mode = 31), -4)
                                                                                                                                                                                : ((_ -= t.avail_in),
                                                                                                                                                                                  (w -= t.avail_out),
                                                                                                                                                                                  (t.total_in += _),
                                                                                                                                                                                  (t.total_out += w),
                                                                                                                                                                                  (r.total += w),
                                                                                                                                                                                  r.wrap &&
                                                                                                                                                                                      w &&
                                                                                                                                                                                      (t.adler = r.check = r.flags
                                                                                                                                                                                          ? s(r.check, p, w, t.next_out - w)
                                                                                                                                                                                          : n(r.check, p, w, t.next_out - w)),
                                                                                                                                                                                  (t.data_type =
                                                                                                                                                                                      r.bits +
                                                                                                                                                                                      (r.last ? 64 : 0) +
                                                                                                                                                                                      (12 === r.mode ? 128 : 0) +
                                                                                                                                                                                      (20 === r.mode || 15 === r.mode ? 256 : 0)),
                                                                                                                                                                                  ((0 == _ && 0 === w) || 4 === e) && 0 === D && (D = -5),
                                                                                                                                                                                  D)
                                                                                                                                                                        );
                                                                                                                                                                    }),
                                                                                                                                                                    (r.inflateEnd = function (t) {
                                                                                                                                                                        if (!t || !t.state) return l;
                                                                                                                                                                        var e = t.state;
                                                                                                                                                                        return e.window && (e.window = null), (t.state = null), 0;
                                                                                                                                                                    }),
                                                                                                                                                                    (r.inflateGetHeader = function (t, e) {
                                                                                                                                                                        var r;
                                                                                                                                                                        return t && t.state
                                                                                                                                                                            ? 0 == (2 & (r = t.state).wrap)
                                                                                                                                                                                ? l
                                                                                                                                                                                : (((r.head = e).done = !1), 0)
                                                                                                                                                                            : l;
                                                                                                                                                                    }),
                                                                                                                                                                    (r.inflateSetDictionary = function (t, e) {
                                                                                                                                                                        var r,
                                                                                                                                                                            i = e.length;
                                                                                                                                                                        return t && t.state
                                                                                                                                                                            ? 0 !== (r = t.state).wrap && 11 !== r.mode
                                                                                                                                                                                ? l
                                                                                                                                                                                : 11 === r.mode && n(1, e, i, 0) !== r.check
                                                                                                                                                                                ? -3
                                                                                                                                                                                : b(t, e, i, i)
                                                                                                                                                                                ? ((r.mode = 31), -4)
                                                                                                                                                                                : ((r.havedict = 1), 0)
                                                                                                                                                                            : l;
                                                                                                                                                                    }),
                                                                                                                                                                    (r.inflateInfo = "pako inflate (from Nodeca project)");
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "../utils/common": 41,
                                                                                                                                                                "./adler32": 43,
                                                                                                                                                                "./crc32": 45,
                                                                                                                                                                "./inffast": 48,
                                                                                                                                                                "./inftrees": 50,
                                                                                                                                                            },
                                                                                                                                                        ],
                                                                                                                                                        50: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("../utils/common"),
                                                                                                                                                                    n = [
                                                                                                                                                                        3,
                                                                                                                                                                        4,
                                                                                                                                                                        5,
                                                                                                                                                                        6,
                                                                                                                                                                        7,
                                                                                                                                                                        8,
                                                                                                                                                                        9,
                                                                                                                                                                        10,
                                                                                                                                                                        11,
                                                                                                                                                                        13,
                                                                                                                                                                        15,
                                                                                                                                                                        17,
                                                                                                                                                                        19,
                                                                                                                                                                        23,
                                                                                                                                                                        27,
                                                                                                                                                                        31,
                                                                                                                                                                        35,
                                                                                                                                                                        43,
                                                                                                                                                                        51,
                                                                                                                                                                        59,
                                                                                                                                                                        67,
                                                                                                                                                                        83,
                                                                                                                                                                        99,
                                                                                                                                                                        115,
                                                                                                                                                                        131,
                                                                                                                                                                        163,
                                                                                                                                                                        195,
                                                                                                                                                                        227,
                                                                                                                                                                        258,
                                                                                                                                                                        0,
                                                                                                                                                                        0,
                                                                                                                                                                    ],
                                                                                                                                                                    s = [
                                                                                                                                                                        16,
                                                                                                                                                                        16,
                                                                                                                                                                        16,
                                                                                                                                                                        16,
                                                                                                                                                                        16,
                                                                                                                                                                        16,
                                                                                                                                                                        16,
                                                                                                                                                                        16,
                                                                                                                                                                        17,
                                                                                                                                                                        17,
                                                                                                                                                                        17,
                                                                                                                                                                        17,
                                                                                                                                                                        18,
                                                                                                                                                                        18,
                                                                                                                                                                        18,
                                                                                                                                                                        18,
                                                                                                                                                                        19,
                                                                                                                                                                        19,
                                                                                                                                                                        19,
                                                                                                                                                                        19,
                                                                                                                                                                        20,
                                                                                                                                                                        20,
                                                                                                                                                                        20,
                                                                                                                                                                        20,
                                                                                                                                                                        21,
                                                                                                                                                                        21,
                                                                                                                                                                        21,
                                                                                                                                                                        21,
                                                                                                                                                                        16,
                                                                                                                                                                        72,
                                                                                                                                                                        78,
                                                                                                                                                                    ],
                                                                                                                                                                    a = [
                                                                                                                                                                        1,
                                                                                                                                                                        2,
                                                                                                                                                                        3,
                                                                                                                                                                        4,
                                                                                                                                                                        5,
                                                                                                                                                                        7,
                                                                                                                                                                        9,
                                                                                                                                                                        13,
                                                                                                                                                                        17,
                                                                                                                                                                        25,
                                                                                                                                                                        33,
                                                                                                                                                                        49,
                                                                                                                                                                        65,
                                                                                                                                                                        97,
                                                                                                                                                                        129,
                                                                                                                                                                        193,
                                                                                                                                                                        257,
                                                                                                                                                                        385,
                                                                                                                                                                        513,
                                                                                                                                                                        769,
                                                                                                                                                                        1025,
                                                                                                                                                                        1537,
                                                                                                                                                                        2049,
                                                                                                                                                                        3073,
                                                                                                                                                                        4097,
                                                                                                                                                                        6145,
                                                                                                                                                                        8193,
                                                                                                                                                                        12289,
                                                                                                                                                                        16385,
                                                                                                                                                                        24577,
                                                                                                                                                                        0,
                                                                                                                                                                        0,
                                                                                                                                                                    ],
                                                                                                                                                                    o = [
                                                                                                                                                                        16,
                                                                                                                                                                        16,
                                                                                                                                                                        16,
                                                                                                                                                                        16,
                                                                                                                                                                        17,
                                                                                                                                                                        17,
                                                                                                                                                                        18,
                                                                                                                                                                        18,
                                                                                                                                                                        19,
                                                                                                                                                                        19,
                                                                                                                                                                        20,
                                                                                                                                                                        20,
                                                                                                                                                                        21,
                                                                                                                                                                        21,
                                                                                                                                                                        22,
                                                                                                                                                                        22,
                                                                                                                                                                        23,
                                                                                                                                                                        23,
                                                                                                                                                                        24,
                                                                                                                                                                        24,
                                                                                                                                                                        25,
                                                                                                                                                                        25,
                                                                                                                                                                        26,
                                                                                                                                                                        26,
                                                                                                                                                                        27,
                                                                                                                                                                        27,
                                                                                                                                                                        28,
                                                                                                                                                                        28,
                                                                                                                                                                        29,
                                                                                                                                                                        29,
                                                                                                                                                                        64,
                                                                                                                                                                        64,
                                                                                                                                                                    ];
                                                                                                                                                                e.exports = function (t, e, r, l, h, c, p, d) {
                                                                                                                                                                    var u,
                                                                                                                                                                        f,
                                                                                                                                                                        m,
                                                                                                                                                                        y,
                                                                                                                                                                        g,
                                                                                                                                                                        v,
                                                                                                                                                                        b,
                                                                                                                                                                        _,
                                                                                                                                                                        w,
                                                                                                                                                                        S = d.bits,
                                                                                                                                                                        E = 0,
                                                                                                                                                                        P = 0,
                                                                                                                                                                        x = 0,
                                                                                                                                                                        k = 0,
                                                                                                                                                                        A = 0,
                                                                                                                                                                        T = 0,
                                                                                                                                                                        C = 0,
                                                                                                                                                                        I = 0,
                                                                                                                                                                        M = 0,
                                                                                                                                                                        D = 0,
                                                                                                                                                                        F = null,
                                                                                                                                                                        L = 0,
                                                                                                                                                                        O = new i.Buf16(16),
                                                                                                                                                                        z = new i.Buf16(16),
                                                                                                                                                                        R = null,
                                                                                                                                                                        B = 0;
                                                                                                                                                                    for (E = 0; E <= 15; E++) O[E] = 0;
                                                                                                                                                                    for (P = 0; P < l; P++) O[e[r + P]]++;
                                                                                                                                                                    for (A = S, k = 15; 1 <= k && 0 === O[k]; k--);
                                                                                                                                                                    if ((k < A && (A = k), 0 === k))
                                                                                                                                                                        return (h[c++] = 20971520), (h[c++] = 20971520), (d.bits = 1), 0;
                                                                                                                                                                    for (x = 1; x < k && 0 === O[x]; x++);
                                                                                                                                                                    for (A < x && (A = x), E = I = 1; E <= 15; E++)
                                                                                                                                                                        if (((I <<= 1), (I -= O[E]) < 0)) return -1;
                                                                                                                                                                    if (0 < I && (0 === t || 1 !== k)) return -1;
                                                                                                                                                                    for (z[1] = 0, E = 1; E < 15; E++) z[E + 1] = z[E] + O[E];
                                                                                                                                                                    for (P = 0; P < l; P++) 0 !== e[r + P] && (p[z[e[r + P]]++] = P);
                                                                                                                                                                    if (
                                                                                                                                                                        ((v =
                                                                                                                                                                            0 === t
                                                                                                                                                                                ? ((F = R = p), 19)
                                                                                                                                                                                : 1 === t
                                                                                                                                                                                ? ((F = n), (L -= 257), (R = s), (B -= 257), 256)
                                                                                                                                                                                : ((F = a), (R = o), -1)),
                                                                                                                                                                        (E = x),
                                                                                                                                                                        (g = c),
                                                                                                                                                                        (C = P = D = 0),
                                                                                                                                                                        (m = -1),
                                                                                                                                                                        (y = (M = 1 << (T = A)) - 1),
                                                                                                                                                                        (1 === t && 852 < M) || (2 === t && 592 < M))
                                                                                                                                                                    )
                                                                                                                                                                        return 1;
                                                                                                                                                                    for (;;) {
                                                                                                                                                                        for (
                                                                                                                                                                            b = E - C,
                                                                                                                                                                                w =
                                                                                                                                                                                    p[P] < v
                                                                                                                                                                                        ? ((_ = 0), p[P])
                                                                                                                                                                                        : p[P] > v
                                                                                                                                                                                        ? ((_ = R[B + p[P]]), F[L + p[P]])
                                                                                                                                                                                        : ((_ = 96), 0),
                                                                                                                                                                                u = 1 << (E - C),
                                                                                                                                                                                x = f = 1 << T;
                                                                                                                                                                            (h[g + (D >> C) + (f -= u)] = (b << 24) | (_ << 16) | w | 0),
                                                                                                                                                                                0 !== f;

                                                                                                                                                                        );
                                                                                                                                                                        for (u = 1 << (E - 1); D & u; ) u >>= 1;
                                                                                                                                                                        if ((0 !== u ? ((D &= u - 1), (D += u)) : (D = 0), P++, 0 == --O[E])) {
                                                                                                                                                                            if (E === k) break;
                                                                                                                                                                            E = e[r + p[P]];
                                                                                                                                                                        }
                                                                                                                                                                        if (A < E && (D & y) !== m) {
                                                                                                                                                                            for (
                                                                                                                                                                                0 === C && (C = A), g += x, I = 1 << (T = E - C);
                                                                                                                                                                                T + C < k && !((I -= O[T + C]) <= 0);

                                                                                                                                                                            )
                                                                                                                                                                                T++, (I <<= 1);
                                                                                                                                                                            if (((M += 1 << T), (1 === t && 852 < M) || (2 === t && 592 < M)))
                                                                                                                                                                                return 1;
                                                                                                                                                                            h[(m = D & y)] = (A << 24) | (T << 16) | (g - c) | 0;
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                    return (
                                                                                                                                                                        0 !== D && (h[g + D] = ((E - C) << 24) | (64 << 16) | 0),
                                                                                                                                                                        (d.bits = A),
                                                                                                                                                                        0
                                                                                                                                                                    );
                                                                                                                                                                };
                                                                                                                                                            },
                                                                                                                                                            { "../utils/common": 41 },
                                                                                                                                                        ],
                                                                                                                                                        51: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                e.exports = {
                                                                                                                                                                    2: "need dictionary",
                                                                                                                                                                    1: "stream end",
                                                                                                                                                                    0: "",
                                                                                                                                                                    "-1": "file error",
                                                                                                                                                                    "-2": "stream error",
                                                                                                                                                                    "-3": "data error",
                                                                                                                                                                    "-4": "insufficient memory",
                                                                                                                                                                    "-5": "buffer error",
                                                                                                                                                                    "-6": "incompatible version",
                                                                                                                                                                };
                                                                                                                                                            },
                                                                                                                                                            {},
                                                                                                                                                        ],
                                                                                                                                                        52: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                var i = t("../utils/common");
                                                                                                                                                                function n(t) {
                                                                                                                                                                    for (var e = t.length; 0 <= --e; ) t[e] = 0;
                                                                                                                                                                }
                                                                                                                                                                var s = [
                                                                                                                                                                        0,
                                                                                                                                                                        0,
                                                                                                                                                                        0,
                                                                                                                                                                        0,
                                                                                                                                                                        0,
                                                                                                                                                                        0,
                                                                                                                                                                        0,
                                                                                                                                                                        0,
                                                                                                                                                                        1,
                                                                                                                                                                        1,
                                                                                                                                                                        1,
                                                                                                                                                                        1,
                                                                                                                                                                        2,
                                                                                                                                                                        2,
                                                                                                                                                                        2,
                                                                                                                                                                        2,
                                                                                                                                                                        3,
                                                                                                                                                                        3,
                                                                                                                                                                        3,
                                                                                                                                                                        3,
                                                                                                                                                                        4,
                                                                                                                                                                        4,
                                                                                                                                                                        4,
                                                                                                                                                                        4,
                                                                                                                                                                        5,
                                                                                                                                                                        5,
                                                                                                                                                                        5,
                                                                                                                                                                        5,
                                                                                                                                                                        0,
                                                                                                                                                                    ],
                                                                                                                                                                    a = [
                                                                                                                                                                        0,
                                                                                                                                                                        0,
                                                                                                                                                                        0,
                                                                                                                                                                        0,
                                                                                                                                                                        1,
                                                                                                                                                                        1,
                                                                                                                                                                        2,
                                                                                                                                                                        2,
                                                                                                                                                                        3,
                                                                                                                                                                        3,
                                                                                                                                                                        4,
                                                                                                                                                                        4,
                                                                                                                                                                        5,
                                                                                                                                                                        5,
                                                                                                                                                                        6,
                                                                                                                                                                        6,
                                                                                                                                                                        7,
                                                                                                                                                                        7,
                                                                                                                                                                        8,
                                                                                                                                                                        8,
                                                                                                                                                                        9,
                                                                                                                                                                        9,
                                                                                                                                                                        10,
                                                                                                                                                                        10,
                                                                                                                                                                        11,
                                                                                                                                                                        11,
                                                                                                                                                                        12,
                                                                                                                                                                        12,
                                                                                                                                                                        13,
                                                                                                                                                                        13,
                                                                                                                                                                    ],
                                                                                                                                                                    o = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
                                                                                                                                                                    l = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
                                                                                                                                                                    h = new Array(576);
                                                                                                                                                                n(h);
                                                                                                                                                                var c = new Array(60);
                                                                                                                                                                n(c);
                                                                                                                                                                var p = new Array(512);
                                                                                                                                                                n(p);
                                                                                                                                                                var d = new Array(256);
                                                                                                                                                                n(d);
                                                                                                                                                                var u = new Array(29);
                                                                                                                                                                n(u);
                                                                                                                                                                var f,
                                                                                                                                                                    m,
                                                                                                                                                                    y,
                                                                                                                                                                    g = new Array(30);
                                                                                                                                                                function v(t, e, r, i, n) {
                                                                                                                                                                    (this.static_tree = t),
                                                                                                                                                                        (this.extra_bits = e),
                                                                                                                                                                        (this.extra_base = r),
                                                                                                                                                                        (this.elems = i),
                                                                                                                                                                        (this.max_length = n),
                                                                                                                                                                        (this.has_stree = t && t.length);
                                                                                                                                                                }
                                                                                                                                                                function b(t, e) {
                                                                                                                                                                    (this.dyn_tree = t), (this.max_code = 0), (this.stat_desc = e);
                                                                                                                                                                }
                                                                                                                                                                function _(t) {
                                                                                                                                                                    return t < 256 ? p[t] : p[256 + (t >>> 7)];
                                                                                                                                                                }
                                                                                                                                                                function w(t, e) {
                                                                                                                                                                    (t.pending_buf[t.pending++] = 255 & e),
                                                                                                                                                                        (t.pending_buf[t.pending++] = (e >>> 8) & 255);
                                                                                                                                                                }
                                                                                                                                                                function S(t, e, r) {
                                                                                                                                                                    t.bi_valid > 16 - r
                                                                                                                                                                        ? ((t.bi_buf |= (e << t.bi_valid) & 65535),
                                                                                                                                                                          w(t, t.bi_buf),
                                                                                                                                                                          (t.bi_buf = e >> (16 - t.bi_valid)),
                                                                                                                                                                          (t.bi_valid += r - 16))
                                                                                                                                                                        : ((t.bi_buf |= (e << t.bi_valid) & 65535), (t.bi_valid += r));
                                                                                                                                                                }
                                                                                                                                                                function E(t, e, r) {
                                                                                                                                                                    S(t, r[2 * e], r[2 * e + 1]);
                                                                                                                                                                }
                                                                                                                                                                function P(t, e) {
                                                                                                                                                                    for (var r = 0; (r |= 1 & t), (t >>>= 1), (r <<= 1), 0 < --e; );
                                                                                                                                                                    return r >>> 1;
                                                                                                                                                                }
                                                                                                                                                                function x(t, e, r) {
                                                                                                                                                                    var i,
                                                                                                                                                                        n,
                                                                                                                                                                        s = new Array(16),
                                                                                                                                                                        a = 0;
                                                                                                                                                                    for (i = 1; i <= 15; i++) s[i] = a = (a + r[i - 1]) << 1;
                                                                                                                                                                    for (n = 0; n <= e; n++) {
                                                                                                                                                                        var o = t[2 * n + 1];
                                                                                                                                                                        0 !== o && (t[2 * n] = P(s[o]++, o));
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                function k(t) {
                                                                                                                                                                    var e;
                                                                                                                                                                    for (e = 0; e < 286; e++) t.dyn_ltree[2 * e] = 0;
                                                                                                                                                                    for (e = 0; e < 30; e++) t.dyn_dtree[2 * e] = 0;
                                                                                                                                                                    for (e = 0; e < 19; e++) t.bl_tree[2 * e] = 0;
                                                                                                                                                                    (t.dyn_ltree[512] = 1),
                                                                                                                                                                        (t.opt_len = t.static_len = 0),
                                                                                                                                                                        (t.last_lit = t.matches = 0);
                                                                                                                                                                }
                                                                                                                                                                function A(t) {
                                                                                                                                                                    8 < t.bi_valid
                                                                                                                                                                        ? w(t, t.bi_buf)
                                                                                                                                                                        : 0 < t.bi_valid && (t.pending_buf[t.pending++] = t.bi_buf),
                                                                                                                                                                        (t.bi_buf = 0),
                                                                                                                                                                        (t.bi_valid = 0);
                                                                                                                                                                }
                                                                                                                                                                function T(t, e, r, i) {
                                                                                                                                                                    var n = 2 * e,
                                                                                                                                                                        s = 2 * r;
                                                                                                                                                                    return t[n] < t[s] || (t[n] === t[s] && i[e] <= i[r]);
                                                                                                                                                                }
                                                                                                                                                                function C(t, e, r) {
                                                                                                                                                                    for (
                                                                                                                                                                        var i = t.heap[r], n = r << 1;
                                                                                                                                                                        n <= t.heap_len &&
                                                                                                                                                                        (n < t.heap_len && T(e, t.heap[n + 1], t.heap[n], t.depth) && n++,
                                                                                                                                                                        !T(e, i, t.heap[n], t.depth));

                                                                                                                                                                    )
                                                                                                                                                                        (t.heap[r] = t.heap[n]), (r = n), (n <<= 1);
                                                                                                                                                                    t.heap[r] = i;
                                                                                                                                                                }
                                                                                                                                                                function I(t, e, r) {
                                                                                                                                                                    var i,
                                                                                                                                                                        n,
                                                                                                                                                                        o,
                                                                                                                                                                        l,
                                                                                                                                                                        h = 0;
                                                                                                                                                                    if (0 !== t.last_lit)
                                                                                                                                                                        for (
                                                                                                                                                                            ;
                                                                                                                                                                            (i =
                                                                                                                                                                                (t.pending_buf[t.d_buf + 2 * h] << 8) |
                                                                                                                                                                                t.pending_buf[t.d_buf + 2 * h + 1]),
                                                                                                                                                                                (n = t.pending_buf[t.l_buf + h]),
                                                                                                                                                                                h++,
                                                                                                                                                                                0 === i
                                                                                                                                                                                    ? E(t, n, e)
                                                                                                                                                                                    : (E(t, (o = d[n]) + 256 + 1, e),
                                                                                                                                                                                      0 !== (l = s[o]) && S(t, (n -= u[o]), l),
                                                                                                                                                                                      E(t, (o = _(--i)), r),
                                                                                                                                                                                      0 !== (l = a[o]) && S(t, (i -= g[o]), l)),
                                                                                                                                                                                h < t.last_lit;

                                                                                                                                                                        );
                                                                                                                                                                    E(t, 256, e);
                                                                                                                                                                }
                                                                                                                                                                function M(t, e) {
                                                                                                                                                                    var r,
                                                                                                                                                                        i,
                                                                                                                                                                        n,
                                                                                                                                                                        s = e.dyn_tree,
                                                                                                                                                                        a = e.stat_desc.static_tree,
                                                                                                                                                                        o = e.stat_desc.has_stree,
                                                                                                                                                                        l = e.stat_desc.elems,
                                                                                                                                                                        h = -1;
                                                                                                                                                                    for (t.heap_len = 0, t.heap_max = 573, r = 0; r < l; r++)
                                                                                                                                                                        0 !== s[2 * r]
                                                                                                                                                                            ? ((t.heap[++t.heap_len] = h = r), (t.depth[r] = 0))
                                                                                                                                                                            : (s[2 * r + 1] = 0);
                                                                                                                                                                    for (; t.heap_len < 2; )
                                                                                                                                                                        (s[2 * (n = t.heap[++t.heap_len] = h < 2 ? ++h : 0)] = 1),
                                                                                                                                                                            (t.depth[n] = 0),
                                                                                                                                                                            t.opt_len--,
                                                                                                                                                                            o && (t.static_len -= a[2 * n + 1]);
                                                                                                                                                                    for (e.max_code = h, r = t.heap_len >> 1; 1 <= r; r--) C(t, s, r);
                                                                                                                                                                    for (
                                                                                                                                                                        n = l;
                                                                                                                                                                        (r = t.heap[1]),
                                                                                                                                                                            (t.heap[1] = t.heap[t.heap_len--]),
                                                                                                                                                                            C(t, s, 1),
                                                                                                                                                                            (i = t.heap[1]),
                                                                                                                                                                            (t.heap[--t.heap_max] = r),
                                                                                                                                                                            (t.heap[--t.heap_max] = i),
                                                                                                                                                                            (s[2 * n] = s[2 * r] + s[2 * i]),
                                                                                                                                                                            (t.depth[n] =
                                                                                                                                                                                (t.depth[r] >= t.depth[i] ? t.depth[r] : t.depth[i]) + 1),
                                                                                                                                                                            (s[2 * r + 1] = s[2 * i + 1] = n),
                                                                                                                                                                            (t.heap[1] = n++),
                                                                                                                                                                            C(t, s, 1),
                                                                                                                                                                            2 <= t.heap_len;

                                                                                                                                                                    );
                                                                                                                                                                    (t.heap[--t.heap_max] = t.heap[1]),
                                                                                                                                                                        (function (t, e) {
                                                                                                                                                                            var r,
                                                                                                                                                                                i,
                                                                                                                                                                                n,
                                                                                                                                                                                s,
                                                                                                                                                                                a,
                                                                                                                                                                                o,
                                                                                                                                                                                l = e.dyn_tree,
                                                                                                                                                                                h = e.max_code,
                                                                                                                                                                                c = e.stat_desc.static_tree,
                                                                                                                                                                                p = e.stat_desc.has_stree,
                                                                                                                                                                                d = e.stat_desc.extra_bits,
                                                                                                                                                                                u = e.stat_desc.extra_base,
                                                                                                                                                                                f = e.stat_desc.max_length,
                                                                                                                                                                                m = 0;
                                                                                                                                                                            for (s = 0; s <= 15; s++) t.bl_count[s] = 0;
                                                                                                                                                                            for (
                                                                                                                                                                                l[2 * t.heap[t.heap_max] + 1] = 0, r = t.heap_max + 1;
                                                                                                                                                                                r < 573;
                                                                                                                                                                                r++
                                                                                                                                                                            )
                                                                                                                                                                                f < (s = l[2 * l[2 * (i = t.heap[r]) + 1] + 1] + 1) &&
                                                                                                                                                                                    ((s = f), m++),
                                                                                                                                                                                    (l[2 * i + 1] = s),
                                                                                                                                                                                    h < i ||
                                                                                                                                                                                        (t.bl_count[s]++,
                                                                                                                                                                                        (a = 0),
                                                                                                                                                                                        u <= i && (a = d[i - u]),
                                                                                                                                                                                        (o = l[2 * i]),
                                                                                                                                                                                        (t.opt_len += o * (s + a)),
                                                                                                                                                                                        p && (t.static_len += o * (c[2 * i + 1] + a)));
                                                                                                                                                                            if (0 !== m) {
                                                                                                                                                                                do {
                                                                                                                                                                                    for (s = f - 1; 0 === t.bl_count[s]; ) s--;
                                                                                                                                                                                    t.bl_count[s]--,
                                                                                                                                                                                        (t.bl_count[s + 1] += 2),
                                                                                                                                                                                        t.bl_count[f]--,
                                                                                                                                                                                        (m -= 2);
                                                                                                                                                                                } while (0 < m);
                                                                                                                                                                                for (s = f; 0 !== s; s--)
                                                                                                                                                                                    for (i = t.bl_count[s]; 0 !== i; )
                                                                                                                                                                                        h < (n = t.heap[--r]) ||
                                                                                                                                                                                            (l[2 * n + 1] !== s &&
                                                                                                                                                                                                ((t.opt_len += (s - l[2 * n + 1]) * l[2 * n]),
                                                                                                                                                                                                (l[2 * n + 1] = s)),
                                                                                                                                                                                            i--);
                                                                                                                                                                            }
                                                                                                                                                                        })(t, e),
                                                                                                                                                                        x(s, h, t.bl_count);
                                                                                                                                                                }
                                                                                                                                                                function D(t, e, r) {
                                                                                                                                                                    var i,
                                                                                                                                                                        n,
                                                                                                                                                                        s = -1,
                                                                                                                                                                        a = e[1],
                                                                                                                                                                        o = 0,
                                                                                                                                                                        l = 7,
                                                                                                                                                                        h = 4;
                                                                                                                                                                    for (
                                                                                                                                                                        0 === a && ((l = 138), (h = 3)), e[2 * (r + 1) + 1] = 65535, i = 0;
                                                                                                                                                                        i <= r;
                                                                                                                                                                        i++
                                                                                                                                                                    )
                                                                                                                                                                        (n = a),
                                                                                                                                                                            (a = e[2 * (i + 1) + 1]),
                                                                                                                                                                            (++o < l && n === a) ||
                                                                                                                                                                                (o < h
                                                                                                                                                                                    ? (t.bl_tree[2 * n] += o)
                                                                                                                                                                                    : 0 !== n
                                                                                                                                                                                    ? (n !== s && t.bl_tree[2 * n]++, t.bl_tree[32]++)
                                                                                                                                                                                    : o <= 10
                                                                                                                                                                                    ? t.bl_tree[34]++
                                                                                                                                                                                    : t.bl_tree[36]++,
                                                                                                                                                                                (s = n),
                                                                                                                                                                                (h =
                                                                                                                                                                                    (o = 0) === a
                                                                                                                                                                                        ? ((l = 138), 3)
                                                                                                                                                                                        : n === a
                                                                                                                                                                                        ? ((l = 6), 3)
                                                                                                                                                                                        : ((l = 7), 4)));
                                                                                                                                                                }
                                                                                                                                                                function F(t, e, r) {
                                                                                                                                                                    var i,
                                                                                                                                                                        n,
                                                                                                                                                                        s = -1,
                                                                                                                                                                        a = e[1],
                                                                                                                                                                        o = 0,
                                                                                                                                                                        l = 7,
                                                                                                                                                                        h = 4;
                                                                                                                                                                    for (0 === a && ((l = 138), (h = 3)), i = 0; i <= r; i++)
                                                                                                                                                                        if (((n = a), (a = e[2 * (i + 1) + 1]), !(++o < l && n === a))) {
                                                                                                                                                                            if (o < h) for (; E(t, n, t.bl_tree), 0 != --o; );
                                                                                                                                                                            else
                                                                                                                                                                                0 !== n
                                                                                                                                                                                    ? (n !== s && (E(t, n, t.bl_tree), o--),
                                                                                                                                                                                      E(t, 16, t.bl_tree),
                                                                                                                                                                                      S(t, o - 3, 2))
                                                                                                                                                                                    : o <= 10
                                                                                                                                                                                    ? (E(t, 17, t.bl_tree), S(t, o - 3, 3))
                                                                                                                                                                                    : (E(t, 18, t.bl_tree), S(t, o - 11, 7));
                                                                                                                                                                            (s = n),
                                                                                                                                                                                (h =
                                                                                                                                                                                    (o = 0) === a
                                                                                                                                                                                        ? ((l = 138), 3)
                                                                                                                                                                                        : n === a
                                                                                                                                                                                        ? ((l = 6), 3)
                                                                                                                                                                                        : ((l = 7), 4));
                                                                                                                                                                        }
                                                                                                                                                                }
                                                                                                                                                                n(g);
                                                                                                                                                                var L = !1;
                                                                                                                                                                function O(t, e, r, n) {
                                                                                                                                                                    var s, a, o;
                                                                                                                                                                    S(t, 0 + (n ? 1 : 0), 3),
                                                                                                                                                                        (a = e),
                                                                                                                                                                        (o = r),
                                                                                                                                                                        A((s = t)),
                                                                                                                                                                        w(s, o),
                                                                                                                                                                        w(s, ~o),
                                                                                                                                                                        i.arraySet(s.pending_buf, s.window, a, o, s.pending),
                                                                                                                                                                        (s.pending += o);
                                                                                                                                                                }
                                                                                                                                                                (r._tr_init = function (t) {
                                                                                                                                                                    L ||
                                                                                                                                                                        ((function () {
                                                                                                                                                                            var t,
                                                                                                                                                                                e,
                                                                                                                                                                                r,
                                                                                                                                                                                i,
                                                                                                                                                                                n,
                                                                                                                                                                                l = new Array(16);
                                                                                                                                                                            for (i = r = 0; i < 28; i++)
                                                                                                                                                                                for (u[i] = r, t = 0; t < 1 << s[i]; t++) d[r++] = i;
                                                                                                                                                                            for (d[r - 1] = i, i = n = 0; i < 16; i++)
                                                                                                                                                                                for (g[i] = n, t = 0; t < 1 << a[i]; t++) p[n++] = i;
                                                                                                                                                                            for (n >>= 7; i < 30; i++)
                                                                                                                                                                                for (g[i] = n << 7, t = 0; t < 1 << (a[i] - 7); t++)
                                                                                                                                                                                    p[256 + n++] = i;
                                                                                                                                                                            for (e = 0; e <= 15; e++) l[e] = 0;
                                                                                                                                                                            for (t = 0; t <= 143; ) (h[2 * t + 1] = 8), t++, l[8]++;
                                                                                                                                                                            for (; t <= 255; ) (h[2 * t + 1] = 9), t++, l[9]++;
                                                                                                                                                                            for (; t <= 279; ) (h[2 * t + 1] = 7), t++, l[7]++;
                                                                                                                                                                            for (; t <= 287; ) (h[2 * t + 1] = 8), t++, l[8]++;
                                                                                                                                                                            for (x(h, 287, l), t = 0; t < 30; t++)
                                                                                                                                                                                (c[2 * t + 1] = 5), (c[2 * t] = P(t, 5));
                                                                                                                                                                            (f = new v(h, s, 257, 286, 15)),
                                                                                                                                                                                (m = new v(c, a, 0, 30, 15)),
                                                                                                                                                                                (y = new v(new Array(0), o, 0, 19, 7));
                                                                                                                                                                        })(),
                                                                                                                                                                        (L = !0)),
                                                                                                                                                                        (t.l_desc = new b(t.dyn_ltree, f)),
                                                                                                                                                                        (t.d_desc = new b(t.dyn_dtree, m)),
                                                                                                                                                                        (t.bl_desc = new b(t.bl_tree, y)),
                                                                                                                                                                        (t.bi_buf = 0),
                                                                                                                                                                        (t.bi_valid = 0),
                                                                                                                                                                        k(t);
                                                                                                                                                                }),
                                                                                                                                                                    (r._tr_stored_block = O),
                                                                                                                                                                    (r._tr_flush_block = function (t, e, r, i) {
                                                                                                                                                                        var n,
                                                                                                                                                                            s,
                                                                                                                                                                            a = 0;
                                                                                                                                                                        0 < t.level
                                                                                                                                                                            ? (2 === t.strm.data_type &&
                                                                                                                                                                                  (t.strm.data_type = (function (t) {
                                                                                                                                                                                      var e,
                                                                                                                                                                                          r = 4093624447;
                                                                                                                                                                                      for (e = 0; e <= 31; e++, r >>>= 1)
                                                                                                                                                                                          if (1 & r && 0 !== t.dyn_ltree[2 * e]) return 0;
                                                                                                                                                                                      if (
                                                                                                                                                                                          0 !== t.dyn_ltree[18] ||
                                                                                                                                                                                          0 !== t.dyn_ltree[20] ||
                                                                                                                                                                                          0 !== t.dyn_ltree[26]
                                                                                                                                                                                      )
                                                                                                                                                                                          return 1;
                                                                                                                                                                                      for (e = 32; e < 256; e++)
                                                                                                                                                                                          if (0 !== t.dyn_ltree[2 * e]) return 1;
                                                                                                                                                                                      return 0;
                                                                                                                                                                                  })(t)),
                                                                                                                                                                              M(t, t.l_desc),
                                                                                                                                                                              M(t, t.d_desc),
                                                                                                                                                                              (a = (function (t) {
                                                                                                                                                                                  var e;
                                                                                                                                                                                  for (
                                                                                                                                                                                      D(t, t.dyn_ltree, t.l_desc.max_code),
                                                                                                                                                                                          D(t, t.dyn_dtree, t.d_desc.max_code),
                                                                                                                                                                                          M(t, t.bl_desc),
                                                                                                                                                                                          e = 18;
                                                                                                                                                                                      3 <= e && 0 === t.bl_tree[2 * l[e] + 1];
                                                                                                                                                                                      e--
                                                                                                                                                                                  );
                                                                                                                                                                                  return (t.opt_len += 3 * (e + 1) + 5 + 5 + 4), e;
                                                                                                                                                                              })(t)),
                                                                                                                                                                              (n = (t.opt_len + 3 + 7) >>> 3),
                                                                                                                                                                              (s = (t.static_len + 3 + 7) >>> 3) <= n && (n = s))
                                                                                                                                                                            : (n = s = r + 5),
                                                                                                                                                                            r + 4 <= n && -1 !== e
                                                                                                                                                                                ? O(t, e, r, i)
                                                                                                                                                                                : 4 === t.strategy || s === n
                                                                                                                                                                                ? (S(t, 2 + (i ? 1 : 0), 3), I(t, h, c))
                                                                                                                                                                                : (S(t, 4 + (i ? 1 : 0), 3),
                                                                                                                                                                                  (function (t, e, r, i) {
                                                                                                                                                                                      var n;
                                                                                                                                                                                      for (
                                                                                                                                                                                          S(t, e - 257, 5),
                                                                                                                                                                                              S(t, r - 1, 5),
                                                                                                                                                                                              S(t, i - 4, 4),
                                                                                                                                                                                              n = 0;
                                                                                                                                                                                          n < i;
                                                                                                                                                                                          n++
                                                                                                                                                                                      )
                                                                                                                                                                                          S(t, t.bl_tree[2 * l[n] + 1], 3);
                                                                                                                                                                                      F(t, t.dyn_ltree, e - 1), F(t, t.dyn_dtree, r - 1);
                                                                                                                                                                                  })(t, t.l_desc.max_code + 1, t.d_desc.max_code + 1, a + 1),
                                                                                                                                                                                  I(t, t.dyn_ltree, t.dyn_dtree)),
                                                                                                                                                                            k(t),
                                                                                                                                                                            i && A(t);
                                                                                                                                                                    }),
                                                                                                                                                                    (r._tr_tally = function (t, e, r) {
                                                                                                                                                                        return (
                                                                                                                                                                            (t.pending_buf[t.d_buf + 2 * t.last_lit] = (e >>> 8) & 255),
                                                                                                                                                                            (t.pending_buf[t.d_buf + 2 * t.last_lit + 1] = 255 & e),
                                                                                                                                                                            (t.pending_buf[t.l_buf + t.last_lit] = 255 & r),
                                                                                                                                                                            t.last_lit++,
                                                                                                                                                                            0 === e
                                                                                                                                                                                ? t.dyn_ltree[2 * r]++
                                                                                                                                                                                : (t.matches++,
                                                                                                                                                                                  e--,
                                                                                                                                                                                  t.dyn_ltree[2 * (d[r] + 256 + 1)]++,
                                                                                                                                                                                  t.dyn_dtree[2 * _(e)]++),
                                                                                                                                                                            t.last_lit === t.lit_bufsize - 1
                                                                                                                                                                        );
                                                                                                                                                                    }),
                                                                                                                                                                    (r._tr_align = function (t) {
                                                                                                                                                                        var e;
                                                                                                                                                                        S(t, 2, 3),
                                                                                                                                                                            E(t, 256, h),
                                                                                                                                                                            16 === (e = t).bi_valid
                                                                                                                                                                                ? (w(e, e.bi_buf), (e.bi_buf = 0), (e.bi_valid = 0))
                                                                                                                                                                                : 8 <= e.bi_valid &&
                                                                                                                                                                                  ((e.pending_buf[e.pending++] = 255 & e.bi_buf),
                                                                                                                                                                                  (e.bi_buf >>= 8),
                                                                                                                                                                                  (e.bi_valid -= 8));
                                                                                                                                                                    });
                                                                                                                                                            },
                                                                                                                                                            { "../utils/common": 41 },
                                                                                                                                                        ],
                                                                                                                                                        53: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                e.exports = function () {
                                                                                                                                                                    (this.input = null),
                                                                                                                                                                        (this.next_in = 0),
                                                                                                                                                                        (this.avail_in = 0),
                                                                                                                                                                        (this.total_in = 0),
                                                                                                                                                                        (this.output = null),
                                                                                                                                                                        (this.next_out = 0),
                                                                                                                                                                        (this.avail_out = 0),
                                                                                                                                                                        (this.total_out = 0),
                                                                                                                                                                        (this.msg = ""),
                                                                                                                                                                        (this.state = null),
                                                                                                                                                                        (this.data_type = 2),
                                                                                                                                                                        (this.adler = 0);
                                                                                                                                                                };
                                                                                                                                                            },
                                                                                                                                                            {},
                                                                                                                                                        ],
                                                                                                                                                        54: [
                                                                                                                                                            function (t, e, r) {
                                                                                                                                                                e.exports =
                                                                                                                                                                    "function" == typeof setImmediate
                                                                                                                                                                        ? setImmediate
                                                                                                                                                                        : function () {
                                                                                                                                                                              var t = [].slice.apply(arguments);
                                                                                                                                                                              t.splice(1, 0, 0), setTimeout.apply(null, t);
                                                                                                                                                                          };
                                                                                                                                                            },
                                                                                                                                                            {},
                                                                                                                                                        ],
                                                                                                                                                    },
                                                                                                                                                    {},
                                                                                                                                                    [10]
                                                                                                                                                )(10);
                                                                                                                                            });
                                                                                                                                        }.call(
                                                                                                                                            this,
                                                                                                                                            void 0 !== i ? i : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}
                                                                                                                                        ));
                                                                                                                                    },
                                                                                                                                    {},
                                                                                                                                ],
                                                                                                                            },
                                                                                                                            {},
                                                                                                                            [1]
                                                                                                                        )(1);
                                                                                                                    });
                                                                                                                }.call(this, void 0 !== i ? i : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}));
                                                                                                            },
                                                                                                            {},
                                                                                                        ],
                                                                                                    },
                                                                                                    {},
                                                                                                    [1]
                                                                                                )(1);
                                                                                            });
                                                                                        }.call(this, void 0 !== i ? i : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}));
                                                                                    },
                                                                                    {},
                                                                                ],
                                                                            },
                                                                            {},
                                                                            [1]
                                                                        )(1);
                                                                    });
                                                                }.call(this, void 0 !== i ? i : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}));
                                                            },
                                                            {},
                                                        ],
                                                    },
                                                    {},
                                                    [1]
                                                )(1);
                                            });
                                        }.call(this, void 0 !== commonjsGlobal ? commonjsGlobal : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}));
                                    },
                                    {},
                                ],
                            },
                            {},
                            [1]
                        )(1);
                    });
                const DOTLOTTIE_PLAYER_VERSION = "1.3.2",
                    LOTTIE_WEB_VERSION = "^5.10.0";
                var _templateObject$1,
                    styles = i$3(
                        _templateObject$1 ||
                            (_templateObject$1 = _taggedTemplateLiteral([
                                "\n  * {\n    box-sizing: border-box;\n  }\n\n  :host {\n    --lottie-player-toolbar-height: 35px;\n    --lottie-player-toolbar-background-color: transparent;\n    --lottie-player-toolbar-icon-color: #999;\n    --lottie-player-toolbar-icon-hover-color: #222;\n    --lottie-player-toolbar-icon-active-color: #555;\n    --lottie-player-seeker-track-color: #ccc;\n    --lottie-player-seeker-thumb-color: rgba(0, 107, 120, 0.8);\n    --lottie-player-seeker-display: block;\n\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n\n  .main {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    width: 100%;\n  }\n\n  .animation {\n    width: 100%;\n    height: 100%;\n    display: flex;\n  }\n  .animation.controls {\n    height: calc(100% - 35px);\n  }\n\n  .toolbar {\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    background-color: var(--lottie-player-toolbar-background-color);\n    margin: 0 5px;\n    height: 35px;\n  }\n\n  .toolbar button {\n    cursor: pointer;\n    fill: var(--lottie-player-toolbar-icon-color);\n    display: flex;\n    background: none;\n    border: 0;\n    padding: 0;\n    outline: none;\n    height: 100%;\n  }\n\n  .toolbar button:hover {\n    fill: var(--lottie-player-toolbar-icon-hover-color);\n  }\n\n  .toolbar button.active {\n    fill: var(--lottie-player-toolbar-icon-active-color);\n  }\n\n  .toolbar button.active:hover {\n    fill: var(--lottie-player-toolbar-icon-hover-color);\n  }\n\n  .toolbar button:focus {\n    outline: 1px dotted var(--lottie-player-toolbar-icon-active-color);\n  }\n\n  .toolbar button svg {\n  }\n\n  .toolbar button.disabled svg {\n    display: none;\n  }\n\n  .seeker {\n    -webkit-appearance: none;\n    width: 95%;\n    outline: none;\n    background-color: var(--lottie-player-toolbar-background-color);\n    display: var(--lottie-player-seeker-display);\n  }\n\n  .seeker::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 5px;\n    cursor: pointer;\n    background: var(--lottie-player-seeker-track-color);\n    border-radius: 3px;\n  }\n  .seeker::-webkit-slider-thumb {\n    height: 15px;\n    width: 15px;\n    border-radius: 50%;\n    background: var(--lottie-player-seeker-thumb-color);\n    cursor: pointer;\n    -webkit-appearance: none;\n    margin-top: -5px;\n  }\n  .seeker:focus::-webkit-slider-runnable-track {\n    background: #999;\n  }\n  .seeker::-moz-range-track {\n    width: 100%;\n    height: 5px;\n    cursor: pointer;\n    background: var(--lottie-player-seeker-track-color);\n    border-radius: 3px;\n  }\n  .seeker::-moz-range-thumb {\n    height: 15px;\n    width: 15px;\n    border-radius: 50%;\n    background: var(--lottie-player-seeker-thumb-color);\n    cursor: pointer;\n  }\n  .seeker::-ms-track {\n    width: 100%;\n    height: 5px;\n    cursor: pointer;\n    background: transparent;\n    border-color: transparent;\n    color: transparent;\n  }\n  .seeker::-ms-fill-lower {\n    background: var(--lottie-player-seeker-track-color);\n    border-radius: 3px;\n  }\n  .seeker::-ms-fill-upper {\n    background: var(--lottie-player-seeker-track-color);\n    border-radius: 3px;\n  }\n  .seeker::-ms-thumb {\n    border: 0;\n    height: 15px;\n    width: 15px;\n    border-radius: 50%;\n    background: var(--lottie-player-seeker-thumb-color);\n    cursor: pointer;\n  }\n  .seeker:focus::-ms-fill-lower {\n    background: var(--lottie-player-seeker-track-color);\n  }\n  .seeker:focus::-ms-fill-upper {\n    background: var(--lottie-player-seeker-track-color);\n  }\n\n  .error {\n    display: flex;\n    margin: auto;\n    justify-content: center;\n    height: 100%;\n    align-items: center;\n  }\n",
                            ]))
                    ),
                    _templateObject,
                    _templateObject2,
                    _templateObject3,
                    _templateObject4,
                    _templateObject5,
                    PlayerState,
                    PlayMode,
                    PlayerEvents;
                function fetchPath(t) {
                    var e;
                    const r = null === (e = t.split(".").pop()) || void 0 === e ? void 0 : e.toLowerCase();
                    let i = !1;
                    return (
                        "json" === r && (i = !0),
                        new Promise((e, r) => {
                            const n = new XMLHttpRequest();
                            n.open("GET", t, !0),
                                (n.responseType = i ? "json" : "arraybuffer"),
                                n.send(),
                                (n.onreadystatechange = function () {
                                    4 == n.readyState &&
                                        200 == n.status &&
                                        (i && e(n.response),
                                        jszip
                                            .loadAsync(n.response)
                                            .then((t) => {
                                                t.file("manifest.json")
                                                    .async("string")
                                                    .then((r) => {
                                                        const i = JSON.parse(r);
                                                        if (!("animations" in i)) throw new Error("Manifest not found");
                                                        if (0 === i.animations.length) throw new Error("No animations listed in the manifest");
                                                        const n = i.animations[0];
                                                        t.file("animations/".concat(n.id, ".json"))
                                                            .async("string")
                                                            .then((r) => {
                                                                const i = JSON.parse(r);
                                                                "assets" in i &&
                                                                    Promise.all(
                                                                        i.assets.map((e) => {
                                                                            if (e.p && null != t.file("images/".concat(e.p)))
                                                                                return new Promise((r) => {
                                                                                    const i = e.p.split(".").pop();
                                                                                    t.file("images/".concat(e.p))
                                                                                        .async("base64")
                                                                                        .then((t) => {
                                                                                            (e.p = "svg" === i || "svg+xml" === i ? "data:image/svg+xml;base64," + t : "data:;base64," + t), (e.e = 1), r();
                                                                                        });
                                                                                });
                                                                        })
                                                                    ).then(() => {
                                                                        e(i);
                                                                    });
                                                            });
                                                    });
                                            })
                                            .catch((t) => {
                                                r(t);
                                            }));
                                });
                        })
                    );
                }
                !(function (t) {
                    (t.Loading = "loading"), (t.Playing = "playing"), (t.Paused = "paused"), (t.Stopped = "stopped"), (t.Frozen = "frozen"), (t.Error = "error");
                })(PlayerState || (PlayerState = {})),
                    (function (t) {
                        (t.Normal = "normal"), (t.Bounce = "bounce");
                    })(PlayMode || (PlayMode = {})),
                    (function (t) {
                        (t.Load = "load"), (t.Error = "error"), (t.Ready = "ready"), (t.Play = "play"), (t.Pause = "pause"), (t.Stop = "stop"), (t.Freeze = "freeze"), (t.Loop = "loop"), (t.Complete = "complete"), (t.Frame = "frame");
                    })(PlayerEvents || (PlayerEvents = {}));
                let DotLottiePlayer = class extends s {
                    constructor() {
                        super(...arguments),
                            (this.mode = PlayMode.Normal),
                            (this.autoplay = !1),
                            (this.background = "transparent"),
                            (this.controls = !1),
                            (this.direction = 1),
                            (this.hover = !1),
                            (this.loop = !1),
                            (this.renderer = "svg"),
                            (this.speed = 1),
                            (this.currentState = PlayerState.Loading),
                            (this.intermission = 1),
                            (this._counter = 0);
                    }
                    _onVisibilityChange() {
                        document.hidden && this.currentState === PlayerState.Playing ? this.freeze() : this.currentState === PlayerState.Frozen && this.play();
                    }
                    _handleSeekChange(t) {
                        if (!this._lottie || isNaN(t.target.value)) return;
                        const e = (t.target.value / 100) * this._lottie.totalFrames;
                        this.seek(e);
                    }
                    isLottie(t) {
                        return ["v", "ip", "op", "layers", "fr", "w", "h"].every((e) => Object.prototype.hasOwnProperty.call(t, e));
                    }
                    parseSrc(t) {
                        if ("object" == typeof t) return t;
                        try {
                            return JSON.parse(t);
                        } catch (e) {
                            return new URL(t, window.location.href).toString();
                        }
                    }
                    async load(t, e) {
                        if (!this.shadowRoot) return;
                        const r = { container: this.container, loop: !1, autoplay: !1, renderer: this.renderer, rendererSettings: e || { scaleMode: "noScale", clearCanvas: !1, progressiveLoad: !0, hideOnTransparent: !0 } };
                        try {
                            let e = this.parseSrc(t);
                            if ("string" == typeof e && ((e = await fetchPath(e)), void 0 === e)) throw new Error("[dotLottie] No animation to load!");
                            if (!this.isLottie(e)) throw new Error("[dotLottie] Load method failing. Object is not a valid Lottie.");
                            this._lottie && this._lottie.destroy(), (this._lottie = lottie_svg.loadAnimation(Object.assign(Object.assign({}, r), { animationData: e })));
                        } catch (t) {
                            return (this.currentState = PlayerState.Error), void this.dispatchEvent(new CustomEvent(PlayerEvents.Error));
                        }
                        this._lottie &&
                            (this._lottie.addEventListener("enterFrame", () => {
                                (this.seeker = (this._lottie.currentFrame / this._lottie.totalFrames) * 100), this.dispatchEvent(new CustomEvent(PlayerEvents.Frame, { detail: { frame: this._lottie.currentFrame, seeker: this.seeker } }));
                            }),
                            this._lottie.addEventListener("complete", () => {
                                if (this.currentState === PlayerState.Playing) {
                                    if (!this.loop || (this.count && this._counter >= this.count)) {
                                        if ((this.dispatchEvent(new CustomEvent(PlayerEvents.Complete)), this.mode !== PlayMode.Bounce)) return;
                                        if (0 === this._lottie.currentFrame) return;
                                    }
                                    this.mode === PlayMode.Bounce
                                        ? (this.count && (this._counter += 0.5),
                                          setTimeout(() => {
                                              this.dispatchEvent(new CustomEvent(PlayerEvents.Loop)), this.currentState === PlayerState.Playing && (this._lottie.setDirection(-1 * this._lottie.playDirection), this._lottie.play());
                                          }, this.intermission))
                                        : (this.count && (this._counter += 1),
                                          window.setTimeout(() => {
                                              this.dispatchEvent(new CustomEvent(PlayerEvents.Loop)),
                                                  this.currentState === PlayerState.Playing && (-1 === this.direction ? (this.seek("99%"), this.play()) : (this._lottie.stop(), this._lottie.play()));
                                          }, this.intermission));
                                } else this.dispatchEvent(new CustomEvent(PlayerEvents.Complete));
                            }),
                            this._lottie.addEventListener("DOMLoaded", () => {
                                this.dispatchEvent(new CustomEvent(PlayerEvents.Ready));
                            }),
                            this._lottie.addEventListener("data_ready", () => {
                                this.dispatchEvent(new CustomEvent(PlayerEvents.Load));
                            }),
                            this._lottie.addEventListener("data_failed", () => {
                                (this.currentState = PlayerState.Error), this.dispatchEvent(new CustomEvent(PlayerEvents.Error));
                            }),
                            this.container.addEventListener("mouseenter", () => {
                                this.hover && this.currentState !== PlayerState.Playing && this.play();
                            }),
                            this.container.addEventListener("mouseleave", () => {
                                this.hover && this.currentState === PlayerState.Playing && this.stop();
                            }),
                            this.setSpeed(this.speed),
                            this.setDirection(this.direction),
                            this.autoplay && (-1 === this.direction && this.seek("100%"), this.play()));
                    }
                    getLottie() {
                        return this._lottie;
                    }
                    getVersions() {
                        return { lottieWebVersion: LOTTIE_WEB_VERSION, dotLottiePlayerVersion: DOTLOTTIE_PLAYER_VERSION };
                    }
                    play() {
                        this._lottie && (this._lottie.play(), (this.currentState = PlayerState.Playing), this.dispatchEvent(new CustomEvent(PlayerEvents.Play)));
                    }
                    pause() {
                        this._lottie && (this._lottie.pause(), (this.currentState = PlayerState.Paused), this.dispatchEvent(new CustomEvent(PlayerEvents.Pause)));
                    }
                    stop() {
                        this._lottie && ((this._counter = 0), this._lottie.stop(), (this.currentState = PlayerState.Stopped), this.dispatchEvent(new CustomEvent(PlayerEvents.Stop)));
                    }
                    seek(t) {
                        if (!this._lottie) return;
                        "number" == typeof t && (t = Math.round(t));
                        const e = t.toString().match(/^([0-9]+)(%?)$/);
                        if (!e) return;
                        const r = "%" === e[2] ? (this._lottie.totalFrames * Number(e[1])) / 100 : e[1];
                        (this.seeker = r), this.currentState === PlayerState.Playing ? this._lottie.goToAndPlay(r, !0) : (this._lottie.goToAndStop(r, !0), this._lottie.pause());
                    }
                    snapshot() {
                        let t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                        if (!this.shadowRoot) return;
                        const e = this.shadowRoot.querySelector(".animation svg"),
                            r = new XMLSerializer().serializeToString(e);
                        if (t) {
                            const t = document.createElement("a");
                            (t.href = "data:image/svg+xml;charset=utf-8," + encodeURIComponent(r)), (t.download = "download_" + this.seeker + ".svg"), document.body.appendChild(t), t.click(), document.body.removeChild(t);
                        }
                        return r;
                    }
                    freeze() {
                        this._lottie && (this._lottie.pause(), (this.currentState = PlayerState.Frozen), this.dispatchEvent(new CustomEvent(PlayerEvents.Freeze)));
                    }
                    setSpeed() {
                        let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
                        this._lottie && this._lottie.setSpeed(t);
                    }
                    setDirection(t) {
                        this._lottie && this._lottie.setDirection(t);
                    }
                    setLooping(t) {
                        this._lottie && ((this.loop = t), (this._lottie.loop = t));
                    }
                    togglePlay() {
                        return this.currentState === PlayerState.Playing ? this.pause() : this.play();
                    }
                    toggleLooping() {
                        this.setLooping(!this.loop);
                    }
                    static get styles() {
                        return styles;
                    }
                    async firstUpdated() {
                        "IntersectionObserver" in window &&
                            ((this._io = new IntersectionObserver((t) => {
                                t[0].isIntersecting ? this.currentState === PlayerState.Frozen && this.play() : this.currentState === PlayerState.Playing && this.freeze();
                            })),
                            this._io.observe(this.container)),
                            void 0 !== document.hidden && document.addEventListener("visibilitychange", () => this._onVisibilityChange()),
                            this.src && (await this.load(this.src));
                    }
                    disconnectedCallback() {
                        this._io && (this._io.disconnect(), (this._io = void 0)), this._lottie && this._lottie.destroy(), document.removeEventListener("visibilitychange", () => this._onVisibilityChange());
                    }
                    renderControls() {
                        const t = this.currentState === PlayerState.Playing,
                            e = this.currentState === PlayerState.Paused,
                            r = this.currentState === PlayerState.Stopped;
                        return y(
                            _templateObject ||
                                (_templateObject = _taggedTemplateLiteral([
                                    '\n      <div id="lottie-controls" aria-label="lottie-animation-controls" class="toolbar">\n        <button\n          id="lottie-play-button"\n          @click=',
                                    "\n          class=",
                                    '\n          style="align-items:center;"\n          tabindex="0"\n          aria-label="play-pause"\n        >\n          ',
                                    '\n        </button>\n        <button\n          id="lottie-stop-button"\n          @click=',
                                    "\n          class=",
                                    '\n          style="align-items:center;"\n          tabindex="0"\n          aria-label="stop"\n        >\n          <svg width="24" height="24" aria-hidden="true" focusable="false">\n            <path d="M6 6h12v12H6V6z" />\n          </svg>\n        </button>\n        <input\n          id="lottie-seeker-input"\n          class="seeker"\n          type="range"\n          min="0"\n          step="1"\n          max="100"\n          .value=',
                                    "\n          @input=",
                                    "\n          @mousedown=",
                                    "\n          @mouseup=",
                                    '\n          aria-valuemin="1"\n          aria-valuemax="100"\n          role="slider"\n          aria-valuenow=',
                                    '\n          tabindex="0"\n          aria-label="lottie-seek-input"\n        />\n        <button\n          id="lottie-loop-toggle"\n          @click=',
                                    "\n          class=",
                                    '\n          style="align-items:center;"\n          tabindex="0"\n          aria-label="loop-toggle"\n        >\n          <svg width="24" height="24" aria-hidden="true" focusable="false">\n            <path\n              d="M17.016 17.016v-4.031h1.969v6h-12v3l-3.984-3.984 3.984-3.984v3h10.031zM6.984 6.984v4.031H5.015v-6h12v-3l3.984 3.984-3.984 3.984v-3H6.984z"\n            />\n          </svg>\n        </button>\n      </div>\n    ',
                                ])),
                            this.togglePlay,
                            t || e ? "active" : "",
                            y(
                                t
                                    ? _templateObject2 ||
                                          (_templateObject2 = _taggedTemplateLiteral([
                                              '\n                <svg width="24" height="24" aria-hidden="true" focusable="false">\n                  <path d="M14.016 5.016H18v13.969h-3.984V5.016zM6 18.984V5.015h3.984v13.969H6z" />\n                </svg>\n              ',
                                          ]))
                                    : _templateObject3 ||
                                          (_templateObject3 = _taggedTemplateLiteral([
                                              '\n                <svg width="24" height="24" aria-hidden="true" focusable="false">\n                  <path d="M8.016 5.016L18.985 12 8.016 18.984V5.015z" />\n                </svg>\n              ',
                                          ]))
                            ),
                            this.stop,
                            r ? "active" : "",
                            this.seeker,
                            this._handleSeekChange,
                            () => {
                                (this._prevState = this.currentState), this.freeze();
                            },
                            () => {
                                this._prevState === PlayerState.Playing && this.play(), this.seek(this._lottie.currentFrame);
                            },
                            this.seeker,
                            this.toggleLooping,
                            this.loop ? "active" : ""
                        );
                    }
                    render() {
                        const t = this.controls ? "main controls" : "main",
                            e = this.controls ? "animation controls" : "animation";
                        return y(
                            _templateObject4 ||
                                (_templateObject4 = _taggedTemplateLiteral([
                                    '\n      <div id="animation-container" class=',
                                    ' lang="en" role="img">\n        <div id="animation" class=',
                                    ' style="background:',
                                    ';">\n          ',
                                    "\n        </div>\n        ",
                                    "\n      </div>\n    ",
                                ])),
                            t,
                            e,
                            this.background,
                            this.currentState === PlayerState.Error ? y(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([' <div class="error">⚠️</div> ']))) : void 0,
                            this.controls ? this.renderControls() : void 0
                        );
                    }
                };
                __decorate([i(".animation")], DotLottiePlayer.prototype, "container", void 0),
                    __decorate([e$5()], DotLottiePlayer.prototype, "mode", void 0),
                    __decorate([e$5({ type: Boolean })], DotLottiePlayer.prototype, "autoplay", void 0),
                    __decorate([e$5({ type: String, reflect: !0 })], DotLottiePlayer.prototype, "background", void 0),
                    __decorate([e$5({ type: Boolean })], DotLottiePlayer.prototype, "controls", void 0),
                    __decorate([e$5({ type: Number })], DotLottiePlayer.prototype, "count", void 0),
                    __decorate([e$5({ type: Number })], DotLottiePlayer.prototype, "direction", void 0),
                    __decorate([e$5({ type: Boolean })], DotLottiePlayer.prototype, "hover", void 0),
                    __decorate([e$5({ type: Boolean, reflect: !0 })], DotLottiePlayer.prototype, "loop", void 0),
                    __decorate([e$5({ type: String })], DotLottiePlayer.prototype, "renderer", void 0),
                    __decorate([e$5({ type: Number })], DotLottiePlayer.prototype, "speed", void 0),
                    __decorate([e$5({ type: String })], DotLottiePlayer.prototype, "src", void 0),
                    __decorate([e$5({ type: String })], DotLottiePlayer.prototype, "currentState", void 0),
                    __decorate([e$5()], DotLottiePlayer.prototype, "seeker", void 0),
                    __decorate([e$5()], DotLottiePlayer.prototype, "intermission", void 0),
                    (DotLottiePlayer = __decorate([e$6("dotlottie-player")], DotLottiePlayer));
            },
            843: () => {
                document.addEventListener("DOMContentLoaded", () => {
                    !(function () {
                        let t = document.querySelector(".video"),
                            e = document.getElementById("ly-play"),
                            r = document.getElementById("ly-play");
                        null !== t &&
                            (e.addEventListener("click", function () {
                                t.play(),
                                    (e.style.display = "none"),
                                    (r.style.display = "none"),
                                    t.requestFullscreen
                                        ? t.requestFullscreen()
                                        : t.ebkitRequestFullscreen
                                        ? t.webkitRequestFullscreen()
                                        : t.mozRequestFullScreen
                                        ? t.mozRequestFullScreen()
                                        : t.msRequestFullscreen
                                        ? t.msRequestFullscreen()
                                        : t.webkitEnterFullscreen && t.webkitEnterFullscreen();
                            }),
                            t.addEventListener("pause", function () {
                                t.pause(), (r.style.display = "block");
                            }),
                            t.addEventListener("ended", function () {
                                (r.style.display = "block"), (e.style.display = "block");
                            }),
                            t.addEventListener("click", function (e) {
                                e.preventDefault(), t.paused ? (t.play(), (r.style.display = "none")) : (t.pause(), (r.style.display = "block"));
                            }));
                    })();
                });
            },
            617: () => {
                const t = (t) => {
                        t.currentTarget.classList.contains("faq-active")
                            ? (t.currentTarget.classList.remove("faq-active"), t.currentTarget.lastElementChild.classList.add("hidden"), t.currentTarget.querySelector("#faq-toggle-icon").lastElementChild.classList.add("rotate-90"))
                            : (Array.from(o.children).forEach((t) => {
                                  t.classList.remove("faq-active"), t.lastElementChild.classList.add("hidden"), t.querySelector("#faq-toggle-icon").lastElementChild.classList.add("rotate-90");
                              }),
                              t.currentTarget.classList.add("faq-active"),
                              t.currentTarget.lastElementChild.classList.remove("hidden"),
                              t.currentTarget.querySelector("#faq-toggle-icon").lastElementChild.classList.remove("rotate-90"));
                    },
                    e = () => {
                        null !== o &&
                            o.childNodes.forEach((e) => {
                                e.addEventListener("click", t);
                            });
                    },
                    r = () => {
                        null !== o &&
                            o.childNodes.forEach((e) => {
                                e.removeEventListener("click", t);
                            });
                    },
                    i = (t) => {
                        let i = t.target.dataset.target;
                        "faq-brands" === i
                            ? (s.classList.add("hidden"), n.classList.remove("hidden"), r(), (o = document.getElementById("brand-faq-items")), e())
                            : "faq-creators" === i && (n.classList.add("hidden"), s.classList.remove("hidden"), r(), (o = document.getElementById("creators-faq-items")), e());
                    };
                let n, s, a, o;
                document.addEventListener("DOMContentLoaded", () => {
                    (n = document.getElementById("faq-brands")),
                        (s = document.getElementById("faq-creators")),
                        (o = document.getElementById("brand-faq-items")),
                        (a = document.querySelectorAll(".faq-selector")),
                        a.forEach((t) => t.addEventListener("click", i)),
                        e();
                });
            },
            570: () => {
                window.addEventListener("DOMContentLoaded", () => {
                    "brands" === document.querySelector("main").id
                        ? (() => {
                              let t = document.getElementById("fullscreen-image-1"),
                                  e = document.getElementById("fullscreen-image-2"),
                                  r = document.getElementById("fullscreen-image-3"),
                                  i = document.getElementById("fullscreen-image-4");
                              1024 <= window.innerWidth
                                  ? ((t.style.backgroundImage = "url('" + LOLLY_URL + "/images/brands-all-in-one-manegement-desktop.webp')"),
                                    (e.style.backgroundImage = "url('" + LOLLY_URL + "/images/brands-performance-based-desktop.webp')"),
                                    (r.style.backgroundImage = "url('" + LOLLY_URL + "/images/brands-vetted-creators-desktop.webp')"),
                                    (i.style.backgroundImage = "url('" + LOLLY_URL + "/images/brands-tracking-pixel-desktop.webp')"))
                                  : ((t.style.backgroundImage = "url('" + LOLLY_URL + "/images/brands-all-in-one-manegement-mobile.webp')"),
                                    (e.style.backgroundImage = "url('" + LOLLY_URL + "/images/brands-performance-based-mobile.webp')"),
                                    (r.style.backgroundImage = "url('" + LOLLY_URL + "/images/brands-vetted-creators-mobile.webp')"),
                                    (i.style.backgroundImage = "url('" + LOLLY_URL + "/images/brands-tracking-pixel-mobile.webp')"));
                          })()
                        : "creators" === document.querySelector("main").id &&
                          (() => {
                              let t = document.getElementById("fullscreen-image-1"),
                                  e = document.getElementById("fullscreen-image-2"),
                                  r = document.getElementById("fullscreen-image-3");
                              1024 <= window.innerWidth
                                  ? ((t.style.backgroundImage = "url('" + LOLLY_URL + "/images/creators-analyze-content-desktop.webp')"),
                                    (e.style.backgroundImage = "url('" + LOLLY_URL + "/images/creators-discover-brands-desktop.webp')"),
                                    (r.style.backgroundImage = "url('" + LOLLY_URL + "/images/creators-payment-protection-desktop.webp')"))
                                  : ((t.style.backgroundImage = "url('" + LOLLY_URL + "/images/creators-analyze-content-mobile.webp')"),
                                    (e.style.backgroundImage = "url('" + LOLLY_URL + "/images/creators-discover-brands-mobile.webp')"),
                                    (r.style.backgroundImage = "url('" + LOLLY_URL + "/images/creators-payment-protection-mobile.webp')"));
                          })();
                });
            },
            577: () => {
                let t,
                    e = document.querySelectorAll(".gform_wrapper form .gform_fields");
                document.querySelectorAll(".gform_wrapper"),
                    fetch("https://ipinfo.io/?token=db7984b59b5aa0")
                        .then((t) => t.json())
                        .then(function (r) {
                            (t = r),
                                e &&
                                    e.forEach((e) => {
                                        e.querySelectorAll(".country-code select option").forEach((e, r) => {
                                            if (r > 0) {
                                                let r = (function (t) {
                                                    return t.innerText.trim().slice(0, 2);
                                                })(e);
                                                r === t.country && (e.selected = "selected");
                                            }
                                        });
                                    });
                        });
            },
            510: () => {
                window.addEventListener("DOMContentLoaded", (t) => {
                    let e = document.getElementById("site-header-wrap"),
                        r = document.getElementById("menu-bar"),
                        i = document.getElementById("menu-close"),
                        n = document.getElementById("site-header-nav"),
                        s = (document.getElementById("site-header"), document.getElementById("header-cta-primary"));
                    r &&
                        n &&
                        (r.addEventListener("click", function () {
                            e.classList.add("bg-black"), e.classList.remove("bg-trans-black"), e.classList.add("h-screen"), r.classList.add("hidden"), i.classList.remove("hidden"), s.classList.add("hidden");
                        }),
                        i.addEventListener("click", function () {
                            setTimeout(() => {
                                e.classList.remove("bg-black"), e.classList.add("bg-trans-black"), r.classList.remove("hidden"), i.classList.add("hidden"), s.classList.remove("hidden");
                            }, 305),
                                e.classList.remove("h-screen");
                        }));
                });
            },
            567: (t, e, r) => {
                "use strict";
                function i(t) {
                    return null !== t && "object" == typeof t && "constructor" in t && t.constructor === Object;
                }
                function n(t = {}, e = {}) {
                    Object.keys(e).forEach((r) => {
                        void 0 === t[r] ? (t[r] = e[r]) : i(e[r]) && i(t[r]) && Object.keys(e[r]).length > 0 && n(t[r], e[r]);
                    });
                }
                r(510), r(570);
                const s = {
                    body: {},
                    addEventListener() {},
                    removeEventListener() {},
                    activeElement: { blur() {}, nodeName: "" },
                    querySelector: () => null,
                    querySelectorAll: () => [],
                    getElementById: () => null,
                    createEvent: () => ({ initEvent() {} }),
                    createElement: () => ({ children: [], childNodes: [], style: {}, setAttribute() {}, getElementsByTagName: () => [] }),
                    createElementNS: () => ({}),
                    importNode: () => null,
                    location: { hash: "", host: "", hostname: "", href: "", origin: "", pathname: "", protocol: "", search: "" },
                };
                function a() {
                    const t = "undefined" != typeof document ? document : {};
                    return n(t, s), t;
                }
                const o = {
                    document: s,
                    navigator: { userAgent: "" },
                    location: { hash: "", host: "", hostname: "", href: "", origin: "", pathname: "", protocol: "", search: "" },
                    history: { replaceState() {}, pushState() {}, go() {}, back() {} },
                    CustomEvent: function () {
                        return this;
                    },
                    addEventListener() {},
                    removeEventListener() {},
                    getComputedStyle: () => ({ getPropertyValue: () => "" }),
                    Image() {},
                    Date() {},
                    screen: {},
                    setTimeout() {},
                    clearTimeout() {},
                    matchMedia: () => ({}),
                    requestAnimationFrame: (t) => ("undefined" == typeof setTimeout ? (t(), null) : setTimeout(t, 0)),
                    cancelAnimationFrame(t) {
                        "undefined" != typeof setTimeout && clearTimeout(t);
                    },
                };
                function l() {
                    const t = "undefined" != typeof window ? window : {};
                    return n(t, o), t;
                }
                class h extends Array {
                    constructor(t) {
                        "number" == typeof t
                            ? super(t)
                            : (super(...(t || [])),
                              (function (t) {
                                  const e = t.__proto__;
                                  Object.defineProperty(t, "__proto__", {
                                      get: () => e,
                                      set(t) {
                                          e.__proto__ = t;
                                      },
                                  });
                              })(this));
                    }
                }
                function c(t = []) {
                    const e = [];
                    return (
                        t.forEach((t) => {
                            Array.isArray(t) ? e.push(...c(t)) : e.push(t);
                        }),
                        e
                    );
                }
                function p(t, e) {
                    return Array.prototype.filter.call(t, e);
                }
                function d(t, e) {
                    const r = l(),
                        i = a();
                    let n = [];
                    if (!e && t instanceof h) return t;
                    if (!t) return new h(n);
                    if ("string" == typeof t) {
                        const r = t.trim();
                        if (r.indexOf("<") >= 0 && r.indexOf(">") >= 0) {
                            let t = "div";
                            0 === r.indexOf("<li") && (t = "ul"),
                                0 === r.indexOf("<tr") && (t = "tbody"),
                                (0 !== r.indexOf("<td") && 0 !== r.indexOf("<th")) || (t = "tr"),
                                0 === r.indexOf("<tbody") && (t = "table"),
                                0 === r.indexOf("<option") && (t = "select");
                            const e = i.createElement(t);
                            e.innerHTML = r;
                            for (let t = 0; t < e.childNodes.length; t += 1) n.push(e.childNodes[t]);
                        } else
                            n = (function (t, e) {
                                if ("string" != typeof t) return [t];
                                const r = [],
                                    i = e.querySelectorAll(t);
                                for (let t = 0; t < i.length; t += 1) r.push(i[t]);
                                return r;
                            })(t.trim(), e || i);
                    } else if (t.nodeType || t === r || t === i) n.push(t);
                    else if (Array.isArray(t)) {
                        if (t instanceof h) return t;
                        n = t;
                    }
                    return new h(
                        (function (t) {
                            const e = [];
                            for (let r = 0; r < t.length; r += 1) -1 === e.indexOf(t[r]) && e.push(t[r]);
                            return e;
                        })(n)
                    );
                }
                d.fn = h.prototype;
                const u = "resize scroll".split(" ");
                function f(t) {
                    return function (...e) {
                        if (void 0 === e[0]) {
                            for (let e = 0; e < this.length; e += 1) u.indexOf(t) < 0 && (t in this[e] ? this[e][t]() : d(this[e]).trigger(t));
                            return this;
                        }
                        return this.on(t, ...e);
                    };
                }
                f("click"),
                    f("blur"),
                    f("focus"),
                    f("focusin"),
                    f("focusout"),
                    f("keyup"),
                    f("keydown"),
                    f("keypress"),
                    f("submit"),
                    f("change"),
                    f("mousedown"),
                    f("mousemove"),
                    f("mouseup"),
                    f("mouseenter"),
                    f("mouseleave"),
                    f("mouseout"),
                    f("mouseover"),
                    f("touchstart"),
                    f("touchend"),
                    f("touchmove"),
                    f("resize"),
                    f("scroll");
                const m = {
                    addClass: function (...t) {
                        const e = c(t.map((t) => t.split(" ")));
                        return (
                            this.forEach((t) => {
                                t.classList.add(...e);
                            }),
                            this
                        );
                    },
                    removeClass: function (...t) {
                        const e = c(t.map((t) => t.split(" ")));
                        return (
                            this.forEach((t) => {
                                t.classList.remove(...e);
                            }),
                            this
                        );
                    },
                    hasClass: function (...t) {
                        const e = c(t.map((t) => t.split(" ")));
                        return p(this, (t) => e.filter((e) => t.classList.contains(e)).length > 0).length > 0;
                    },
                    toggleClass: function (...t) {
                        const e = c(t.map((t) => t.split(" ")));
                        this.forEach((t) => {
                            e.forEach((e) => {
                                t.classList.toggle(e);
                            });
                        });
                    },
                    attr: function (t, e) {
                        if (1 === arguments.length && "string" == typeof t) return this[0] ? this[0].getAttribute(t) : void 0;
                        for (let r = 0; r < this.length; r += 1)
                            if (2 === arguments.length) this[r].setAttribute(t, e);
                            else for (const e in t) (this[r][e] = t[e]), this[r].setAttribute(e, t[e]);
                        return this;
                    },
                    removeAttr: function (t) {
                        for (let e = 0; e < this.length; e += 1) this[e].removeAttribute(t);
                        return this;
                    },
                    transform: function (t) {
                        for (let e = 0; e < this.length; e += 1) this[e].style.transform = t;
                        return this;
                    },
                    transition: function (t) {
                        for (let e = 0; e < this.length; e += 1) this[e].style.transitionDuration = "string" != typeof t ? `${t}ms` : t;
                        return this;
                    },
                    on: function (...t) {
                        let [e, r, i, n] = t;
                        function s(t) {
                            const e = t.target;
                            if (!e) return;
                            const n = t.target.dom7EventData || [];
                            if ((n.indexOf(t) < 0 && n.unshift(t), d(e).is(r))) i.apply(e, n);
                            else {
                                const t = d(e).parents();
                                for (let e = 0; e < t.length; e += 1) d(t[e]).is(r) && i.apply(t[e], n);
                            }
                        }
                        function a(t) {
                            const e = (t && t.target && t.target.dom7EventData) || [];
                            e.indexOf(t) < 0 && e.unshift(t), i.apply(this, e);
                        }
                        "function" == typeof t[1] && (([e, i, n] = t), (r = void 0)), n || (n = !1);
                        const o = e.split(" ");
                        let l;
                        for (let t = 0; t < this.length; t += 1) {
                            const e = this[t];
                            if (r)
                                for (l = 0; l < o.length; l += 1) {
                                    const t = o[l];
                                    e.dom7LiveListeners || (e.dom7LiveListeners = {}), e.dom7LiveListeners[t] || (e.dom7LiveListeners[t] = []), e.dom7LiveListeners[t].push({ listener: i, proxyListener: s }), e.addEventListener(t, s, n);
                                }
                            else
                                for (l = 0; l < o.length; l += 1) {
                                    const t = o[l];
                                    e.dom7Listeners || (e.dom7Listeners = {}), e.dom7Listeners[t] || (e.dom7Listeners[t] = []), e.dom7Listeners[t].push({ listener: i, proxyListener: a }), e.addEventListener(t, a, n);
                                }
                        }
                        return this;
                    },
                    off: function (...t) {
                        let [e, r, i, n] = t;
                        "function" == typeof t[1] && (([e, i, n] = t), (r = void 0)), n || (n = !1);
                        const s = e.split(" ");
                        for (let t = 0; t < s.length; t += 1) {
                            const e = s[t];
                            for (let t = 0; t < this.length; t += 1) {
                                const s = this[t];
                                let a;
                                if ((!r && s.dom7Listeners ? (a = s.dom7Listeners[e]) : r && s.dom7LiveListeners && (a = s.dom7LiveListeners[e]), a && a.length))
                                    for (let t = a.length - 1; t >= 0; t -= 1) {
                                        const r = a[t];
                                        (i && r.listener === i) || (i && r.listener && r.listener.dom7proxy && r.listener.dom7proxy === i)
                                            ? (s.removeEventListener(e, r.proxyListener, n), a.splice(t, 1))
                                            : i || (s.removeEventListener(e, r.proxyListener, n), a.splice(t, 1));
                                    }
                            }
                        }
                        return this;
                    },
                    trigger: function (...t) {
                        const e = l(),
                            r = t[0].split(" "),
                            i = t[1];
                        for (let n = 0; n < r.length; n += 1) {
                            const s = r[n];
                            for (let r = 0; r < this.length; r += 1) {
                                const n = this[r];
                                if (e.CustomEvent) {
                                    const r = new e.CustomEvent(s, { detail: i, bubbles: !0, cancelable: !0 });
                                    (n.dom7EventData = t.filter((t, e) => e > 0)), n.dispatchEvent(r), (n.dom7EventData = []), delete n.dom7EventData;
                                }
                            }
                        }
                        return this;
                    },
                    transitionEnd: function (t) {
                        const e = this;
                        return (
                            t &&
                                e.on("transitionend", function r(i) {
                                    i.target === this && (t.call(this, i), e.off("transitionend", r));
                                }),
                            this
                        );
                    },
                    outerWidth: function (t) {
                        if (this.length > 0) {
                            if (t) {
                                const t = this.styles();
                                return this[0].offsetWidth + parseFloat(t.getPropertyValue("margin-right")) + parseFloat(t.getPropertyValue("margin-left"));
                            }
                            return this[0].offsetWidth;
                        }
                        return null;
                    },
                    outerHeight: function (t) {
                        if (this.length > 0) {
                            if (t) {
                                const t = this.styles();
                                return this[0].offsetHeight + parseFloat(t.getPropertyValue("margin-top")) + parseFloat(t.getPropertyValue("margin-bottom"));
                            }
                            return this[0].offsetHeight;
                        }
                        return null;
                    },
                    styles: function () {
                        const t = l();
                        return this[0] ? t.getComputedStyle(this[0], null) : {};
                    },
                    offset: function () {
                        if (this.length > 0) {
                            const t = l(),
                                e = a(),
                                r = this[0],
                                i = r.getBoundingClientRect(),
                                n = e.body,
                                s = r.clientTop || n.clientTop || 0,
                                o = r.clientLeft || n.clientLeft || 0,
                                h = r === t ? t.scrollY : r.scrollTop,
                                c = r === t ? t.scrollX : r.scrollLeft;
                            return { top: i.top + h - s, left: i.left + c - o };
                        }
                        return null;
                    },
                    css: function (t, e) {
                        const r = l();
                        let i;
                        if (1 === arguments.length) {
                            if ("string" != typeof t) {
                                for (i = 0; i < this.length; i += 1) for (const e in t) this[i].style[e] = t[e];
                                return this;
                            }
                            if (this[0]) return r.getComputedStyle(this[0], null).getPropertyValue(t);
                        }
                        if (2 === arguments.length && "string" == typeof t) {
                            for (i = 0; i < this.length; i += 1) this[i].style[t] = e;
                            return this;
                        }
                        return this;
                    },
                    each: function (t) {
                        return t
                            ? (this.forEach((e, r) => {
                                  t.apply(e, [e, r]);
                              }),
                              this)
                            : this;
                    },
                    html: function (t) {
                        if (void 0 === t) return this[0] ? this[0].innerHTML : null;
                        for (let e = 0; e < this.length; e += 1) this[e].innerHTML = t;
                        return this;
                    },
                    text: function (t) {
                        if (void 0 === t) return this[0] ? this[0].textContent.trim() : null;
                        for (let e = 0; e < this.length; e += 1) this[e].textContent = t;
                        return this;
                    },
                    is: function (t) {
                        const e = l(),
                            r = a(),
                            i = this[0];
                        let n, s;
                        if (!i || void 0 === t) return !1;
                        if ("string" == typeof t) {
                            if (i.matches) return i.matches(t);
                            if (i.webkitMatchesSelector) return i.webkitMatchesSelector(t);
                            if (i.msMatchesSelector) return i.msMatchesSelector(t);
                            for (n = d(t), s = 0; s < n.length; s += 1) if (n[s] === i) return !0;
                            return !1;
                        }
                        if (t === r) return i === r;
                        if (t === e) return i === e;
                        if (t.nodeType || t instanceof h) {
                            for (n = t.nodeType ? [t] : t, s = 0; s < n.length; s += 1) if (n[s] === i) return !0;
                            return !1;
                        }
                        return !1;
                    },
                    index: function () {
                        let t,
                            e = this[0];
                        if (e) {
                            for (t = 0; null !== (e = e.previousSibling); ) 1 === e.nodeType && (t += 1);
                            return t;
                        }
                    },
                    eq: function (t) {
                        if (void 0 === t) return this;
                        const e = this.length;
                        if (t > e - 1) return d([]);
                        if (t < 0) {
                            const r = e + t;
                            return d(r < 0 ? [] : [this[r]]);
                        }
                        return d([this[t]]);
                    },
                    append: function (...t) {
                        let e;
                        const r = a();
                        for (let i = 0; i < t.length; i += 1) {
                            e = t[i];
                            for (let t = 0; t < this.length; t += 1)
                                if ("string" == typeof e) {
                                    const i = r.createElement("div");
                                    for (i.innerHTML = e; i.firstChild; ) this[t].appendChild(i.firstChild);
                                } else if (e instanceof h) for (let r = 0; r < e.length; r += 1) this[t].appendChild(e[r]);
                                else this[t].appendChild(e);
                        }
                        return this;
                    },
                    prepend: function (t) {
                        const e = a();
                        let r, i;
                        for (r = 0; r < this.length; r += 1)
                            if ("string" == typeof t) {
                                const n = e.createElement("div");
                                for (n.innerHTML = t, i = n.childNodes.length - 1; i >= 0; i -= 1) this[r].insertBefore(n.childNodes[i], this[r].childNodes[0]);
                            } else if (t instanceof h) for (i = 0; i < t.length; i += 1) this[r].insertBefore(t[i], this[r].childNodes[0]);
                            else this[r].insertBefore(t, this[r].childNodes[0]);
                        return this;
                    },
                    next: function (t) {
                        return this.length > 0
                            ? t
                                ? this[0].nextElementSibling && d(this[0].nextElementSibling).is(t)
                                    ? d([this[0].nextElementSibling])
                                    : d([])
                                : this[0].nextElementSibling
                                ? d([this[0].nextElementSibling])
                                : d([])
                            : d([]);
                    },
                    nextAll: function (t) {
                        const e = [];
                        let r = this[0];
                        if (!r) return d([]);
                        for (; r.nextElementSibling; ) {
                            const i = r.nextElementSibling;
                            t ? d(i).is(t) && e.push(i) : e.push(i), (r = i);
                        }
                        return d(e);
                    },
                    prev: function (t) {
                        if (this.length > 0) {
                            const e = this[0];
                            return t ? (e.previousElementSibling && d(e.previousElementSibling).is(t) ? d([e.previousElementSibling]) : d([])) : e.previousElementSibling ? d([e.previousElementSibling]) : d([]);
                        }
                        return d([]);
                    },
                    prevAll: function (t) {
                        const e = [];
                        let r = this[0];
                        if (!r) return d([]);
                        for (; r.previousElementSibling; ) {
                            const i = r.previousElementSibling;
                            t ? d(i).is(t) && e.push(i) : e.push(i), (r = i);
                        }
                        return d(e);
                    },
                    parent: function (t) {
                        const e = [];
                        for (let r = 0; r < this.length; r += 1) null !== this[r].parentNode && (t ? d(this[r].parentNode).is(t) && e.push(this[r].parentNode) : e.push(this[r].parentNode));
                        return d(e);
                    },
                    parents: function (t) {
                        const e = [];
                        for (let r = 0; r < this.length; r += 1) {
                            let i = this[r].parentNode;
                            for (; i; ) t ? d(i).is(t) && e.push(i) : e.push(i), (i = i.parentNode);
                        }
                        return d(e);
                    },
                    closest: function (t) {
                        let e = this;
                        return void 0 === t ? d([]) : (e.is(t) || (e = e.parents(t).eq(0)), e);
                    },
                    find: function (t) {
                        const e = [];
                        for (let r = 0; r < this.length; r += 1) {
                            const i = this[r].querySelectorAll(t);
                            for (let t = 0; t < i.length; t += 1) e.push(i[t]);
                        }
                        return d(e);
                    },
                    children: function (t) {
                        const e = [];
                        for (let r = 0; r < this.length; r += 1) {
                            const i = this[r].children;
                            for (let r = 0; r < i.length; r += 1) (t && !d(i[r]).is(t)) || e.push(i[r]);
                        }
                        return d(e);
                    },
                    filter: function (t) {
                        return d(p(this, t));
                    },
                    remove: function () {
                        for (let t = 0; t < this.length; t += 1) this[t].parentNode && this[t].parentNode.removeChild(this[t]);
                        return this;
                    },
                };
                Object.keys(m).forEach((t) => {
                    Object.defineProperty(d.fn, t, { value: m[t], writable: !0 });
                });
                const y = d;
                function g(t, e = 0) {
                    return setTimeout(t, e);
                }
                function v() {
                    return Date.now();
                }
                function b(t) {
                    return "object" == typeof t && null !== t && t.constructor && "Object" === Object.prototype.toString.call(t).slice(8, -1);
                }
                function _(...t) {
                    const e = Object(t[0]),
                        r = ["__proto__", "constructor", "prototype"];
                    for (let n = 1; n < t.length; n += 1) {
                        const s = t[n];
                        if (null != s && ((i = s), !("undefined" != typeof window && void 0 !== window.HTMLElement ? i instanceof HTMLElement : i && (1 === i.nodeType || 11 === i.nodeType)))) {
                            const t = Object.keys(Object(s)).filter((t) => r.indexOf(t) < 0);
                            for (let r = 0, i = t.length; r < i; r += 1) {
                                const i = t[r],
                                    n = Object.getOwnPropertyDescriptor(s, i);
                                void 0 !== n && n.enumerable && (b(e[i]) && b(s[i]) ? (s[i].__swiper__ ? (e[i] = s[i]) : _(e[i], s[i])) : !b(e[i]) && b(s[i]) ? ((e[i] = {}), s[i].__swiper__ ? (e[i] = s[i]) : _(e[i], s[i])) : (e[i] = s[i]));
                            }
                        }
                    }
                    var i;
                    return e;
                }
                function w(t, e, r) {
                    t.style.setProperty(e, r);
                }
                function S({ swiper: t, targetPosition: e, side: r }) {
                    const i = l(),
                        n = -t.translate;
                    let s,
                        a = null;
                    const o = t.params.speed;
                    (t.wrapperEl.style.scrollSnapType = "none"), i.cancelAnimationFrame(t.cssModeFrameID);
                    const h = e > n ? "next" : "prev",
                        c = (t, e) => ("next" === h && t >= e) || ("prev" === h && t <= e),
                        p = () => {
                            (s = new Date().getTime()), null === a && (a = s);
                            const l = Math.max(Math.min((s - a) / o, 1), 0),
                                h = 0.5 - Math.cos(l * Math.PI) / 2;
                            let d = n + h * (e - n);
                            if ((c(d, e) && (d = e), t.wrapperEl.scrollTo({ [r]: d }), c(d, e)))
                                return (
                                    (t.wrapperEl.style.overflow = "hidden"),
                                    (t.wrapperEl.style.scrollSnapType = ""),
                                    setTimeout(() => {
                                        (t.wrapperEl.style.overflow = ""), t.wrapperEl.scrollTo({ [r]: d });
                                    }),
                                    void i.cancelAnimationFrame(t.cssModeFrameID)
                                );
                            t.cssModeFrameID = i.requestAnimationFrame(p);
                        };
                    p();
                }
                let E, P, x;
                function k() {
                    return (
                        E ||
                            (E = (function () {
                                const t = l(),
                                    e = a();
                                return {
                                    smoothScroll: e.documentElement && "scrollBehavior" in e.documentElement.style,
                                    touch: !!("ontouchstart" in t || (t.DocumentTouch && e instanceof t.DocumentTouch)),
                                    passiveListener: (function () {
                                        let e = !1;
                                        try {
                                            const r = Object.defineProperty({}, "passive", {
                                                get() {
                                                    e = !0;
                                                },
                                            });
                                            t.addEventListener("testPassiveListener", null, r);
                                        } catch (t) {}
                                        return e;
                                    })(),
                                    gestures: "ongesturestart" in t,
                                };
                            })()),
                        E
                    );
                }
                const A = {
                        on(t, e, r) {
                            const i = this;
                            if (!i.eventsListeners || i.destroyed) return i;
                            if ("function" != typeof e) return i;
                            const n = r ? "unshift" : "push";
                            return (
                                t.split(" ").forEach((t) => {
                                    i.eventsListeners[t] || (i.eventsListeners[t] = []), i.eventsListeners[t][n](e);
                                }),
                                i
                            );
                        },
                        once(t, e, r) {
                            const i = this;
                            if (!i.eventsListeners || i.destroyed) return i;
                            if ("function" != typeof e) return i;
                            function n(...r) {
                                i.off(t, n), n.__emitterProxy && delete n.__emitterProxy, e.apply(i, r);
                            }
                            return (n.__emitterProxy = e), i.on(t, n, r);
                        },
                        onAny(t, e) {
                            const r = this;
                            if (!r.eventsListeners || r.destroyed) return r;
                            if ("function" != typeof t) return r;
                            const i = e ? "unshift" : "push";
                            return r.eventsAnyListeners.indexOf(t) < 0 && r.eventsAnyListeners[i](t), r;
                        },
                        offAny(t) {
                            const e = this;
                            if (!e.eventsListeners || e.destroyed) return e;
                            if (!e.eventsAnyListeners) return e;
                            const r = e.eventsAnyListeners.indexOf(t);
                            return r >= 0 && e.eventsAnyListeners.splice(r, 1), e;
                        },
                        off(t, e) {
                            const r = this;
                            return !r.eventsListeners || r.destroyed
                                ? r
                                : r.eventsListeners
                                ? (t.split(" ").forEach((t) => {
                                      void 0 === e
                                          ? (r.eventsListeners[t] = [])
                                          : r.eventsListeners[t] &&
                                            r.eventsListeners[t].forEach((i, n) => {
                                                (i === e || (i.__emitterProxy && i.__emitterProxy === e)) && r.eventsListeners[t].splice(n, 1);
                                            });
                                  }),
                                  r)
                                : r;
                        },
                        emit(...t) {
                            const e = this;
                            if (!e.eventsListeners || e.destroyed) return e;
                            if (!e.eventsListeners) return e;
                            let r, i, n;
                            return (
                                "string" == typeof t[0] || Array.isArray(t[0]) ? ((r = t[0]), (i = t.slice(1, t.length)), (n = e)) : ((r = t[0].events), (i = t[0].data), (n = t[0].context || e)),
                                i.unshift(n),
                                (Array.isArray(r) ? r : r.split(" ")).forEach((t) => {
                                    e.eventsAnyListeners &&
                                        e.eventsAnyListeners.length &&
                                        e.eventsAnyListeners.forEach((e) => {
                                            e.apply(n, [t, ...i]);
                                        }),
                                        e.eventsListeners &&
                                            e.eventsListeners[t] &&
                                            e.eventsListeners[t].forEach((t) => {
                                                t.apply(n, i);
                                            });
                                }),
                                e
                            );
                        },
                    },
                    T = {
                        updateSize: function () {
                            const t = this;
                            let e, r;
                            const i = t.$el;
                            (e = void 0 !== t.params.width && null !== t.params.width ? t.params.width : i[0].clientWidth),
                                (r = void 0 !== t.params.height && null !== t.params.height ? t.params.height : i[0].clientHeight),
                                (0 === e && t.isHorizontal()) ||
                                    (0 === r && t.isVertical()) ||
                                    ((e = e - parseInt(i.css("padding-left") || 0, 10) - parseInt(i.css("padding-right") || 0, 10)),
                                    (r = r - parseInt(i.css("padding-top") || 0, 10) - parseInt(i.css("padding-bottom") || 0, 10)),
                                    Number.isNaN(e) && (e = 0),
                                    Number.isNaN(r) && (r = 0),
                                    Object.assign(t, { width: e, height: r, size: t.isHorizontal() ? e : r }));
                        },
                        updateSlides: function () {
                            const t = this;
                            function e(e) {
                                return t.isHorizontal()
                                    ? e
                                    : {
                                          width: "height",
                                          "margin-top": "margin-left",
                                          "margin-bottom ": "margin-right",
                                          "margin-left": "margin-top",
                                          "margin-right": "margin-bottom",
                                          "padding-left": "padding-top",
                                          "padding-right": "padding-bottom",
                                          marginRight: "marginBottom",
                                      }[e];
                            }
                            function r(t, r) {
                                return parseFloat(t.getPropertyValue(e(r)) || 0);
                            }
                            const i = t.params,
                                { $wrapperEl: n, size: s, rtlTranslate: a, wrongRTL: o } = t,
                                l = t.virtual && i.virtual.enabled,
                                h = l ? t.virtual.slides.length : t.slides.length,
                                c = n.children(`.${t.params.slideClass}`),
                                p = l ? t.virtual.slides.length : c.length;
                            let d = [];
                            const u = [],
                                f = [];
                            let m = i.slidesOffsetBefore;
                            "function" == typeof m && (m = i.slidesOffsetBefore.call(t));
                            let y = i.slidesOffsetAfter;
                            "function" == typeof y && (y = i.slidesOffsetAfter.call(t));
                            const g = t.snapGrid.length,
                                v = t.slidesGrid.length;
                            let b = i.spaceBetween,
                                _ = -m,
                                S = 0,
                                E = 0;
                            if (void 0 === s) return;
                            "string" == typeof b && b.indexOf("%") >= 0 && (b = (parseFloat(b.replace("%", "")) / 100) * s),
                                (t.virtualSize = -b),
                                a ? c.css({ marginLeft: "", marginBottom: "", marginTop: "" }) : c.css({ marginRight: "", marginBottom: "", marginTop: "" }),
                                i.centeredSlides && i.cssMode && (w(t.wrapperEl, "--swiper-centered-offset-before", ""), w(t.wrapperEl, "--swiper-centered-offset-after", ""));
                            const P = i.grid && i.grid.rows > 1 && t.grid;
                            let x;
                            P && t.grid.initSlides(p);
                            const k = "auto" === i.slidesPerView && i.breakpoints && Object.keys(i.breakpoints).filter((t) => void 0 !== i.breakpoints[t].slidesPerView).length > 0;
                            for (let n = 0; n < p; n += 1) {
                                x = 0;
                                const a = c.eq(n);
                                if ((P && t.grid.updateSlide(n, a, p, e), "none" !== a.css("display"))) {
                                    if ("auto" === i.slidesPerView) {
                                        k && (c[n].style[e("width")] = "");
                                        const s = getComputedStyle(a[0]),
                                            o = a[0].style.transform,
                                            l = a[0].style.webkitTransform;
                                        if ((o && (a[0].style.transform = "none"), l && (a[0].style.webkitTransform = "none"), i.roundLengths)) x = t.isHorizontal() ? a.outerWidth(!0) : a.outerHeight(!0);
                                        else {
                                            const t = r(s, "width"),
                                                e = r(s, "padding-left"),
                                                i = r(s, "padding-right"),
                                                n = r(s, "margin-left"),
                                                o = r(s, "margin-right"),
                                                l = s.getPropertyValue("box-sizing");
                                            if (l && "border-box" === l) x = t + n + o;
                                            else {
                                                const { clientWidth: r, offsetWidth: s } = a[0];
                                                x = t + e + i + n + o + (s - r);
                                            }
                                        }
                                        o && (a[0].style.transform = o), l && (a[0].style.webkitTransform = l), i.roundLengths && (x = Math.floor(x));
                                    } else (x = (s - (i.slidesPerView - 1) * b) / i.slidesPerView), i.roundLengths && (x = Math.floor(x)), c[n] && (c[n].style[e("width")] = `${x}px`);
                                    c[n] && (c[n].swiperSlideSize = x),
                                        f.push(x),
                                        i.centeredSlides
                                            ? ((_ = _ + x / 2 + S / 2 + b),
                                              0 === S && 0 !== n && (_ = _ - s / 2 - b),
                                              0 === n && (_ = _ - s / 2 - b),
                                              Math.abs(_) < 0.001 && (_ = 0),
                                              i.roundLengths && (_ = Math.floor(_)),
                                              E % i.slidesPerGroup == 0 && d.push(_),
                                              u.push(_))
                                            : (i.roundLengths && (_ = Math.floor(_)), (E - Math.min(t.params.slidesPerGroupSkip, E)) % t.params.slidesPerGroup == 0 && d.push(_), u.push(_), (_ = _ + x + b)),
                                        (t.virtualSize += x + b),
                                        (S = x),
                                        (E += 1);
                                }
                            }
                            if (
                                ((t.virtualSize = Math.max(t.virtualSize, s) + y),
                                a && o && ("slide" === i.effect || "coverflow" === i.effect) && n.css({ width: `${t.virtualSize + i.spaceBetween}px` }),
                                i.setWrapperSize && n.css({ [e("width")]: `${t.virtualSize + i.spaceBetween}px` }),
                                P && t.grid.updateWrapperSize(x, d, e),
                                !i.centeredSlides)
                            ) {
                                const e = [];
                                for (let r = 0; r < d.length; r += 1) {
                                    let n = d[r];
                                    i.roundLengths && (n = Math.floor(n)), d[r] <= t.virtualSize - s && e.push(n);
                                }
                                (d = e), Math.floor(t.virtualSize - s) - Math.floor(d[d.length - 1]) > 1 && d.push(t.virtualSize - s);
                            }
                            if ((0 === d.length && (d = [0]), 0 !== i.spaceBetween)) {
                                const r = t.isHorizontal() && a ? "marginLeft" : e("marginRight");
                                c.filter((t, e) => !i.cssMode || e !== c.length - 1).css({ [r]: `${b}px` });
                            }
                            if (i.centeredSlides && i.centeredSlidesBounds) {
                                let t = 0;
                                f.forEach((e) => {
                                    t += e + (i.spaceBetween ? i.spaceBetween : 0);
                                }),
                                    (t -= i.spaceBetween);
                                const e = t - s;
                                d = d.map((t) => (t < 0 ? -m : t > e ? e + y : t));
                            }
                            if (i.centerInsufficientSlides) {
                                let t = 0;
                                if (
                                    (f.forEach((e) => {
                                        t += e + (i.spaceBetween ? i.spaceBetween : 0);
                                    }),
                                    (t -= i.spaceBetween),
                                    t < s)
                                ) {
                                    const e = (s - t) / 2;
                                    d.forEach((t, r) => {
                                        d[r] = t - e;
                                    }),
                                        u.forEach((t, r) => {
                                            u[r] = t + e;
                                        });
                                }
                            }
                            if ((Object.assign(t, { slides: c, snapGrid: d, slidesGrid: u, slidesSizesGrid: f }), i.centeredSlides && i.cssMode && !i.centeredSlidesBounds)) {
                                w(t.wrapperEl, "--swiper-centered-offset-before", -d[0] + "px"), w(t.wrapperEl, "--swiper-centered-offset-after", t.size / 2 - f[f.length - 1] / 2 + "px");
                                const e = -t.snapGrid[0],
                                    r = -t.slidesGrid[0];
                                (t.snapGrid = t.snapGrid.map((t) => t + e)), (t.slidesGrid = t.slidesGrid.map((t) => t + r));
                            }
                            if (
                                (p !== h && t.emit("slidesLengthChange"),
                                d.length !== g && (t.params.watchOverflow && t.checkOverflow(), t.emit("snapGridLengthChange")),
                                u.length !== v && t.emit("slidesGridLengthChange"),
                                i.watchSlidesProgress && t.updateSlidesOffset(),
                                !(l || i.cssMode || ("slide" !== i.effect && "fade" !== i.effect)))
                            ) {
                                const e = `${i.containerModifierClass}backface-hidden`,
                                    r = t.$el.hasClass(e);
                                p <= i.maxBackfaceHiddenSlides ? r || t.$el.addClass(e) : r && t.$el.removeClass(e);
                            }
                        },
                        updateAutoHeight: function (t) {
                            const e = this,
                                r = [],
                                i = e.virtual && e.params.virtual.enabled;
                            let n,
                                s = 0;
                            "number" == typeof t ? e.setTransition(t) : !0 === t && e.setTransition(e.params.speed);
                            const a = (t) => (i ? e.slides.filter((e) => parseInt(e.getAttribute("data-swiper-slide-index"), 10) === t)[0] : e.slides.eq(t)[0]);
                            if ("auto" !== e.params.slidesPerView && e.params.slidesPerView > 1)
                                if (e.params.centeredSlides)
                                    (e.visibleSlides || y([])).each((t) => {
                                        r.push(t);
                                    });
                                else
                                    for (n = 0; n < Math.ceil(e.params.slidesPerView); n += 1) {
                                        const t = e.activeIndex + n;
                                        if (t > e.slides.length && !i) break;
                                        r.push(a(t));
                                    }
                            else r.push(a(e.activeIndex));
                            for (n = 0; n < r.length; n += 1)
                                if (void 0 !== r[n]) {
                                    const t = r[n].offsetHeight;
                                    s = t > s ? t : s;
                                }
                            (s || 0 === s) && e.$wrapperEl.css("height", `${s}px`);
                        },
                        updateSlidesOffset: function () {
                            const t = this,
                                e = t.slides;
                            for (let r = 0; r < e.length; r += 1) e[r].swiperSlideOffset = t.isHorizontal() ? e[r].offsetLeft : e[r].offsetTop;
                        },
                        updateSlidesProgress: function (t = (this && this.translate) || 0) {
                            const e = this,
                                r = e.params,
                                { slides: i, rtlTranslate: n, snapGrid: s } = e;
                            if (0 === i.length) return;
                            void 0 === i[0].swiperSlideOffset && e.updateSlidesOffset();
                            let a = -t;
                            n && (a = t), i.removeClass(r.slideVisibleClass), (e.visibleSlidesIndexes = []), (e.visibleSlides = []);
                            for (let t = 0; t < i.length; t += 1) {
                                const o = i[t];
                                let l = o.swiperSlideOffset;
                                r.cssMode && r.centeredSlides && (l -= i[0].swiperSlideOffset);
                                const h = (a + (r.centeredSlides ? e.minTranslate() : 0) - l) / (o.swiperSlideSize + r.spaceBetween),
                                    c = (a - s[0] + (r.centeredSlides ? e.minTranslate() : 0) - l) / (o.swiperSlideSize + r.spaceBetween),
                                    p = -(a - l),
                                    d = p + e.slidesSizesGrid[t];
                                ((p >= 0 && p < e.size - 1) || (d > 1 && d <= e.size) || (p <= 0 && d >= e.size)) && (e.visibleSlides.push(o), e.visibleSlidesIndexes.push(t), i.eq(t).addClass(r.slideVisibleClass)),
                                    (o.progress = n ? -h : h),
                                    (o.originalProgress = n ? -c : c);
                            }
                            e.visibleSlides = y(e.visibleSlides);
                        },
                        updateProgress: function (t) {
                            const e = this;
                            if (void 0 === t) {
                                const r = e.rtlTranslate ? -1 : 1;
                                t = (e && e.translate && e.translate * r) || 0;
                            }
                            const r = e.params,
                                i = e.maxTranslate() - e.minTranslate();
                            let { progress: n, isBeginning: s, isEnd: a } = e;
                            const o = s,
                                l = a;
                            0 === i ? ((n = 0), (s = !0), (a = !0)) : ((n = (t - e.minTranslate()) / i), (s = n <= 0), (a = n >= 1)),
                                Object.assign(e, { progress: n, isBeginning: s, isEnd: a }),
                                (r.watchSlidesProgress || (r.centeredSlides && r.autoHeight)) && e.updateSlidesProgress(t),
                                s && !o && e.emit("reachBeginning toEdge"),
                                a && !l && e.emit("reachEnd toEdge"),
                                ((o && !s) || (l && !a)) && e.emit("fromEdge"),
                                e.emit("progress", n);
                        },
                        updateSlidesClasses: function () {
                            const t = this,
                                { slides: e, params: r, $wrapperEl: i, activeIndex: n, realIndex: s } = t,
                                a = t.virtual && r.virtual.enabled;
                            let o;
                            e.removeClass(`${r.slideActiveClass} ${r.slideNextClass} ${r.slidePrevClass} ${r.slideDuplicateActiveClass} ${r.slideDuplicateNextClass} ${r.slideDuplicatePrevClass}`),
                                (o = a ? t.$wrapperEl.find(`.${r.slideClass}[data-swiper-slide-index="${n}"]`) : e.eq(n)),
                                o.addClass(r.slideActiveClass),
                                r.loop &&
                                    (o.hasClass(r.slideDuplicateClass)
                                        ? i.children(`.${r.slideClass}:not(.${r.slideDuplicateClass})[data-swiper-slide-index="${s}"]`).addClass(r.slideDuplicateActiveClass)
                                        : i.children(`.${r.slideClass}.${r.slideDuplicateClass}[data-swiper-slide-index="${s}"]`).addClass(r.slideDuplicateActiveClass));
                            let l = o.nextAll(`.${r.slideClass}`).eq(0).addClass(r.slideNextClass);
                            r.loop && 0 === l.length && ((l = e.eq(0)), l.addClass(r.slideNextClass));
                            let h = o.prevAll(`.${r.slideClass}`).eq(0).addClass(r.slidePrevClass);
                            r.loop && 0 === h.length && ((h = e.eq(-1)), h.addClass(r.slidePrevClass)),
                                r.loop &&
                                    (l.hasClass(r.slideDuplicateClass)
                                        ? i.children(`.${r.slideClass}:not(.${r.slideDuplicateClass})[data-swiper-slide-index="${l.attr("data-swiper-slide-index")}"]`).addClass(r.slideDuplicateNextClass)
                                        : i.children(`.${r.slideClass}.${r.slideDuplicateClass}[data-swiper-slide-index="${l.attr("data-swiper-slide-index")}"]`).addClass(r.slideDuplicateNextClass),
                                    h.hasClass(r.slideDuplicateClass)
                                        ? i.children(`.${r.slideClass}:not(.${r.slideDuplicateClass})[data-swiper-slide-index="${h.attr("data-swiper-slide-index")}"]`).addClass(r.slideDuplicatePrevClass)
                                        : i.children(`.${r.slideClass}.${r.slideDuplicateClass}[data-swiper-slide-index="${h.attr("data-swiper-slide-index")}"]`).addClass(r.slideDuplicatePrevClass)),
                                t.emitSlidesClasses();
                        },
                        updateActiveIndex: function (t) {
                            const e = this,
                                r = e.rtlTranslate ? e.translate : -e.translate,
                                { slidesGrid: i, snapGrid: n, params: s, activeIndex: a, realIndex: o, snapIndex: l } = e;
                            let h,
                                c = t;
                            if (void 0 === c) {
                                for (let t = 0; t < i.length; t += 1) void 0 !== i[t + 1] ? (r >= i[t] && r < i[t + 1] - (i[t + 1] - i[t]) / 2 ? (c = t) : r >= i[t] && r < i[t + 1] && (c = t + 1)) : r >= i[t] && (c = t);
                                s.normalizeSlideIndex && (c < 0 || void 0 === c) && (c = 0);
                            }
                            if (n.indexOf(r) >= 0) h = n.indexOf(r);
                            else {
                                const t = Math.min(s.slidesPerGroupSkip, c);
                                h = t + Math.floor((c - t) / s.slidesPerGroup);
                            }
                            if ((h >= n.length && (h = n.length - 1), c === a)) return void (h !== l && ((e.snapIndex = h), e.emit("snapIndexChange")));
                            const p = parseInt(e.slides.eq(c).attr("data-swiper-slide-index") || c, 10);
                            Object.assign(e, { snapIndex: h, realIndex: p, previousIndex: a, activeIndex: c }),
                                e.emit("activeIndexChange"),
                                e.emit("snapIndexChange"),
                                o !== p && e.emit("realIndexChange"),
                                (e.initialized || e.params.runCallbacksOnInit) && e.emit("slideChange");
                        },
                        updateClickedSlide: function (t) {
                            const e = this,
                                r = e.params,
                                i = y(t).closest(`.${r.slideClass}`)[0];
                            let n,
                                s = !1;
                            if (i)
                                for (let t = 0; t < e.slides.length; t += 1)
                                    if (e.slides[t] === i) {
                                        (s = !0), (n = t);
                                        break;
                                    }
                            if (!i || !s) return (e.clickedSlide = void 0), void (e.clickedIndex = void 0);
                            (e.clickedSlide = i),
                                e.virtual && e.params.virtual.enabled ? (e.clickedIndex = parseInt(y(i).attr("data-swiper-slide-index"), 10)) : (e.clickedIndex = n),
                                r.slideToClickedSlide && void 0 !== e.clickedIndex && e.clickedIndex !== e.activeIndex && e.slideToClickedSlide();
                        },
                    };
                function C({ swiper: t, runCallbacks: e, direction: r, step: i }) {
                    const { activeIndex: n, previousIndex: s } = t;
                    let a = r;
                    if ((a || (a = n > s ? "next" : n < s ? "prev" : "reset"), t.emit(`transition${i}`), e && n !== s)) {
                        if ("reset" === a) return void t.emit(`slideResetTransition${i}`);
                        t.emit(`slideChangeTransition${i}`), "next" === a ? t.emit(`slideNextTransition${i}`) : t.emit(`slidePrevTransition${i}`);
                    }
                }
                const I = {
                    slideTo: function (t = 0, e = this.params.speed, r = !0, i, n) {
                        if ("number" != typeof t && "string" != typeof t) throw new Error(`The 'index' argument cannot have type other than 'number' or 'string'. [${typeof t}] given.`);
                        if ("string" == typeof t) {
                            const e = parseInt(t, 10);
                            if (!isFinite(e)) throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${t}] given.`);
                            t = e;
                        }
                        const s = this;
                        let a = t;
                        a < 0 && (a = 0);
                        const { params: o, snapGrid: l, slidesGrid: h, previousIndex: c, activeIndex: p, rtlTranslate: d, wrapperEl: u, enabled: f } = s;
                        if ((s.animating && o.preventInteractionOnTransition) || (!f && !i && !n)) return !1;
                        const m = Math.min(s.params.slidesPerGroupSkip, a);
                        let y = m + Math.floor((a - m) / s.params.slidesPerGroup);
                        y >= l.length && (y = l.length - 1);
                        const g = -l[y];
                        if (o.normalizeSlideIndex)
                            for (let t = 0; t < h.length; t += 1) {
                                const e = -Math.floor(100 * g),
                                    r = Math.floor(100 * h[t]),
                                    i = Math.floor(100 * h[t + 1]);
                                void 0 !== h[t + 1] ? (e >= r && e < i - (i - r) / 2 ? (a = t) : e >= r && e < i && (a = t + 1)) : e >= r && (a = t);
                            }
                        if (s.initialized && a !== p) {
                            if (!s.allowSlideNext && g < s.translate && g < s.minTranslate()) return !1;
                            if (!s.allowSlidePrev && g > s.translate && g > s.maxTranslate() && (p || 0) !== a) return !1;
                        }
                        let v;
                        if ((a !== (c || 0) && r && s.emit("beforeSlideChangeStart"), s.updateProgress(g), (v = a > p ? "next" : a < p ? "prev" : "reset"), (d && -g === s.translate) || (!d && g === s.translate)))
                            return s.updateActiveIndex(a), o.autoHeight && s.updateAutoHeight(), s.updateSlidesClasses(), "slide" !== o.effect && s.setTranslate(g), "reset" !== v && (s.transitionStart(r, v), s.transitionEnd(r, v)), !1;
                        if (o.cssMode) {
                            const t = s.isHorizontal(),
                                r = d ? g : -g;
                            if (0 === e) {
                                const e = s.virtual && s.params.virtual.enabled;
                                e && ((s.wrapperEl.style.scrollSnapType = "none"), (s._immediateVirtual = !0)),
                                    (u[t ? "scrollLeft" : "scrollTop"] = r),
                                    e &&
                                        requestAnimationFrame(() => {
                                            (s.wrapperEl.style.scrollSnapType = ""), (s._swiperImmediateVirtual = !1);
                                        });
                            } else {
                                if (!s.support.smoothScroll) return S({ swiper: s, targetPosition: r, side: t ? "left" : "top" }), !0;
                                u.scrollTo({ [t ? "left" : "top"]: r, behavior: "smooth" });
                            }
                            return !0;
                        }
                        return (
                            s.setTransition(e),
                            s.setTranslate(g),
                            s.updateActiveIndex(a),
                            s.updateSlidesClasses(),
                            s.emit("beforeTransitionStart", e, i),
                            s.transitionStart(r, v),
                            0 === e
                                ? s.transitionEnd(r, v)
                                : s.animating ||
                                  ((s.animating = !0),
                                  s.onSlideToWrapperTransitionEnd ||
                                      (s.onSlideToWrapperTransitionEnd = function (t) {
                                          s &&
                                              !s.destroyed &&
                                              t.target === this &&
                                              (s.$wrapperEl[0].removeEventListener("transitionend", s.onSlideToWrapperTransitionEnd),
                                              s.$wrapperEl[0].removeEventListener("webkitTransitionEnd", s.onSlideToWrapperTransitionEnd),
                                              (s.onSlideToWrapperTransitionEnd = null),
                                              delete s.onSlideToWrapperTransitionEnd,
                                              s.transitionEnd(r, v));
                                      }),
                                  s.$wrapperEl[0].addEventListener("transitionend", s.onSlideToWrapperTransitionEnd),
                                  s.$wrapperEl[0].addEventListener("webkitTransitionEnd", s.onSlideToWrapperTransitionEnd)),
                            !0
                        );
                    },
                    slideToLoop: function (t = 0, e = this.params.speed, r = !0, i) {
                        if ("string" == typeof t) {
                            const e = parseInt(t, 10);
                            if (!isFinite(e)) throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${t}] given.`);
                            t = e;
                        }
                        const n = this;
                        let s = t;
                        return n.params.loop && (s += n.loopedSlides), n.slideTo(s, e, r, i);
                    },
                    slideNext: function (t = this.params.speed, e = !0, r) {
                        const i = this,
                            { animating: n, enabled: s, params: a } = i;
                        if (!s) return i;
                        let o = a.slidesPerGroup;
                        "auto" === a.slidesPerView && 1 === a.slidesPerGroup && a.slidesPerGroupAuto && (o = Math.max(i.slidesPerViewDynamic("current", !0), 1));
                        const l = i.activeIndex < a.slidesPerGroupSkip ? 1 : o;
                        if (a.loop) {
                            if (n && a.loopPreventsSlide) return !1;
                            i.loopFix(), (i._clientLeft = i.$wrapperEl[0].clientLeft);
                        }
                        return a.rewind && i.isEnd ? i.slideTo(0, t, e, r) : i.slideTo(i.activeIndex + l, t, e, r);
                    },
                    slidePrev: function (t = this.params.speed, e = !0, r) {
                        const i = this,
                            { params: n, animating: s, snapGrid: a, slidesGrid: o, rtlTranslate: l, enabled: h } = i;
                        if (!h) return i;
                        if (n.loop) {
                            if (s && n.loopPreventsSlide) return !1;
                            i.loopFix(), (i._clientLeft = i.$wrapperEl[0].clientLeft);
                        }
                        function c(t) {
                            return t < 0 ? -Math.floor(Math.abs(t)) : Math.floor(t);
                        }
                        const p = c(l ? i.translate : -i.translate),
                            d = a.map((t) => c(t));
                        let u = a[d.indexOf(p) - 1];
                        if (void 0 === u && n.cssMode) {
                            let t;
                            a.forEach((e, r) => {
                                p >= e && (t = r);
                            }),
                                void 0 !== t && (u = a[t > 0 ? t - 1 : t]);
                        }
                        let f = 0;
                        if (
                            (void 0 !== u &&
                                ((f = o.indexOf(u)),
                                f < 0 && (f = i.activeIndex - 1),
                                "auto" === n.slidesPerView && 1 === n.slidesPerGroup && n.slidesPerGroupAuto && ((f = f - i.slidesPerViewDynamic("previous", !0) + 1), (f = Math.max(f, 0)))),
                            n.rewind && i.isBeginning)
                        ) {
                            const n = i.params.virtual && i.params.virtual.enabled && i.virtual ? i.virtual.slides.length - 1 : i.slides.length - 1;
                            return i.slideTo(n, t, e, r);
                        }
                        return i.slideTo(f, t, e, r);
                    },
                    slideReset: function (t = this.params.speed, e = !0, r) {
                        return this.slideTo(this.activeIndex, t, e, r);
                    },
                    slideToClosest: function (t = this.params.speed, e = !0, r, i = 0.5) {
                        const n = this;
                        let s = n.activeIndex;
                        const a = Math.min(n.params.slidesPerGroupSkip, s),
                            o = a + Math.floor((s - a) / n.params.slidesPerGroup),
                            l = n.rtlTranslate ? n.translate : -n.translate;
                        if (l >= n.snapGrid[o]) {
                            const t = n.snapGrid[o];
                            l - t > (n.snapGrid[o + 1] - t) * i && (s += n.params.slidesPerGroup);
                        } else {
                            const t = n.snapGrid[o - 1];
                            l - t <= (n.snapGrid[o] - t) * i && (s -= n.params.slidesPerGroup);
                        }
                        return (s = Math.max(s, 0)), (s = Math.min(s, n.slidesGrid.length - 1)), n.slideTo(s, t, e, r);
                    },
                    slideToClickedSlide: function () {
                        const t = this,
                            { params: e, $wrapperEl: r } = t,
                            i = "auto" === e.slidesPerView ? t.slidesPerViewDynamic() : e.slidesPerView;
                        let n,
                            s = t.clickedIndex;
                        if (e.loop) {
                            if (t.animating) return;
                            (n = parseInt(y(t.clickedSlide).attr("data-swiper-slide-index"), 10)),
                                e.centeredSlides
                                    ? s < t.loopedSlides - i / 2 || s > t.slides.length - t.loopedSlides + i / 2
                                        ? (t.loopFix(),
                                          (s = r.children(`.${e.slideClass}[data-swiper-slide-index="${n}"]:not(.${e.slideDuplicateClass})`).eq(0).index()),
                                          g(() => {
                                              t.slideTo(s);
                                          }))
                                        : t.slideTo(s)
                                    : s > t.slides.length - i
                                    ? (t.loopFix(),
                                      (s = r.children(`.${e.slideClass}[data-swiper-slide-index="${n}"]:not(.${e.slideDuplicateClass})`).eq(0).index()),
                                      g(() => {
                                          t.slideTo(s);
                                      }))
                                    : t.slideTo(s);
                        } else t.slideTo(s);
                    },
                };
                function M(t) {
                    const e = this,
                        r = a(),
                        i = l(),
                        n = e.touchEventsData,
                        { params: s, touches: o, enabled: h } = e;
                    if (!h) return;
                    if (e.animating && s.preventInteractionOnTransition) return;
                    !e.animating && s.cssMode && s.loop && e.loopFix();
                    let c = t;
                    c.originalEvent && (c = c.originalEvent);
                    let p = y(c.target);
                    if ("wrapper" === s.touchEventsTarget && !p.closest(e.wrapperEl).length) return;
                    if (((n.isTouchEvent = "touchstart" === c.type), !n.isTouchEvent && "which" in c && 3 === c.which)) return;
                    if (!n.isTouchEvent && "button" in c && c.button > 0) return;
                    if (n.isTouched && n.isMoved) return;
                    const d = !!s.noSwipingClass && "" !== s.noSwipingClass,
                        u = t.composedPath ? t.composedPath() : t.path;
                    d && c.target && c.target.shadowRoot && u && (p = y(u[0]));
                    const f = s.noSwipingSelector ? s.noSwipingSelector : `.${s.noSwipingClass}`,
                        m = !(!c.target || !c.target.shadowRoot);
                    if (
                        s.noSwiping &&
                        (m
                            ? (function (t, e = this) {
                                  return (function e(r) {
                                      if (!r || r === a() || r === l()) return null;
                                      r.assignedSlot && (r = r.assignedSlot);
                                      const i = r.closest(t);
                                      return i || r.getRootNode ? i || e(r.getRootNode().host) : null;
                                  })(e);
                              })(f, p[0])
                            : p.closest(f)[0])
                    )
                        return void (e.allowClick = !0);
                    if (s.swipeHandler && !p.closest(s.swipeHandler)[0]) return;
                    (o.currentX = "touchstart" === c.type ? c.targetTouches[0].pageX : c.pageX), (o.currentY = "touchstart" === c.type ? c.targetTouches[0].pageY : c.pageY);
                    const g = o.currentX,
                        b = o.currentY,
                        _ = s.edgeSwipeDetection || s.iOSEdgeSwipeDetection,
                        w = s.edgeSwipeThreshold || s.iOSEdgeSwipeThreshold;
                    if (_ && (g <= w || g >= i.innerWidth - w)) {
                        if ("prevent" !== _) return;
                        t.preventDefault();
                    }
                    if (
                        (Object.assign(n, { isTouched: !0, isMoved: !1, allowTouchCallbacks: !0, isScrolling: void 0, startMoving: void 0 }),
                        (o.startX = g),
                        (o.startY = b),
                        (n.touchStartTime = v()),
                        (e.allowClick = !0),
                        e.updateSize(),
                        (e.swipeDirection = void 0),
                        s.threshold > 0 && (n.allowThresholdMove = !1),
                        "touchstart" !== c.type)
                    ) {
                        let t = !0;
                        p.is(n.focusableElements) && ((t = !1), "SELECT" === p[0].nodeName && (n.isTouched = !1)), r.activeElement && y(r.activeElement).is(n.focusableElements) && r.activeElement !== p[0] && r.activeElement.blur();
                        const i = t && e.allowTouchMove && s.touchStartPreventDefault;
                        (!s.touchStartForcePreventDefault && !i) || p[0].isContentEditable || c.preventDefault();
                    }
                    e.params.freeMode && e.params.freeMode.enabled && e.freeMode && e.animating && !s.cssMode && e.freeMode.onTouchStart(), e.emit("touchStart", c);
                }
                function D(t) {
                    const e = a(),
                        r = this,
                        i = r.touchEventsData,
                        { params: n, touches: s, rtlTranslate: o, enabled: l } = r;
                    if (!l) return;
                    let h = t;
                    if ((h.originalEvent && (h = h.originalEvent), !i.isTouched)) return void (i.startMoving && i.isScrolling && r.emit("touchMoveOpposite", h));
                    if (i.isTouchEvent && "touchmove" !== h.type) return;
                    const c = "touchmove" === h.type && h.targetTouches && (h.targetTouches[0] || h.changedTouches[0]),
                        p = "touchmove" === h.type ? c.pageX : h.pageX,
                        d = "touchmove" === h.type ? c.pageY : h.pageY;
                    if (h.preventedByNestedSwiper) return (s.startX = p), void (s.startY = d);
                    if (!r.allowTouchMove) return y(h.target).is(i.focusableElements) || (r.allowClick = !1), void (i.isTouched && (Object.assign(s, { startX: p, startY: d, currentX: p, currentY: d }), (i.touchStartTime = v())));
                    if (i.isTouchEvent && n.touchReleaseOnEdges && !n.loop)
                        if (r.isVertical()) {
                            if ((d < s.startY && r.translate <= r.maxTranslate()) || (d > s.startY && r.translate >= r.minTranslate())) return (i.isTouched = !1), void (i.isMoved = !1);
                        } else if ((p < s.startX && r.translate <= r.maxTranslate()) || (p > s.startX && r.translate >= r.minTranslate())) return;
                    if (i.isTouchEvent && e.activeElement && h.target === e.activeElement && y(h.target).is(i.focusableElements)) return (i.isMoved = !0), void (r.allowClick = !1);
                    if ((i.allowTouchCallbacks && r.emit("touchMove", h), h.targetTouches && h.targetTouches.length > 1)) return;
                    (s.currentX = p), (s.currentY = d);
                    const u = s.currentX - s.startX,
                        f = s.currentY - s.startY;
                    if (r.params.threshold && Math.sqrt(u ** 2 + f ** 2) < r.params.threshold) return;
                    if (void 0 === i.isScrolling) {
                        let t;
                        (r.isHorizontal() && s.currentY === s.startY) || (r.isVertical() && s.currentX === s.startX)
                            ? (i.isScrolling = !1)
                            : u * u + f * f >= 25 && ((t = (180 * Math.atan2(Math.abs(f), Math.abs(u))) / Math.PI), (i.isScrolling = r.isHorizontal() ? t > n.touchAngle : 90 - t > n.touchAngle));
                    }
                    if ((i.isScrolling && r.emit("touchMoveOpposite", h), void 0 === i.startMoving && ((s.currentX === s.startX && s.currentY === s.startY) || (i.startMoving = !0)), i.isScrolling)) return void (i.isTouched = !1);
                    if (!i.startMoving) return;
                    (r.allowClick = !1),
                        !n.cssMode && h.cancelable && h.preventDefault(),
                        n.touchMoveStopPropagation && !n.nested && h.stopPropagation(),
                        i.isMoved ||
                            (n.loop && !n.cssMode && r.loopFix(),
                            (i.startTranslate = r.getTranslate()),
                            r.setTransition(0),
                            r.animating && r.$wrapperEl.trigger("webkitTransitionEnd transitionend"),
                            (i.allowMomentumBounce = !1),
                            !n.grabCursor || (!0 !== r.allowSlideNext && !0 !== r.allowSlidePrev) || r.setGrabCursor(!0),
                            r.emit("sliderFirstMove", h)),
                        r.emit("sliderMove", h),
                        (i.isMoved = !0);
                    let m = r.isHorizontal() ? u : f;
                    (s.diff = m), (m *= n.touchRatio), o && (m = -m), (r.swipeDirection = m > 0 ? "prev" : "next"), (i.currentTranslate = m + i.startTranslate);
                    let g = !0,
                        b = n.resistanceRatio;
                    if (
                        (n.touchReleaseOnEdges && (b = 0),
                        m > 0 && i.currentTranslate > r.minTranslate()
                            ? ((g = !1), n.resistance && (i.currentTranslate = r.minTranslate() - 1 + (-r.minTranslate() + i.startTranslate + m) ** b))
                            : m < 0 && i.currentTranslate < r.maxTranslate() && ((g = !1), n.resistance && (i.currentTranslate = r.maxTranslate() + 1 - (r.maxTranslate() - i.startTranslate - m) ** b)),
                        g && (h.preventedByNestedSwiper = !0),
                        !r.allowSlideNext && "next" === r.swipeDirection && i.currentTranslate < i.startTranslate && (i.currentTranslate = i.startTranslate),
                        !r.allowSlidePrev && "prev" === r.swipeDirection && i.currentTranslate > i.startTranslate && (i.currentTranslate = i.startTranslate),
                        r.allowSlidePrev || r.allowSlideNext || (i.currentTranslate = i.startTranslate),
                        n.threshold > 0)
                    ) {
                        if (!(Math.abs(m) > n.threshold || i.allowThresholdMove)) return void (i.currentTranslate = i.startTranslate);
                        if (!i.allowThresholdMove)
                            return (i.allowThresholdMove = !0), (s.startX = s.currentX), (s.startY = s.currentY), (i.currentTranslate = i.startTranslate), void (s.diff = r.isHorizontal() ? s.currentX - s.startX : s.currentY - s.startY);
                    }
                    n.followFinger &&
                        !n.cssMode &&
                        (((n.freeMode && n.freeMode.enabled && r.freeMode) || n.watchSlidesProgress) && (r.updateActiveIndex(), r.updateSlidesClasses()),
                        r.params.freeMode && n.freeMode.enabled && r.freeMode && r.freeMode.onTouchMove(),
                        r.updateProgress(i.currentTranslate),
                        r.setTranslate(i.currentTranslate));
                }
                function F(t) {
                    const e = this,
                        r = e.touchEventsData,
                        { params: i, touches: n, rtlTranslate: s, slidesGrid: a, enabled: o } = e;
                    if (!o) return;
                    let l = t;
                    if ((l.originalEvent && (l = l.originalEvent), r.allowTouchCallbacks && e.emit("touchEnd", l), (r.allowTouchCallbacks = !1), !r.isTouched))
                        return r.isMoved && i.grabCursor && e.setGrabCursor(!1), (r.isMoved = !1), void (r.startMoving = !1);
                    i.grabCursor && r.isMoved && r.isTouched && (!0 === e.allowSlideNext || !0 === e.allowSlidePrev) && e.setGrabCursor(!1);
                    const h = v(),
                        c = h - r.touchStartTime;
                    if (e.allowClick) {
                        const t = l.path || (l.composedPath && l.composedPath());
                        e.updateClickedSlide((t && t[0]) || l.target), e.emit("tap click", l), c < 300 && h - r.lastClickTime < 300 && e.emit("doubleTap doubleClick", l);
                    }
                    if (
                        ((r.lastClickTime = v()),
                        g(() => {
                            e.destroyed || (e.allowClick = !0);
                        }),
                        !r.isTouched || !r.isMoved || !e.swipeDirection || 0 === n.diff || r.currentTranslate === r.startTranslate)
                    )
                        return (r.isTouched = !1), (r.isMoved = !1), void (r.startMoving = !1);
                    let p;
                    if (((r.isTouched = !1), (r.isMoved = !1), (r.startMoving = !1), (p = i.followFinger ? (s ? e.translate : -e.translate) : -r.currentTranslate), i.cssMode)) return;
                    if (e.params.freeMode && i.freeMode.enabled) return void e.freeMode.onTouchEnd({ currentPos: p });
                    let d = 0,
                        u = e.slidesSizesGrid[0];
                    for (let t = 0; t < a.length; t += t < i.slidesPerGroupSkip ? 1 : i.slidesPerGroup) {
                        const e = t < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup;
                        void 0 !== a[t + e] ? p >= a[t] && p < a[t + e] && ((d = t), (u = a[t + e] - a[t])) : p >= a[t] && ((d = t), (u = a[a.length - 1] - a[a.length - 2]));
                    }
                    let f = null,
                        m = null;
                    i.rewind && (e.isBeginning ? (m = e.params.virtual && e.params.virtual.enabled && e.virtual ? e.virtual.slides.length - 1 : e.slides.length - 1) : e.isEnd && (f = 0));
                    const y = (p - a[d]) / u,
                        b = d < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup;
                    if (c > i.longSwipesMs) {
                        if (!i.longSwipes) return void e.slideTo(e.activeIndex);
                        "next" === e.swipeDirection && (y >= i.longSwipesRatio ? e.slideTo(i.rewind && e.isEnd ? f : d + b) : e.slideTo(d)),
                            "prev" === e.swipeDirection && (y > 1 - i.longSwipesRatio ? e.slideTo(d + b) : null !== m && y < 0 && Math.abs(y) > i.longSwipesRatio ? e.slideTo(m) : e.slideTo(d));
                    } else {
                        if (!i.shortSwipes) return void e.slideTo(e.activeIndex);
                        !e.navigation || (l.target !== e.navigation.nextEl && l.target !== e.navigation.prevEl)
                            ? ("next" === e.swipeDirection && e.slideTo(null !== f ? f : d + b), "prev" === e.swipeDirection && e.slideTo(null !== m ? m : d))
                            : l.target === e.navigation.nextEl
                            ? e.slideTo(d + b)
                            : e.slideTo(d);
                    }
                }
                function L() {
                    const t = this,
                        { params: e, el: r } = t;
                    if (r && 0 === r.offsetWidth) return;
                    e.breakpoints && t.setBreakpoint();
                    const { allowSlideNext: i, allowSlidePrev: n, snapGrid: s } = t;
                    (t.allowSlideNext = !0),
                        (t.allowSlidePrev = !0),
                        t.updateSize(),
                        t.updateSlides(),
                        t.updateSlidesClasses(),
                        ("auto" === e.slidesPerView || e.slidesPerView > 1) && t.isEnd && !t.isBeginning && !t.params.centeredSlides ? t.slideTo(t.slides.length - 1, 0, !1, !0) : t.slideTo(t.activeIndex, 0, !1, !0),
                        t.autoplay && t.autoplay.running && t.autoplay.paused && t.autoplay.run(),
                        (t.allowSlidePrev = n),
                        (t.allowSlideNext = i),
                        t.params.watchOverflow && s !== t.snapGrid && t.checkOverflow();
                }
                function O(t) {
                    const e = this;
                    e.enabled && (e.allowClick || (e.params.preventClicks && t.preventDefault(), e.params.preventClicksPropagation && e.animating && (t.stopPropagation(), t.stopImmediatePropagation())));
                }
                function z() {
                    const t = this,
                        { wrapperEl: e, rtlTranslate: r, enabled: i } = t;
                    if (!i) return;
                    let n;
                    (t.previousTranslate = t.translate), t.isHorizontal() ? (t.translate = -e.scrollLeft) : (t.translate = -e.scrollTop), 0 === t.translate && (t.translate = 0), t.updateActiveIndex(), t.updateSlidesClasses();
                    const s = t.maxTranslate() - t.minTranslate();
                    (n = 0 === s ? 0 : (t.translate - t.minTranslate()) / s), n !== t.progress && t.updateProgress(r ? -t.translate : t.translate), t.emit("setTranslate", t.translate, !1);
                }
                let R = !1;
                function B() {}
                const $ = (t, e) => {
                        const r = a(),
                            { params: i, touchEvents: n, el: s, wrapperEl: o, device: l, support: h } = t,
                            c = !!i.nested,
                            p = "on" === e ? "addEventListener" : "removeEventListener",
                            d = e;
                        if (h.touch) {
                            const e = !("touchstart" !== n.start || !h.passiveListener || !i.passiveListeners) && { passive: !0, capture: !1 };
                            s[p](n.start, t.onTouchStart, e), s[p](n.move, t.onTouchMove, h.passiveListener ? { passive: !1, capture: c } : c), s[p](n.end, t.onTouchEnd, e), n.cancel && s[p](n.cancel, t.onTouchEnd, e);
                        } else s[p](n.start, t.onTouchStart, !1), r[p](n.move, t.onTouchMove, c), r[p](n.end, t.onTouchEnd, !1);
                        (i.preventClicks || i.preventClicksPropagation) && s[p]("click", t.onClick, !0),
                            i.cssMode && o[p]("scroll", t.onScroll),
                            i.updateOnWindowResize ? t[d](l.ios || l.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", L, !0) : t[d]("observerUpdate", L, !0);
                    },
                    N = {
                        attachEvents: function () {
                            const t = this,
                                e = a(),
                                { params: r, support: i } = t;
                            (t.onTouchStart = M.bind(t)),
                                (t.onTouchMove = D.bind(t)),
                                (t.onTouchEnd = F.bind(t)),
                                r.cssMode && (t.onScroll = z.bind(t)),
                                (t.onClick = O.bind(t)),
                                i.touch && !R && (e.addEventListener("touchstart", B), (R = !0)),
                                $(t, "on");
                        },
                        detachEvents: function () {
                            $(this, "off");
                        },
                    },
                    V = (t, e) => t.grid && e.grid && e.grid.rows > 1,
                    G = {
                        addClasses: function () {
                            const t = this,
                                { classNames: e, params: r, rtl: i, $el: n, device: s, support: a } = t,
                                o = (function (t, e) {
                                    const r = [];
                                    return (
                                        t.forEach((t) => {
                                            "object" == typeof t
                                                ? Object.keys(t).forEach((i) => {
                                                      t[i] && r.push(e + i);
                                                  })
                                                : "string" == typeof t && r.push(e + t);
                                        }),
                                        r
                                    );
                                })(
                                    [
                                        "initialized",
                                        r.direction,
                                        { "pointer-events": !a.touch },
                                        { "free-mode": t.params.freeMode && r.freeMode.enabled },
                                        { autoheight: r.autoHeight },
                                        { rtl: i },
                                        { grid: r.grid && r.grid.rows > 1 },
                                        { "grid-column": r.grid && r.grid.rows > 1 && "column" === r.grid.fill },
                                        { android: s.android },
                                        { ios: s.ios },
                                        { "css-mode": r.cssMode },
                                        { centered: r.cssMode && r.centeredSlides },
                                        { "watch-progress": r.watchSlidesProgress },
                                    ],
                                    r.containerModifierClass
                                );
                            e.push(...o), n.addClass([...e].join(" ")), t.emitContainerClasses();
                        },
                        removeClasses: function () {
                            const { $el: t, classNames: e } = this;
                            t.removeClass(e.join(" ")), this.emitContainerClasses();
                        },
                    },
                    j = {
                        init: !0,
                        direction: "horizontal",
                        touchEventsTarget: "wrapper",
                        initialSlide: 0,
                        speed: 300,
                        cssMode: !1,
                        updateOnWindowResize: !0,
                        resizeObserver: !0,
                        nested: !1,
                        createElements: !1,
                        enabled: !0,
                        focusableElements: "input, select, option, textarea, button, video, label",
                        width: null,
                        height: null,
                        preventInteractionOnTransition: !1,
                        userAgent: null,
                        url: null,
                        edgeSwipeDetection: !1,
                        edgeSwipeThreshold: 20,
                        autoHeight: !1,
                        setWrapperSize: !1,
                        virtualTranslate: !1,
                        effect: "slide",
                        breakpoints: void 0,
                        breakpointsBase: "window",
                        spaceBetween: 0,
                        slidesPerView: 1,
                        slidesPerGroup: 1,
                        slidesPerGroupSkip: 0,
                        slidesPerGroupAuto: !1,
                        centeredSlides: !1,
                        centeredSlidesBounds: !1,
                        slidesOffsetBefore: 0,
                        slidesOffsetAfter: 0,
                        normalizeSlideIndex: !0,
                        centerInsufficientSlides: !1,
                        watchOverflow: !0,
                        roundLengths: !1,
                        touchRatio: 1,
                        touchAngle: 45,
                        simulateTouch: !0,
                        shortSwipes: !0,
                        longSwipes: !0,
                        longSwipesRatio: 0.5,
                        longSwipesMs: 300,
                        followFinger: !0,
                        allowTouchMove: !0,
                        threshold: 0,
                        touchMoveStopPropagation: !1,
                        touchStartPreventDefault: !0,
                        touchStartForcePreventDefault: !1,
                        touchReleaseOnEdges: !1,
                        uniqueNavElements: !0,
                        resistance: !0,
                        resistanceRatio: 0.85,
                        watchSlidesProgress: !1,
                        grabCursor: !1,
                        preventClicks: !0,
                        preventClicksPropagation: !0,
                        slideToClickedSlide: !1,
                        preloadImages: !0,
                        updateOnImagesReady: !0,
                        loop: !1,
                        loopAdditionalSlides: 0,
                        loopedSlides: null,
                        loopedSlidesLimit: !0,
                        loopFillGroupWithBlank: !1,
                        loopPreventsSlide: !0,
                        rewind: !1,
                        allowSlidePrev: !0,
                        allowSlideNext: !0,
                        swipeHandler: null,
                        noSwiping: !0,
                        noSwipingClass: "swiper-no-swiping",
                        noSwipingSelector: null,
                        passiveListeners: !0,
                        maxBackfaceHiddenSlides: 10,
                        containerModifierClass: "swiper-",
                        slideClass: "swiper-slide",
                        slideBlankClass: "swiper-slide-invisible-blank",
                        slideActiveClass: "swiper-slide-active",
                        slideDuplicateActiveClass: "swiper-slide-duplicate-active",
                        slideVisibleClass: "swiper-slide-visible",
                        slideDuplicateClass: "swiper-slide-duplicate",
                        slideNextClass: "swiper-slide-next",
                        slideDuplicateNextClass: "swiper-slide-duplicate-next",
                        slidePrevClass: "swiper-slide-prev",
                        slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
                        wrapperClass: "swiper-wrapper",
                        runCallbacksOnInit: !0,
                        _emitClasses: !1,
                    };
                function q(t, e) {
                    return function (r = {}) {
                        const i = Object.keys(r)[0],
                            n = r[i];
                        "object" == typeof n && null !== n
                            ? (["navigation", "pagination", "scrollbar"].indexOf(i) >= 0 && !0 === t[i] && (t[i] = { auto: !0 }),
                              i in t && "enabled" in n ? (!0 === t[i] && (t[i] = { enabled: !0 }), "object" != typeof t[i] || "enabled" in t[i] || (t[i].enabled = !0), t[i] || (t[i] = { enabled: !1 }), _(e, r)) : _(e, r))
                            : _(e, r);
                    };
                }
                const H = {
                        eventsEmitter: A,
                        update: T,
                        translate: {
                            getTranslate: function (t = this.isHorizontal() ? "x" : "y") {
                                const { params: e, rtlTranslate: r, translate: i, $wrapperEl: n } = this;
                                if (e.virtualTranslate) return r ? -i : i;
                                if (e.cssMode) return i;
                                let s = (function (t, e = "x") {
                                    const r = l();
                                    let i, n, s;
                                    const a = (function (t) {
                                        const e = l();
                                        let r;
                                        return e.getComputedStyle && (r = e.getComputedStyle(t, null)), !r && t.currentStyle && (r = t.currentStyle), r || (r = t.style), r;
                                    })(t);
                                    return (
                                        r.WebKitCSSMatrix
                                            ? ((n = a.transform || a.webkitTransform),
                                              n.split(",").length > 6 &&
                                                  (n = n
                                                      .split(", ")
                                                      .map((t) => t.replace(",", "."))
                                                      .join(", ")),
                                              (s = new r.WebKitCSSMatrix("none" === n ? "" : n)))
                                            : ((s = a.MozTransform || a.OTransform || a.MsTransform || a.msTransform || a.transform || a.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,")),
                                              (i = s.toString().split(","))),
                                        "x" === e && (n = r.WebKitCSSMatrix ? s.m41 : 16 === i.length ? parseFloat(i[12]) : parseFloat(i[4])),
                                        "y" === e && (n = r.WebKitCSSMatrix ? s.m42 : 16 === i.length ? parseFloat(i[13]) : parseFloat(i[5])),
                                        n || 0
                                    );
                                })(n[0], t);
                                return r && (s = -s), s || 0;
                            },
                            setTranslate: function (t, e) {
                                const r = this,
                                    { rtlTranslate: i, params: n, $wrapperEl: s, wrapperEl: a, progress: o } = r;
                                let l,
                                    h = 0,
                                    c = 0;
                                r.isHorizontal() ? (h = i ? -t : t) : (c = t),
                                    n.roundLengths && ((h = Math.floor(h)), (c = Math.floor(c))),
                                    n.cssMode ? (a[r.isHorizontal() ? "scrollLeft" : "scrollTop"] = r.isHorizontal() ? -h : -c) : n.virtualTranslate || s.transform(`translate3d(${h}px, ${c}px, 0px)`),
                                    (r.previousTranslate = r.translate),
                                    (r.translate = r.isHorizontal() ? h : c);
                                const p = r.maxTranslate() - r.minTranslate();
                                (l = 0 === p ? 0 : (t - r.minTranslate()) / p), l !== o && r.updateProgress(t), r.emit("setTranslate", r.translate, e);
                            },
                            minTranslate: function () {
                                return -this.snapGrid[0];
                            },
                            maxTranslate: function () {
                                return -this.snapGrid[this.snapGrid.length - 1];
                            },
                            translateTo: function (t = 0, e = this.params.speed, r = !0, i = !0, n) {
                                const s = this,
                                    { params: a, wrapperEl: o } = s;
                                if (s.animating && a.preventInteractionOnTransition) return !1;
                                const l = s.minTranslate(),
                                    h = s.maxTranslate();
                                let c;
                                if (((c = i && t > l ? l : i && t < h ? h : t), s.updateProgress(c), a.cssMode)) {
                                    const t = s.isHorizontal();
                                    if (0 === e) o[t ? "scrollLeft" : "scrollTop"] = -c;
                                    else {
                                        if (!s.support.smoothScroll) return S({ swiper: s, targetPosition: -c, side: t ? "left" : "top" }), !0;
                                        o.scrollTo({ [t ? "left" : "top"]: -c, behavior: "smooth" });
                                    }
                                    return !0;
                                }
                                return (
                                    0 === e
                                        ? (s.setTransition(0), s.setTranslate(c), r && (s.emit("beforeTransitionStart", e, n), s.emit("transitionEnd")))
                                        : (s.setTransition(e),
                                          s.setTranslate(c),
                                          r && (s.emit("beforeTransitionStart", e, n), s.emit("transitionStart")),
                                          s.animating ||
                                              ((s.animating = !0),
                                              s.onTranslateToWrapperTransitionEnd ||
                                                  (s.onTranslateToWrapperTransitionEnd = function (t) {
                                                      s &&
                                                          !s.destroyed &&
                                                          t.target === this &&
                                                          (s.$wrapperEl[0].removeEventListener("transitionend", s.onTranslateToWrapperTransitionEnd),
                                                          s.$wrapperEl[0].removeEventListener("webkitTransitionEnd", s.onTranslateToWrapperTransitionEnd),
                                                          (s.onTranslateToWrapperTransitionEnd = null),
                                                          delete s.onTranslateToWrapperTransitionEnd,
                                                          r && s.emit("transitionEnd"));
                                                  }),
                                              s.$wrapperEl[0].addEventListener("transitionend", s.onTranslateToWrapperTransitionEnd),
                                              s.$wrapperEl[0].addEventListener("webkitTransitionEnd", s.onTranslateToWrapperTransitionEnd))),
                                    !0
                                );
                            },
                        },
                        transition: {
                            setTransition: function (t, e) {
                                const r = this;
                                r.params.cssMode || r.$wrapperEl.transition(t), r.emit("setTransition", t, e);
                            },
                            transitionStart: function (t = !0, e) {
                                const r = this,
                                    { params: i } = r;
                                i.cssMode || (i.autoHeight && r.updateAutoHeight(), C({ swiper: r, runCallbacks: t, direction: e, step: "Start" }));
                            },
                            transitionEnd: function (t = !0, e) {
                                const r = this,
                                    { params: i } = r;
                                (r.animating = !1), i.cssMode || (r.setTransition(0), C({ swiper: r, runCallbacks: t, direction: e, step: "End" }));
                            },
                        },
                        slide: I,
                        loop: {
                            loopCreate: function () {
                                const t = this,
                                    e = a(),
                                    { params: r, $wrapperEl: i } = t,
                                    n = i.children().length > 0 ? y(i.children()[0].parentNode) : i;
                                n.children(`.${r.slideClass}.${r.slideDuplicateClass}`).remove();
                                let s = n.children(`.${r.slideClass}`);
                                if (r.loopFillGroupWithBlank) {
                                    const t = r.slidesPerGroup - (s.length % r.slidesPerGroup);
                                    if (t !== r.slidesPerGroup) {
                                        for (let i = 0; i < t; i += 1) {
                                            const t = y(e.createElement("div")).addClass(`${r.slideClass} ${r.slideBlankClass}`);
                                            n.append(t);
                                        }
                                        s = n.children(`.${r.slideClass}`);
                                    }
                                }
                                "auto" !== r.slidesPerView || r.loopedSlides || (r.loopedSlides = s.length),
                                    (t.loopedSlides = Math.ceil(parseFloat(r.loopedSlides || r.slidesPerView, 10))),
                                    (t.loopedSlides += r.loopAdditionalSlides),
                                    t.loopedSlides > s.length && t.params.loopedSlidesLimit && (t.loopedSlides = s.length);
                                const o = [],
                                    l = [];
                                s.each((t, e) => {
                                    y(t).attr("data-swiper-slide-index", e);
                                });
                                for (let e = 0; e < t.loopedSlides; e += 1) {
                                    const t = e - Math.floor(e / s.length) * s.length;
                                    l.push(s.eq(t)[0]), o.unshift(s.eq(s.length - t - 1)[0]);
                                }
                                for (let t = 0; t < l.length; t += 1) n.append(y(l[t].cloneNode(!0)).addClass(r.slideDuplicateClass));
                                for (let t = o.length - 1; t >= 0; t -= 1) n.prepend(y(o[t].cloneNode(!0)).addClass(r.slideDuplicateClass));
                            },
                            loopFix: function () {
                                const t = this;
                                t.emit("beforeLoopFix");
                                const { activeIndex: e, slides: r, loopedSlides: i, allowSlidePrev: n, allowSlideNext: s, snapGrid: a, rtlTranslate: o } = t;
                                let l;
                                (t.allowSlidePrev = !0), (t.allowSlideNext = !0);
                                const h = -a[e] - t.getTranslate();
                                e < i
                                    ? ((l = r.length - 3 * i + e), (l += i), t.slideTo(l, 0, !1, !0) && 0 !== h && t.setTranslate((o ? -t.translate : t.translate) - h))
                                    : e >= r.length - i && ((l = -r.length + e + i), (l += i), t.slideTo(l, 0, !1, !0) && 0 !== h && t.setTranslate((o ? -t.translate : t.translate) - h)),
                                    (t.allowSlidePrev = n),
                                    (t.allowSlideNext = s),
                                    t.emit("loopFix");
                            },
                            loopDestroy: function () {
                                const { $wrapperEl: t, params: e, slides: r } = this;
                                t.children(`.${e.slideClass}.${e.slideDuplicateClass},.${e.slideClass}.${e.slideBlankClass}`).remove(), r.removeAttr("data-swiper-slide-index");
                            },
                        },
                        grabCursor: {
                            setGrabCursor: function (t) {
                                const e = this;
                                if (e.support.touch || !e.params.simulateTouch || (e.params.watchOverflow && e.isLocked) || e.params.cssMode) return;
                                const r = "container" === e.params.touchEventsTarget ? e.el : e.wrapperEl;
                                (r.style.cursor = "move"), (r.style.cursor = t ? "grabbing" : "grab");
                            },
                            unsetGrabCursor: function () {
                                const t = this;
                                t.support.touch || (t.params.watchOverflow && t.isLocked) || t.params.cssMode || (t["container" === t.params.touchEventsTarget ? "el" : "wrapperEl"].style.cursor = "");
                            },
                        },
                        events: N,
                        breakpoints: {
                            setBreakpoint: function () {
                                const t = this,
                                    { activeIndex: e, initialized: r, loopedSlides: i = 0, params: n, $el: s } = t,
                                    a = n.breakpoints;
                                if (!a || (a && 0 === Object.keys(a).length)) return;
                                const o = t.getBreakpoint(a, t.params.breakpointsBase, t.el);
                                if (!o || t.currentBreakpoint === o) return;
                                const l = (o in a ? a[o] : void 0) || t.originalParams,
                                    h = V(t, n),
                                    c = V(t, l),
                                    p = n.enabled;
                                h && !c
                                    ? (s.removeClass(`${n.containerModifierClass}grid ${n.containerModifierClass}grid-column`), t.emitContainerClasses())
                                    : !h &&
                                      c &&
                                      (s.addClass(`${n.containerModifierClass}grid`),
                                      ((l.grid.fill && "column" === l.grid.fill) || (!l.grid.fill && "column" === n.grid.fill)) && s.addClass(`${n.containerModifierClass}grid-column`),
                                      t.emitContainerClasses()),
                                    ["navigation", "pagination", "scrollbar"].forEach((e) => {
                                        const r = n[e] && n[e].enabled,
                                            i = l[e] && l[e].enabled;
                                        r && !i && t[e].disable(), !r && i && t[e].enable();
                                    });
                                const d = l.direction && l.direction !== n.direction,
                                    u = n.loop && (l.slidesPerView !== n.slidesPerView || d);
                                d && r && t.changeDirection(), _(t.params, l);
                                const f = t.params.enabled;
                                Object.assign(t, { allowTouchMove: t.params.allowTouchMove, allowSlideNext: t.params.allowSlideNext, allowSlidePrev: t.params.allowSlidePrev }),
                                    p && !f ? t.disable() : !p && f && t.enable(),
                                    (t.currentBreakpoint = o),
                                    t.emit("_beforeBreakpoint", l),
                                    u && r && (t.loopDestroy(), t.loopCreate(), t.updateSlides(), t.slideTo(e - i + t.loopedSlides, 0, !1)),
                                    t.emit("breakpoint", l);
                            },
                            getBreakpoint: function (t, e = "window", r) {
                                if (!t || ("container" === e && !r)) return;
                                let i = !1;
                                const n = l(),
                                    s = "window" === e ? n.innerHeight : r.clientHeight,
                                    a = Object.keys(t).map((t) => {
                                        if ("string" == typeof t && 0 === t.indexOf("@")) {
                                            const e = parseFloat(t.substr(1));
                                            return { value: s * e, point: t };
                                        }
                                        return { value: t, point: t };
                                    });
                                a.sort((t, e) => parseInt(t.value, 10) - parseInt(e.value, 10));
                                for (let t = 0; t < a.length; t += 1) {
                                    const { point: s, value: o } = a[t];
                                    "window" === e ? n.matchMedia(`(min-width: ${o}px)`).matches && (i = s) : o <= r.clientWidth && (i = s);
                                }
                                return i || "max";
                            },
                        },
                        checkOverflow: {
                            checkOverflow: function () {
                                const t = this,
                                    { isLocked: e, params: r } = t,
                                    { slidesOffsetBefore: i } = r;
                                if (i) {
                                    const e = t.slides.length - 1,
                                        r = t.slidesGrid[e] + t.slidesSizesGrid[e] + 2 * i;
                                    t.isLocked = t.size > r;
                                } else t.isLocked = 1 === t.snapGrid.length;
                                !0 === r.allowSlideNext && (t.allowSlideNext = !t.isLocked),
                                    !0 === r.allowSlidePrev && (t.allowSlidePrev = !t.isLocked),
                                    e && e !== t.isLocked && (t.isEnd = !1),
                                    e !== t.isLocked && t.emit(t.isLocked ? "lock" : "unlock");
                            },
                        },
                        classes: G,
                        images: {
                            loadImage: function (t, e, r, i, n, s) {
                                const a = l();
                                let o;
                                function h() {
                                    s && s();
                                }
                                y(t).parent("picture")[0] || (t.complete && n) ? h() : e ? ((o = new a.Image()), (o.onload = h), (o.onerror = h), i && (o.sizes = i), r && (o.srcset = r), e && (o.src = e)) : h();
                            },
                            preloadImages: function () {
                                const t = this;
                                function e() {
                                    null != t && t && !t.destroyed && (void 0 !== t.imagesLoaded && (t.imagesLoaded += 1), t.imagesLoaded === t.imagesToLoad.length && (t.params.updateOnImagesReady && t.update(), t.emit("imagesReady")));
                                }
                                t.imagesToLoad = t.$el.find("img");
                                for (let r = 0; r < t.imagesToLoad.length; r += 1) {
                                    const i = t.imagesToLoad[r];
                                    t.loadImage(i, i.currentSrc || i.getAttribute("src"), i.srcset || i.getAttribute("srcset"), i.sizes || i.getAttribute("sizes"), !0, e);
                                }
                            },
                        },
                    },
                    W = {};
                class U {
                    constructor(...t) {
                        let e, r;
                        if (
                            (1 === t.length && t[0].constructor && "Object" === Object.prototype.toString.call(t[0]).slice(8, -1) ? (r = t[0]) : ([e, r] = t),
                            r || (r = {}),
                            (r = _({}, r)),
                            e && !r.el && (r.el = e),
                            r.el && y(r.el).length > 1)
                        ) {
                            const t = [];
                            return (
                                y(r.el).each((e) => {
                                    const i = _({}, r, { el: e });
                                    t.push(new U(i));
                                }),
                                t
                            );
                        }
                        const i = this;
                        (i.__swiper__ = !0),
                            (i.support = k()),
                            (i.device = (function (t = {}) {
                                return (
                                    P ||
                                        (P = (function ({ userAgent: t } = {}) {
                                            const e = k(),
                                                r = l(),
                                                i = r.navigator.platform,
                                                n = t || r.navigator.userAgent,
                                                s = { ios: !1, android: !1 },
                                                a = r.screen.width,
                                                o = r.screen.height,
                                                h = n.match(/(Android);?[\s\/]+([\d.]+)?/);
                                            let c = n.match(/(iPad).*OS\s([\d_]+)/);
                                            const p = n.match(/(iPod)(.*OS\s([\d_]+))?/),
                                                d = !c && n.match(/(iPhone\sOS|iOS)\s([\d_]+)/),
                                                u = "Win32" === i;
                                            let f = "MacIntel" === i;
                                            return (
                                                !c &&
                                                    f &&
                                                    e.touch &&
                                                    ["1024x1366", "1366x1024", "834x1194", "1194x834", "834x1112", "1112x834", "768x1024", "1024x768", "820x1180", "1180x820", "810x1080", "1080x810"].indexOf(`${a}x${o}`) >= 0 &&
                                                    ((c = n.match(/(Version)\/([\d.]+)/)), c || (c = [0, 1, "13_0_0"]), (f = !1)),
                                                h && !u && ((s.os = "android"), (s.android = !0)),
                                                (c || d || p) && ((s.os = "ios"), (s.ios = !0)),
                                                s
                                            );
                                        })(t)),
                                    P
                                );
                            })({ userAgent: r.userAgent })),
                            (i.browser =
                                (x ||
                                    (x = (function () {
                                        const t = l();
                                        return {
                                            isSafari: (function () {
                                                const e = t.navigator.userAgent.toLowerCase();
                                                return e.indexOf("safari") >= 0 && e.indexOf("chrome") < 0 && e.indexOf("android") < 0;
                                            })(),
                                            isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(t.navigator.userAgent),
                                        };
                                    })()),
                                x)),
                            (i.eventsListeners = {}),
                            (i.eventsAnyListeners = []),
                            (i.modules = [...i.__modules__]),
                            r.modules && Array.isArray(r.modules) && i.modules.push(...r.modules);
                        const n = {};
                        i.modules.forEach((t) => {
                            t({ swiper: i, extendParams: q(r, n), on: i.on.bind(i), once: i.once.bind(i), off: i.off.bind(i), emit: i.emit.bind(i) });
                        });
                        const s = _({}, j, n);
                        return (
                            (i.params = _({}, s, W, r)),
                            (i.originalParams = _({}, i.params)),
                            (i.passedParams = _({}, r)),
                            i.params &&
                                i.params.on &&
                                Object.keys(i.params.on).forEach((t) => {
                                    i.on(t, i.params.on[t]);
                                }),
                            i.params && i.params.onAny && i.onAny(i.params.onAny),
                            (i.$ = y),
                            Object.assign(i, {
                                enabled: i.params.enabled,
                                el: e,
                                classNames: [],
                                slides: y(),
                                slidesGrid: [],
                                snapGrid: [],
                                slidesSizesGrid: [],
                                isHorizontal: () => "horizontal" === i.params.direction,
                                isVertical: () => "vertical" === i.params.direction,
                                activeIndex: 0,
                                realIndex: 0,
                                isBeginning: !0,
                                isEnd: !1,
                                translate: 0,
                                previousTranslate: 0,
                                progress: 0,
                                velocity: 0,
                                animating: !1,
                                allowSlideNext: i.params.allowSlideNext,
                                allowSlidePrev: i.params.allowSlidePrev,
                                touchEvents: (function () {
                                    const t = ["touchstart", "touchmove", "touchend", "touchcancel"],
                                        e = ["pointerdown", "pointermove", "pointerup"];
                                    return (
                                        (i.touchEventsTouch = { start: t[0], move: t[1], end: t[2], cancel: t[3] }),
                                        (i.touchEventsDesktop = { start: e[0], move: e[1], end: e[2] }),
                                        i.support.touch || !i.params.simulateTouch ? i.touchEventsTouch : i.touchEventsDesktop
                                    );
                                })(),
                                touchEventsData: {
                                    isTouched: void 0,
                                    isMoved: void 0,
                                    allowTouchCallbacks: void 0,
                                    touchStartTime: void 0,
                                    isScrolling: void 0,
                                    currentTranslate: void 0,
                                    startTranslate: void 0,
                                    allowThresholdMove: void 0,
                                    focusableElements: i.params.focusableElements,
                                    lastClickTime: v(),
                                    clickTimeout: void 0,
                                    velocities: [],
                                    allowMomentumBounce: void 0,
                                    isTouchEvent: void 0,
                                    startMoving: void 0,
                                },
                                allowClick: !0,
                                allowTouchMove: i.params.allowTouchMove,
                                touches: { startX: 0, startY: 0, currentX: 0, currentY: 0, diff: 0 },
                                imagesToLoad: [],
                                imagesLoaded: 0,
                            }),
                            i.emit("_swiper"),
                            i.params.init && i.init(),
                            i
                        );
                    }
                    enable() {
                        const t = this;
                        t.enabled || ((t.enabled = !0), t.params.grabCursor && t.setGrabCursor(), t.emit("enable"));
                    }
                    disable() {
                        const t = this;
                        t.enabled && ((t.enabled = !1), t.params.grabCursor && t.unsetGrabCursor(), t.emit("disable"));
                    }
                    setProgress(t, e) {
                        const r = this;
                        t = Math.min(Math.max(t, 0), 1);
                        const i = r.minTranslate(),
                            n = (r.maxTranslate() - i) * t + i;
                        r.translateTo(n, void 0 === e ? 0 : e), r.updateActiveIndex(), r.updateSlidesClasses();
                    }
                    emitContainerClasses() {
                        const t = this;
                        if (!t.params._emitClasses || !t.el) return;
                        const e = t.el.className.split(" ").filter((e) => 0 === e.indexOf("swiper") || 0 === e.indexOf(t.params.containerModifierClass));
                        t.emit("_containerClasses", e.join(" "));
                    }
                    getSlideClasses(t) {
                        const e = this;
                        return e.destroyed
                            ? ""
                            : t.className
                                  .split(" ")
                                  .filter((t) => 0 === t.indexOf("swiper-slide") || 0 === t.indexOf(e.params.slideClass))
                                  .join(" ");
                    }
                    emitSlidesClasses() {
                        const t = this;
                        if (!t.params._emitClasses || !t.el) return;
                        const e = [];
                        t.slides.each((r) => {
                            const i = t.getSlideClasses(r);
                            e.push({ slideEl: r, classNames: i }), t.emit("_slideClass", r, i);
                        }),
                            t.emit("_slideClasses", e);
                    }
                    slidesPerViewDynamic(t = "current", e = !1) {
                        const { params: r, slides: i, slidesGrid: n, slidesSizesGrid: s, size: a, activeIndex: o } = this;
                        let l = 1;
                        if (r.centeredSlides) {
                            let t,
                                e = i[o].swiperSlideSize;
                            for (let r = o + 1; r < i.length; r += 1) i[r] && !t && ((e += i[r].swiperSlideSize), (l += 1), e > a && (t = !0));
                            for (let r = o - 1; r >= 0; r -= 1) i[r] && !t && ((e += i[r].swiperSlideSize), (l += 1), e > a && (t = !0));
                        } else if ("current" === t) for (let t = o + 1; t < i.length; t += 1) (e ? n[t] + s[t] - n[o] < a : n[t] - n[o] < a) && (l += 1);
                        else for (let t = o - 1; t >= 0; t -= 1) n[o] - n[t] < a && (l += 1);
                        return l;
                    }
                    update() {
                        const t = this;
                        if (!t || t.destroyed) return;
                        const { snapGrid: e, params: r } = t;
                        function i() {
                            const e = t.rtlTranslate ? -1 * t.translate : t.translate,
                                r = Math.min(Math.max(e, t.maxTranslate()), t.minTranslate());
                            t.setTranslate(r), t.updateActiveIndex(), t.updateSlidesClasses();
                        }
                        let n;
                        r.breakpoints && t.setBreakpoint(),
                            t.updateSize(),
                            t.updateSlides(),
                            t.updateProgress(),
                            t.updateSlidesClasses(),
                            t.params.freeMode && t.params.freeMode.enabled
                                ? (i(), t.params.autoHeight && t.updateAutoHeight())
                                : ((n = ("auto" === t.params.slidesPerView || t.params.slidesPerView > 1) && t.isEnd && !t.params.centeredSlides ? t.slideTo(t.slides.length - 1, 0, !1, !0) : t.slideTo(t.activeIndex, 0, !1, !0)), n || i()),
                            r.watchOverflow && e !== t.snapGrid && t.checkOverflow(),
                            t.emit("update");
                    }
                    changeDirection(t, e = !0) {
                        const r = this,
                            i = r.params.direction;
                        return (
                            t || (t = "horizontal" === i ? "vertical" : "horizontal"),
                            t === i ||
                                ("horizontal" !== t && "vertical" !== t) ||
                                (r.$el.removeClass(`${r.params.containerModifierClass}${i}`).addClass(`${r.params.containerModifierClass}${t}`),
                                r.emitContainerClasses(),
                                (r.params.direction = t),
                                r.slides.each((e) => {
                                    "vertical" === t ? (e.style.width = "") : (e.style.height = "");
                                }),
                                r.emit("changeDirection"),
                                e && r.update()),
                            r
                        );
                    }
                    changeLanguageDirection(t) {
                        const e = this;
                        (e.rtl && "rtl" === t) ||
                            (!e.rtl && "ltr" === t) ||
                            ((e.rtl = "rtl" === t),
                            (e.rtlTranslate = "horizontal" === e.params.direction && e.rtl),
                            e.rtl ? (e.$el.addClass(`${e.params.containerModifierClass}rtl`), (e.el.dir = "rtl")) : (e.$el.removeClass(`${e.params.containerModifierClass}rtl`), (e.el.dir = "ltr")),
                            e.update());
                    }
                    mount(t) {
                        const e = this;
                        if (e.mounted) return !0;
                        const r = y(t || e.params.el);
                        if (!(t = r[0])) return !1;
                        t.swiper = e;
                        const i = () => `.${(e.params.wrapperClass || "").trim().split(" ").join(".")}`;
                        let n = (() => {
                            if (t && t.shadowRoot && t.shadowRoot.querySelector) {
                                const e = y(t.shadowRoot.querySelector(i()));
                                return (e.children = (t) => r.children(t)), e;
                            }
                            return r.children ? r.children(i()) : y(r).children(i());
                        })();
                        if (0 === n.length && e.params.createElements) {
                            const t = a().createElement("div");
                            (n = y(t)),
                                (t.className = e.params.wrapperClass),
                                r.append(t),
                                r.children(`.${e.params.slideClass}`).each((t) => {
                                    n.append(t);
                                });
                        }
                        return (
                            Object.assign(e, {
                                $el: r,
                                el: t,
                                $wrapperEl: n,
                                wrapperEl: n[0],
                                mounted: !0,
                                rtl: "rtl" === t.dir.toLowerCase() || "rtl" === r.css("direction"),
                                rtlTranslate: "horizontal" === e.params.direction && ("rtl" === t.dir.toLowerCase() || "rtl" === r.css("direction")),
                                wrongRTL: "-webkit-box" === n.css("display"),
                            }),
                            !0
                        );
                    }
                    init(t) {
                        const e = this;
                        return (
                            e.initialized ||
                                !1 === e.mount(t) ||
                                (e.emit("beforeInit"),
                                e.params.breakpoints && e.setBreakpoint(),
                                e.addClasses(),
                                e.params.loop && e.loopCreate(),
                                e.updateSize(),
                                e.updateSlides(),
                                e.params.watchOverflow && e.checkOverflow(),
                                e.params.grabCursor && e.enabled && e.setGrabCursor(),
                                e.params.preloadImages && e.preloadImages(),
                                e.params.loop ? e.slideTo(e.params.initialSlide + e.loopedSlides, 0, e.params.runCallbacksOnInit, !1, !0) : e.slideTo(e.params.initialSlide, 0, e.params.runCallbacksOnInit, !1, !0),
                                e.attachEvents(),
                                (e.initialized = !0),
                                e.emit("init"),
                                e.emit("afterInit")),
                            e
                        );
                    }
                    destroy(t = !0, e = !0) {
                        const r = this,
                            { params: i, $el: n, $wrapperEl: s, slides: a } = r;
                        return (
                            void 0 === r.params ||
                                r.destroyed ||
                                (r.emit("beforeDestroy"),
                                (r.initialized = !1),
                                r.detachEvents(),
                                i.loop && r.loopDestroy(),
                                e &&
                                    (r.removeClasses(),
                                    n.removeAttr("style"),
                                    s.removeAttr("style"),
                                    a && a.length && a.removeClass([i.slideVisibleClass, i.slideActiveClass, i.slideNextClass, i.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")),
                                r.emit("destroy"),
                                Object.keys(r.eventsListeners).forEach((t) => {
                                    r.off(t);
                                }),
                                !1 !== t &&
                                    ((r.$el[0].swiper = null),
                                    (function (t) {
                                        const e = t;
                                        Object.keys(e).forEach((t) => {
                                            try {
                                                e[t] = null;
                                            } catch (t) {}
                                            try {
                                                delete e[t];
                                            } catch (t) {}
                                        });
                                    })(r)),
                                (r.destroyed = !0)),
                            null
                        );
                    }
                    static extendDefaults(t) {
                        _(W, t);
                    }
                    static get extendedDefaults() {
                        return W;
                    }
                    static get defaults() {
                        return j;
                    }
                    static installModule(t) {
                        U.prototype.__modules__ || (U.prototype.__modules__ = []);
                        const e = U.prototype.__modules__;
                        "function" == typeof t && e.indexOf(t) < 0 && e.push(t);
                    }
                    static use(t) {
                        return Array.isArray(t) ? (t.forEach((t) => U.installModule(t)), U) : (U.installModule(t), U);
                    }
                }
                Object.keys(H).forEach((t) => {
                    Object.keys(H[t]).forEach((e) => {
                        U.prototype[e] = H[t][e];
                    });
                }),
                    U.use([
                        function ({ swiper: t, on: e, emit: r }) {
                            const i = l();
                            let n = null,
                                s = null;
                            const a = () => {
                                    t && !t.destroyed && t.initialized && (r("beforeResize"), r("resize"));
                                },
                                o = () => {
                                    t && !t.destroyed && t.initialized && r("orientationchange");
                                };
                            e("init", () => {
                                t.params.resizeObserver && void 0 !== i.ResizeObserver
                                    ? t &&
                                      !t.destroyed &&
                                      t.initialized &&
                                      ((n = new ResizeObserver((e) => {
                                          s = i.requestAnimationFrame(() => {
                                              const { width: r, height: i } = t;
                                              let n = r,
                                                  s = i;
                                              e.forEach(({ contentBoxSize: e, contentRect: r, target: i }) => {
                                                  (i && i !== t.el) || ((n = r ? r.width : (e[0] || e).inlineSize), (s = r ? r.height : (e[0] || e).blockSize));
                                              }),
                                                  (n === r && s === i) || a();
                                          });
                                      })),
                                      n.observe(t.el))
                                    : (i.addEventListener("resize", a), i.addEventListener("orientationchange", o));
                            }),
                                e("destroy", () => {
                                    s && i.cancelAnimationFrame(s), n && n.unobserve && t.el && (n.unobserve(t.el), (n = null)), i.removeEventListener("resize", a), i.removeEventListener("orientationchange", o);
                                });
                        },
                        function ({ swiper: t, extendParams: e, on: r, emit: i }) {
                            const n = [],
                                s = l(),
                                a = (t, e = {}) => {
                                    const r = new (s.MutationObserver || s.WebkitMutationObserver)((t) => {
                                        if (1 === t.length) return void i("observerUpdate", t[0]);
                                        const e = function () {
                                            i("observerUpdate", t[0]);
                                        };
                                        s.requestAnimationFrame ? s.requestAnimationFrame(e) : s.setTimeout(e, 0);
                                    });
                                    r.observe(t, { attributes: void 0 === e.attributes || e.attributes, childList: void 0 === e.childList || e.childList, characterData: void 0 === e.characterData || e.characterData }), n.push(r);
                                };
                            e({ observer: !1, observeParents: !1, observeSlideChildren: !1 }),
                                r("init", () => {
                                    if (t.params.observer) {
                                        if (t.params.observeParents) {
                                            const e = t.$el.parents();
                                            for (let t = 0; t < e.length; t += 1) a(e[t]);
                                        }
                                        a(t.$el[0], { childList: t.params.observeSlideChildren }), a(t.$wrapperEl[0], { attributes: !1 });
                                    }
                                }),
                                r("destroy", () => {
                                    n.forEach((t) => {
                                        t.disconnect();
                                    }),
                                        n.splice(0, n.length);
                                });
                        },
                    ]);
                const Z = U;
                function Y({ swiper: t, extendParams: e, on: r, emit: i }) {
                    let n;
                    function s() {
                        if (!t.size) return (t.autoplay.running = !1), void (t.autoplay.paused = !1);
                        const e = t.slides.eq(t.activeIndex);
                        let r = t.params.autoplay.delay;
                        e.attr("data-swiper-autoplay") && (r = e.attr("data-swiper-autoplay") || t.params.autoplay.delay),
                            clearTimeout(n),
                            (n = g(() => {
                                let e;
                                t.params.autoplay.reverseDirection
                                    ? t.params.loop
                                        ? (t.loopFix(), (e = t.slidePrev(t.params.speed, !0, !0)), i("autoplay"))
                                        : t.isBeginning
                                        ? t.params.autoplay.stopOnLastSlide
                                            ? l()
                                            : ((e = t.slideTo(t.slides.length - 1, t.params.speed, !0, !0)), i("autoplay"))
                                        : ((e = t.slidePrev(t.params.speed, !0, !0)), i("autoplay"))
                                    : t.params.loop
                                    ? (t.loopFix(), (e = t.slideNext(t.params.speed, !0, !0)), i("autoplay"))
                                    : t.isEnd
                                    ? t.params.autoplay.stopOnLastSlide
                                        ? l()
                                        : ((e = t.slideTo(0, t.params.speed, !0, !0)), i("autoplay"))
                                    : ((e = t.slideNext(t.params.speed, !0, !0)), i("autoplay")),
                                    ((t.params.cssMode && t.autoplay.running) || !1 === e) && s();
                            }, r));
                    }
                    function o() {
                        return void 0 === n && !t.autoplay.running && ((t.autoplay.running = !0), i("autoplayStart"), s(), !0);
                    }
                    function l() {
                        return !!t.autoplay.running && void 0 !== n && (n && (clearTimeout(n), (n = void 0)), (t.autoplay.running = !1), i("autoplayStop"), !0);
                    }
                    function h(e) {
                        t.autoplay.running &&
                            (t.autoplay.paused ||
                                (n && clearTimeout(n),
                                (t.autoplay.paused = !0),
                                0 !== e && t.params.autoplay.waitForTransition
                                    ? ["transitionend", "webkitTransitionEnd"].forEach((e) => {
                                          t.$wrapperEl[0].addEventListener(e, p);
                                      })
                                    : ((t.autoplay.paused = !1), s())));
                    }
                    function c() {
                        const e = a();
                        "hidden" === e.visibilityState && t.autoplay.running && h(), "visible" === e.visibilityState && t.autoplay.paused && (s(), (t.autoplay.paused = !1));
                    }
                    function p(e) {
                        t &&
                            !t.destroyed &&
                            t.$wrapperEl &&
                            e.target === t.$wrapperEl[0] &&
                            (["transitionend", "webkitTransitionEnd"].forEach((e) => {
                                t.$wrapperEl[0].removeEventListener(e, p);
                            }),
                            (t.autoplay.paused = !1),
                            t.autoplay.running ? s() : l());
                    }
                    function d() {
                        t.params.autoplay.disableOnInteraction ? l() : (i("autoplayPause"), h()),
                            ["transitionend", "webkitTransitionEnd"].forEach((e) => {
                                t.$wrapperEl[0].removeEventListener(e, p);
                            });
                    }
                    function u() {
                        t.params.autoplay.disableOnInteraction || ((t.autoplay.paused = !1), i("autoplayResume"), s());
                    }
                    (t.autoplay = { running: !1, paused: !1 }),
                        e({ autoplay: { enabled: !1, delay: 3e3, waitForTransition: !0, disableOnInteraction: !0, stopOnLastSlide: !1, reverseDirection: !1, pauseOnMouseEnter: !1 } }),
                        r("init", () => {
                            t.params.autoplay.enabled && (o(), a().addEventListener("visibilitychange", c), t.params.autoplay.pauseOnMouseEnter && (t.$el.on("mouseenter", d), t.$el.on("mouseleave", u)));
                        }),
                        r("beforeTransitionStart", (e, r, i) => {
                            t.autoplay.running && (i || !t.params.autoplay.disableOnInteraction ? t.autoplay.pause(r) : l());
                        }),
                        r("sliderFirstMove", () => {
                            t.autoplay.running && (t.params.autoplay.disableOnInteraction ? l() : h());
                        }),
                        r("touchEnd", () => {
                            t.params.cssMode && t.autoplay.paused && !t.params.autoplay.disableOnInteraction && s();
                        }),
                        r("destroy", () => {
                            t.$el.off("mouseenter", d), t.$el.off("mouseleave", u), t.autoplay.running && l(), a().removeEventListener("visibilitychange", c);
                        }),
                        Object.assign(t.autoplay, { pause: h, run: s, start: o, stop: l });
                }
                function X({ swiper: t, extendParams: e, emit: r, once: i }) {
                    e({ freeMode: { enabled: !1, momentum: !0, momentumRatio: 1, momentumBounce: !0, momentumBounceRatio: 1, momentumVelocityRatio: 1, sticky: !1, minimumVelocity: 0.02 } }),
                        Object.assign(t, {
                            freeMode: {
                                onTouchStart: function () {
                                    const e = t.getTranslate();
                                    t.setTranslate(e), t.setTransition(0), (t.touchEventsData.velocities.length = 0), t.freeMode.onTouchEnd({ currentPos: t.rtl ? t.translate : -t.translate });
                                },
                                onTouchMove: function () {
                                    const { touchEventsData: e, touches: r } = t;
                                    0 === e.velocities.length && e.velocities.push({ position: r[t.isHorizontal() ? "startX" : "startY"], time: e.touchStartTime }),
                                        e.velocities.push({ position: r[t.isHorizontal() ? "currentX" : "currentY"], time: v() });
                                },
                                onTouchEnd: function ({ currentPos: e }) {
                                    const { params: n, $wrapperEl: s, rtlTranslate: a, snapGrid: o, touchEventsData: l } = t,
                                        h = v() - l.touchStartTime;
                                    if (e < -t.minTranslate()) t.slideTo(t.activeIndex);
                                    else if (e > -t.maxTranslate()) t.slides.length < o.length ? t.slideTo(o.length - 1) : t.slideTo(t.slides.length - 1);
                                    else {
                                        if (n.freeMode.momentum) {
                                            if (l.velocities.length > 1) {
                                                const e = l.velocities.pop(),
                                                    r = l.velocities.pop(),
                                                    i = e.position - r.position,
                                                    s = e.time - r.time;
                                                (t.velocity = i / s), (t.velocity /= 2), Math.abs(t.velocity) < n.freeMode.minimumVelocity && (t.velocity = 0), (s > 150 || v() - e.time > 300) && (t.velocity = 0);
                                            } else t.velocity = 0;
                                            (t.velocity *= n.freeMode.momentumVelocityRatio), (l.velocities.length = 0);
                                            let e = 1e3 * n.freeMode.momentumRatio;
                                            const h = t.velocity * e;
                                            let c = t.translate + h;
                                            a && (c = -c);
                                            let p,
                                                d = !1;
                                            const u = 20 * Math.abs(t.velocity) * n.freeMode.momentumBounceRatio;
                                            let f;
                                            if (c < t.maxTranslate())
                                                n.freeMode.momentumBounce ? (c + t.maxTranslate() < -u && (c = t.maxTranslate() - u), (p = t.maxTranslate()), (d = !0), (l.allowMomentumBounce = !0)) : (c = t.maxTranslate()),
                                                    n.loop && n.centeredSlides && (f = !0);
                                            else if (c > t.minTranslate())
                                                n.freeMode.momentumBounce ? (c - t.minTranslate() > u && (c = t.minTranslate() + u), (p = t.minTranslate()), (d = !0), (l.allowMomentumBounce = !0)) : (c = t.minTranslate()),
                                                    n.loop && n.centeredSlides && (f = !0);
                                            else if (n.freeMode.sticky) {
                                                let e;
                                                for (let t = 0; t < o.length; t += 1)
                                                    if (o[t] > -c) {
                                                        e = t;
                                                        break;
                                                    }
                                                (c = Math.abs(o[e] - c) < Math.abs(o[e - 1] - c) || "next" === t.swipeDirection ? o[e] : o[e - 1]), (c = -c);
                                            }
                                            if (
                                                (f &&
                                                    i("transitionEnd", () => {
                                                        t.loopFix();
                                                    }),
                                                0 !== t.velocity)
                                            ) {
                                                if (((e = a ? Math.abs((-c - t.translate) / t.velocity) : Math.abs((c - t.translate) / t.velocity)), n.freeMode.sticky)) {
                                                    const r = Math.abs((a ? -c : c) - t.translate),
                                                        i = t.slidesSizesGrid[t.activeIndex];
                                                    e = r < i ? n.speed : r < 2 * i ? 1.5 * n.speed : 2.5 * n.speed;
                                                }
                                            } else if (n.freeMode.sticky) return void t.slideToClosest();
                                            n.freeMode.momentumBounce && d
                                                ? (t.updateProgress(p),
                                                  t.setTransition(e),
                                                  t.setTranslate(c),
                                                  t.transitionStart(!0, t.swipeDirection),
                                                  (t.animating = !0),
                                                  s.transitionEnd(() => {
                                                      t &&
                                                          !t.destroyed &&
                                                          l.allowMomentumBounce &&
                                                          (r("momentumBounce"),
                                                          t.setTransition(n.speed),
                                                          setTimeout(() => {
                                                              t.setTranslate(p),
                                                                  s.transitionEnd(() => {
                                                                      t && !t.destroyed && t.transitionEnd();
                                                                  });
                                                          }, 0));
                                                  }))
                                                : t.velocity
                                                ? (r("_freeModeNoMomentumRelease"),
                                                  t.updateProgress(c),
                                                  t.setTransition(e),
                                                  t.setTranslate(c),
                                                  t.transitionStart(!0, t.swipeDirection),
                                                  t.animating ||
                                                      ((t.animating = !0),
                                                      s.transitionEnd(() => {
                                                          t && !t.destroyed && t.transitionEnd();
                                                      })))
                                                : t.updateProgress(c),
                                                t.updateActiveIndex(),
                                                t.updateSlidesClasses();
                                        } else {
                                            if (n.freeMode.sticky) return void t.slideToClosest();
                                            n.freeMode && r("_freeModeNoMomentumRelease");
                                        }
                                        (!n.freeMode.momentum || h >= n.longSwipesMs) && (t.updateProgress(), t.updateActiveIndex(), t.updateSlidesClasses());
                                    }
                                },
                            },
                        });
                }
                let K, J, Q, tt, et, rt, it, nt, st, at, ot, lt, ht, ct, pt, dt;
                document.addEventListener("DOMContentLoaded", () => {
                    let t,
                        e = document.querySelector("#carousel.swiper");
                    if (null === e) return;
                    "videoCarousel" in e.dataset
                        ? ((t = new Z("#carousel.swiper", { grabCursor: !0, loop: !0, slidesPerView: "auto", centeredSlides: !0, breakpoints: { 640: {}, 768: {}, 1024: {}, 1280: {} } })), t.disable())
                        : ((t = new Z("#carousel.swiper", {
                              modules: [Y, X],
                              autoplay: { delay: 1, disableOnInteraction: !1 },
                              freeMode: !0,
                              grabCursor: !0,
                              loop: !0,
                              speed: 12e3,
                              slidesPerGroup: 6,
                              slidesPerView: 1.5,
                              spaceBetween: 20,
                              breakpoints: { 640: { slidesPerView: 2 }, 768: { slidesPerView: 3, spaceBetween: 30, speed: 15e3 }, 1024: { slidesPerView: 4 }, 1280: { slidesPerView: 4, spaceBetween: 40, speed: 2e4 } },
                          })),
                          t.autoplay.stop());
                    const r = () => {
                        e.querySelector(".swiper-slide-active video").play(),
                            setTimeout(() => {
                                e.querySelector(".swiper-slide-active video").pause(), t.slideNext();
                            }, 5e3);
                    };
                    let i = document.getElementById("influencer-carousel"),
                        n = new IntersectionObserver((i) => {
                            i[0].isIntersecting
                                ? "videoCarousel" in e.dataset
                                    ? (r(), t.enable(), t.on("slideChangeTransitionEnd", r))
                                    : t.autoplay.start()
                                : "videoCarousel" in e.dataset
                                ? (t.disable(), t.off("slideChange", r))
                                : t.autoplay.stop();
                        });
                    null !== i && n.observe(i);
                }),
                    r(136);
                const ut = () => {
                        0 !== ot && Q + 1 !== ot
                            ? (Array.from(K.children).forEach((t) => {
                                  t.classList.remove("ly-active");
                              }),
                              K.querySelector("[data-index='" + ot + "']").classList.add("ly-active"))
                            : null !== K.querySelector(".ly-active") && K.querySelector(".ly-active").classList.remove("ly-active");
                    },
                    ft = () => {
                        if (1024 <= ht) {
                            if (0 === ot || Q + 1 === ot) return void (null === K.querySelector(".ly-active") && (document.querySelector("#accordian-desktop-media-target").innerHTML = ""));
                            null !== document.querySelector("#accordian-desktop-media-target dotlottie-player") && document.querySelector("#accordian-desktop-media-target dotlottie-player").stop();
                            let t = K.querySelector(".ly-active .accordian-media").innerHTML;
                            (document.querySelector("#accordian-desktop-media-target").innerHTML = t),
                                document.querySelector("#accordian-desktop-media-target dotlottie-player").addEventListener("ready", () => {
                                    null !== document.querySelector("#accordian-desktop-media-target dotlottie-player") && document.querySelector("#accordian-desktop-media-target dotlottie-player").play();
                                });
                        } else
                            K.querySelectorAll(".accordian-media dotlottie-player").forEach((t) => {
                                t.stop();
                            }),
                                0 !== ot && Q + 1 !== ot && K.querySelector(".ly-active .accordian-media dotlottie-player").play();
                    },
                    mt = () => {
                        document.body.getBoundingClientRect().top > nt ? ("up" === st ? (at = !1) : ((st = "up"), (at = !0))) : "down" === st ? (at = !1) : ((st = "down"), (at = !0)),
                            (nt = document.body.getBoundingClientRect().top),
                            (() => {
                                if ("up" === st) {
                                    if (0 === ot) return ut(), void ft();
                                    let t;
                                    1 === ot
                                        ? ((t = K.querySelector(".accordian-item[data-index='" + ot + "']").getBoundingClientRect().top), 1024 <= ht && (t -= 100))
                                        : (t = K.querySelector(".accordian-item[data-index='" + (ot - 1) + "']").getBoundingClientRect().bottom),
                                        lt < t && ((ot -= 1), ut(), ft());
                                } else {
                                    if (Q + 1 === ot) return ut(), void ft();
                                    let t;
                                    Q === ot
                                        ? ((t = K.querySelector(".accordian-item[data-index='" + ot + "']").getBoundingClientRect().bottom), 1024 <= ht && (t += 150))
                                        : (t = K.querySelector(".accordian-item[data-index='" + (ot + 1) + "']").getBoundingClientRect().top),
                                        lt > t && ((ot += 1), ut(), ft());
                                }
                            })();
                    },
                    yt = (t) => {
                        t[0].isIntersecting ? document.addEventListener("scroll", mt) : document.removeEventListener("scroll", mt);
                    };
                document.addEventListener("DOMContentLoaded", () => {
                    (K = document.getElementById("accodian-items")),
                        (J = document.getElementById("feature-accordian")),
                        (Q = null !== K ? Array.from(K.children).length : 0),
                        (tt = document.querySelector('.accordian-item[data-index="' + Q + '"]')),
                        (et = document.querySelector("body > header")),
                        (rt = J ? J.querySelector("h2") : null),
                        (it = document.getElementById("accordian-desktop-media")),
                        (nt = 0),
                        (st = "down"),
                        (at = !1),
                        (ot = 0),
                        (lt = window.innerHeight / 2 + et.offsetHeight / 2),
                        (ht = window.innerWidth),
                        (ct = document.querySelector("#accordian-desktop-media dotlottie-player")),
                        (pt = ct ? ct.src : null),
                        (dt = new Audio(LOLLY_URL + "/audio/scrollwheel.mp3"));
                    let t = new IntersectionObserver(yt);
                    null !== it &&
                        null !== K &&
                        ((it.style.top = et.offsetHeight / 2 + "px"),
                        1024 <= ht &&
                            Array.from(K.children).forEach((t) => {
                                t.querySelector(".accordian-media").style.display = "none";
                            }),
                        t.observe(K));
                }),
                    r(843),
                    r(617),
                    r(577),
                    window.addEventListener("beforeunload", () => {
                        window.scrollTo(0, 0);
                    }),
                    (window.handleGetStarted = () => {
                        "/creators/" === window.location.pathname || "/creators" === window.location.pathname
                            ? window.open("https://creator.lolly.com/authentication/sign-up/", "_blank")
                            : (window.location.href = window.location.origin + "/get-started/"),
                            window.lpr && window.lpr("click", { email: null });
                    }),
                    (window.handleLogin = () => {
                        document.getElementById("login-choice").classList.toggle("hidden");
                    }),
                    (window.lollyGFormSuccess = () => {
                         window.dataLayer && window.dataLayer.push({ event: "successful_form_submission" }),
						window.lpr && window.lollyDataEmail && window.lpr("referral", { email: window.lollyDataEmail }),
						window.lpr && window.lollyDataPhone && window.lpr("referral", { phone: window.lollyDataPhone });
					let l = "https://calendly.com/lolly-com/book-a-demo/";
					 gtag('event', 'conversion', {'send_to': 'AW-834756789/YpzhCPGf4r8DELXBhY4D'});
					window.lollyDataLeadType && "Creator" === window.lollyDataLeadType && (window.location.href = "https://creator.lolly.com/authentication/sign-up/"),
						window.lollyDataEmail && (l = l + "?email=" + lollyDataEmail),
						window.lollyDataFullName && (l = l + "&name=" + encodeURIComponent(lollyDataFullName));
					let e = window.location.search;
					"" !== e && (l += e.replace("?", "&")),
						Calendly &&
							(document.getElementById("lp").remove(),
							document.getElementById("site-header").remove(),
							document.getElementById("calendly").classList.remove("hidden"),
							Calendly.initInlineWidget({ url: l, parentElement: document.getElementById("calendly") }));
				});
				

                 
            },
        },
        __webpack_module_cache__ = {},
        deferred;
    function __webpack_require__(t) {
        var e = __webpack_module_cache__[t];
        if (void 0 !== e) return e.exports;
        var r = (__webpack_module_cache__[t] = { exports: {} });
        return __webpack_modules__[t](r, r.exports, __webpack_require__), r.exports;
    }
    (__webpack_require__.m = __webpack_modules__),
        (deferred = []),
        (__webpack_require__.O = (t, e, r, i) => {
            if (!e) {
                var n = 1 / 0;
                for (l = 0; l < deferred.length; l++) {
                    (e = deferred[l][0]), (r = deferred[l][1]), (i = deferred[l][2]);
                    for (var s = !0, a = 0; a < e.length; a++) (!1 & i || n >= i) && Object.keys(__webpack_require__.O).every((t) => __webpack_require__.O[t](e[a])) ? e.splice(a--, 1) : ((s = !1), i < n && (n = i));
                    if (s) {
                        deferred.splice(l--, 1);
                        var o = r();
                        void 0 !== o && (t = o);
                    }
                }
                return t;
            }
            i = i || 0;
            for (var l = deferred.length; l > 0 && deferred[l - 1][2] > i; l--) deferred[l] = deferred[l - 1];
            deferred[l] = [e, r, i];
        }),
        (__webpack_require__.d = (t, e) => {
            for (var r in e) __webpack_require__.o(e, r) && !__webpack_require__.o(t, r) && Object.defineProperty(t, r, { enumerable: !0, get: e[r] });
        }),
        (__webpack_require__.g = (function () {
            if ("object" == typeof globalThis) return globalThis;
            try {
                return this || new Function("return this")();
            } catch (t) {
                if ("object" == typeof window) return window;
            }
        })()),
        (__webpack_require__.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e)),
        (() => {
            var t = { 514: 0, 205: 0 };
            __webpack_require__.O.j = (e) => 0 === t[e];
            var e = (e, r) => {
                    var i,
                        n,
                        s = r[0],
                        a = r[1],
                        o = r[2],
                        l = 0;
                    if (s.some((e) => 0 !== t[e])) {
                        for (i in a) __webpack_require__.o(a, i) && (__webpack_require__.m[i] = a[i]);
                        if (o) var h = o(__webpack_require__);
                    }
                    for (e && e(r); l < s.length; l++) (n = s[l]), __webpack_require__.o(t, n) && t[n] && t[n][0](), (t[n] = 0);
                    return __webpack_require__.O(h);
                },
                r = (self.webpackChunklolly_v2 = self.webpackChunklolly_v2 || []);
            r.forEach(e.bind(null, 0)), (r.push = e.bind(null, r.push.bind(r)));
        })();
    var __webpack_exports__ = __webpack_require__.O(void 0, [205], () => __webpack_require__(567));
    __webpack_exports__ = __webpack_require__.O(__webpack_exports__);
})();
//# sourceMappingURL=script.js.map
